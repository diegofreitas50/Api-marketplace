var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.455,1,2.425]],["body/controllers/AppController.html",[0,2.016,1,3.359,2,1.324,3,0.298,4,0.24,5,0.212,6,3.113,7,0.531,8,1.684,9,4.2,10,3.655,11,5.475,12,1.405,13,0.023,14,2.49,15,3.359,16,5.475,17,4.847,18,5.475,19,0.608,20,3.655,21,4.932,22,3.719,23,4.932,24,3.719,25,4.2,26,3.072,27,6.428,28,3.101,29,2.628,30,3.719,31,4.932,32,1.177,33,0.989,34,0.569,35,0.88,36,1.494,37,5.975,38,4.754,39,1.588,40,0.439,41,0.782,42,2.832,43,2.49,44,1.048,45,3.206,46,3.113,47,3.655,48,0.298,49,0.089,50,1.494,51,1.494,52,2.49,53,2.099,54,3.655,55,1.815,56,3.113,57,3.655,58,3.655,59,1.248,60,3.655,61,0.015,62,0.015]],["title/modules/AppModule.html",[63,1.216,64,2.425]],["body/modules/AppModule.html",[1,3.879,2,1.835,3,0.31,4,0.249,5,0.22,13,0.023,40,0.501,41,0.814,45,3.735,46,3.241,48,0.31,49,0.093,61,0.016,62,0.016,63,1.73,64,4.892,65,1.656,66,2.205,67,3.241,68,3.241,69,3.241,70,3.939,71,4.051,72,3.939,73,2.752,74,3.939,75,3.939,76,2.515,77,1.889,78,1.766,79,3.806,80,2.7,81,2.91,82,3.806,83,3.806,84,3.806,85,3.806,86,3.806,87,3.806,88,3.806,89,3.806,90,3.806]],["title/injectables/AppService.html",[45,2.045,91,1.021]],["body/injectables/AppService.html",[3,0.382,4,0.307,5,0.271,7,0.68,8,1.977,9,4.932,13,0.023,16,4.932,19,0.779,32,1.509,33,1.268,34,0.729,35,1.129,39,1.509,40,0.344,41,1.002,45,3.326,48,0.382,49,0.114,56,4.932,59,1.6,61,0.018,62,0.018,91,1.661,92,2.175,93,3.99,94,5.791,95,1.357,96,4.685,97,5.791,98,4.685,99,4.685,100,3.533]],["title/controllers/AuthController.html",[0,1.455,101,2.425]],["body/controllers/AuthController.html",[2,1.258,3,0.283,4,0.228,5,0.201,7,0.505,8,1.627,12,1.832,13,0.023,19,0.793,25,4.058,26,2.968,28,2.212,29,1.851,32,1.535,33,1.29,34,0.741,35,1.148,39,1.535,40,0.492,41,1.019,42,2.737,44,0.997,48,0.283,49,0.085,50,1.42,51,1.42,53,2.737,59,1.627,61,0.015,62,0.015,95,0.699,101,3.245,102,2.96,103,2.164,104,3.475,105,4.412,106,4.765,107,2.96,108,3.944,109,3.475,110,4.765,111,4.765,112,3.593,113,4.765,114,3.475,115,3.245,116,3.475,117,1.614,118,3.475,119,4.058,120,2.366,121,4.1,122,3.475,123,3.475,124,4.058,125,3.475,126,3.475,127,3.123,128,2.96,129,2.164,130,2.96,131,2.96,132,2.96,133,2.164,134,1.336,135,2.164,136,1.725,137,3.475,138,2.164,139,1.613,140,3.475,141,3.475,142,2.164,143,3.475,144,3.475,145,3.475,146,2.164,147,3.475,148,2.164,149,3.475,150,3.475]],["title/modules/AuthModule.html",[63,1.216,70,2.218]],["body/modules/AuthModule.html",[2,1.914,3,0.33,4,0.266,5,0.235,13,0.023,40,0.495,41,0.867,48,0.33,49,0.099,61,0.016,62,0.016,63,1.804,65,1.765,66,2.299,70,4.343,73,2.88,76,2.623,77,2.014,78,1.883,80,2.815,81,3.035,101,4.003,127,3.802,128,3.455,134,1.559,151,3.455,152,4.056,153,3.455,154,4.123,155,4.056,156,4.056,157,3.058,158,2.526,159,4.056,160,2.526,161,4.056,162,2.762,163,2.526,164,2.014,165,4.056,166,4.056,167,3.455,168,4.056,169,4.056,170,4.056]],["title/injectables/AuthService.html",[91,1.021,127,2.045]],["body/injectables/AuthService.html",[3,0.293,4,0.236,5,0.209,7,0.523,8,1.667,13,0.023,19,0.812,32,1.573,33,1.322,34,0.76,35,1.176,39,1.16,40,0.47,41,0.77,48,0.293,49,0.088,51,1.996,55,2.75,59,1.23,61,0.015,62,0.015,91,1.4,92,1.672,105,3.682,107,4.159,108,3.986,112,2.716,115,3.326,117,1.334,127,2.804,129,2.243,130,3.068,131,3.068,132,3.068,157,2.716,171,3.068,172,2.951,173,2.804,174,2.069,175,2.284,176,6.546,177,3.602,178,2.602,179,3.602,180,3.068,181,3.682,182,1.919,183,4.159,184,3.411,185,3.041,186,3.602,187,2.602,188,2.716,189,2.804,190,1.996,191,4.883,192,4.883,193,3.682,194,4.883,195,4.883,196,3.602,197,3.682,198,1.385,199,3.602,200,3.068]],["title/classes/Bag.html",[49,0.087,201,1.653]],["body/classes/Bag.html",[3,0.35,4,0.281,5,0.249,7,0.623,13,0.023,19,1.093,34,1.022,35,1.696,40,0.402,48,0.35,49,0.104,61,0.017,62,0.017,95,1.352,117,1.532,139,1.992,201,2.543,202,1.382,203,3.655,204,1.871,205,3.76,206,1.944,207,2.767,208,3.76,209,3.653,210,4.291,211,4.291,212,4.291,213,4.291,214,4.291,215,3.236,216,3.655,217,3.655]],["title/controllers/BagController.html",[0,1.455,218,2.425]],["body/controllers/BagController.html",[0,1.161,2,1.029,3,0.231,4,0.186,5,0.165,7,0.413,8,1.411,12,2.057,13,0.023,14,1.935,15,3.643,19,0.89,22,3.116,26,3.331,28,2.483,32,1.723,33,1.448,34,0.832,35,1.288,39,1.723,40,0.469,41,0.608,42,3.264,43,1.935,44,0.815,48,0.231,49,0.069,50,1.161,51,1.161,52,1.935,53,3.072,59,1.826,61,0.013,62,0.013,95,1.144,103,1.77,117,1.662,133,1.77,134,1.092,135,1.77,136,1.411,138,1.77,139,1.319,142,2.574,146,1.77,148,2.574,198,1.873,201,2.911,206,1.91,207,1.236,218,2.815,219,2.42,220,1.411,221,2.052,222,2.052,223,1.77,224,3.602,225,2.142,226,3.52,227,2.815,228,4.133,229,2.841,230,1.632,231,2.42,232,3.116,233,4.133,234,4.133,235,2.841,236,2.42,237,3.116,238,5.349,239,4.556,240,2.841,241,2.841,242,2.142,243,2.841,244,2.815,245,2.142,246,2.142,247,2.142,248,1.632,249,2.798,250,2.42,251,1.411,252,3.116,253,1.77,254,1.411,255,1.514,256,2.841,257,2.841,258,2.42,259,2.841,260,2.841,261,2.42,262,2.841,263,1.935,264,2.841,265,2.841,266,2.841,267,1.935,268,1.935,269,2.142,270,2.42,271,2.42,272,2.841]],["title/modules/BagModule.html",[63,1.216,71,2.218]],["body/modules/BagModule.html",[2,2.018,3,0.359,4,0.289,5,0.255,13,0.023,40,0.486,41,0.942,48,0.359,49,0.107,61,0.017,62,0.017,63,1.902,65,1.917,66,2.425,71,4.33,73,2.944,76,2.766,77,2.187,78,2.045,80,2.969,81,3.2,134,1.694,158,2.744,160,2.744,162,3.001,163,2.744,164,2.187,218,4.163,249,3.886,250,3.753,273,3.753,274,3.753,275,4.406,276,4.406,277,4.406]],["title/injectables/BagService.html",[91,1.021,249,2.045]],["body/injectables/BagService.html",[3,0.209,4,0.168,5,0.149,7,0.373,8,1.31,13,0.023,19,0.907,28,1.193,29,1.369,32,1.756,33,1.548,34,0.793,35,1.313,39,1.641,40,0.473,41,0.55,48,0.209,49,0.062,50,1.05,51,1.05,55,2.707,59,1.74,61,0.012,62,0.012,91,1.101,92,1.193,95,1.097,117,1.602,139,1.193,172,3.473,173,1.476,174,1.476,175,1.959,178,2.448,182,1.369,187,2.905,189,2.204,190,1.569,198,1.476,201,2.132,206,2.122,207,1.999,215,1.938,220,1.31,221,1.905,222,1.905,223,2.391,224,3.405,230,2.204,236,3.269,239,2.189,249,2.204,251,1.276,252,2.894,253,1.601,254,1.276,255,1.369,278,2.189,279,2.57,280,2.57,281,3.174,282,2.57,283,2.57,284,2.045,285,2.57,286,1.75,287,1.476,288,1.75,289,1.276,290,2.204,291,1.938,292,1.601,293,2.189,294,2.57,295,3.714,296,2.57,297,2.189,298,2.57,299,2.57,300,2.57,301,3.714,302,3.692,303,1.369,304,1.75,305,1.75,306,1.75,307,3.838,308,2.57,309,2.57,310,3.269,311,3.838,312,3.838,313,2.57,314,1.75,315,1.938,316,1.938,317,2.57,318,2.189,319,2.57,320,2.189,321,3.838,322,2.57,323,2.57,324,1.75,325,1.601,326,1.75,327,2.57,328,2.57,329,2.57,330,2.189,331,2.189]],["title/classes/Category.html",[49,0.087,332,1.897]],["body/classes/Category.html",[3,0.363,4,0.292,5,0.258,7,0.648,13,0.022,19,1.106,34,1.034,35,1.679,40,0.327,48,0.363,49,0.108,61,0.017,62,0.017,95,1.298,202,1.436,204,1.917,205,3.828,206,1.979,207,2.674,208,3.828,209,3.705,215,3.362,303,3.274,332,2.991,333,3.798,334,5.234,335,4.459,336,4.459,337,4.459,338,4.459,339,4.459]],["title/controllers/CategoryController.html",[0,1.455,340,2.425]],["body/controllers/CategoryController.html",[0,1.047,2,0.927,3,0.209,4,0.168,5,0.148,7,0.372,8,1.307,12,2.093,13,0.023,14,1.744,15,2.607,19,0.906,22,2.887,32,1.638,33,1.377,34,0.791,35,1.225,39,1.753,40,0.457,41,0.548,42,3.281,43,1.744,44,0.735,48,0.209,49,0.062,50,1.047,51,1.047,52,1.744,53,3.127,59,1.859,61,0.012,62,0.012,95,1.252,103,1.595,115,4.146,117,1.626,133,1.595,134,0.985,135,1.595,136,2.276,138,1.595,139,1.189,142,2.384,146,1.595,148,2.384,198,1.763,206,2.174,220,1.565,221,2.525,222,1.901,223,1.595,225,1.931,230,1.471,231,2.181,232,2.887,237,2.887,242,1.931,244,3.122,245,1.931,246,1.931,247,1.931,248,1.471,251,1.271,254,1.271,263,1.744,267,1.744,268,1.744,269,1.931,270,3.261,284,1.364,332,2.04,340,2.607,341,2.181,342,2.276,343,3.496,344,2.887,345,3.261,346,5.185,347,4.866,348,4.308,349,5.713,350,2.561,351,4.308,352,2.561,353,2.887,354,3.261,355,2.561,356,2.561,357,1.744,358,3.791,359,2.181,360,3.261,361,2.561,362,2.633,363,2.181,364,2.887,365,2.181,366,2.561,367,2.561,368,2.561,369,2.561,370,1.931,371,2.561,372,1.931,373,2.561,374,2.561]],["title/modules/CategoryModule.html",[63,1.216,72,2.218]],["body/modules/CategoryModule.html",[2,2.018,3,0.359,4,0.289,5,0.255,13,0.023,40,0.486,41,0.942,48,0.359,49,0.107,61,0.017,62,0.017,63,1.902,65,1.917,66,2.425,72,4.33,73,2.944,76,2.766,77,2.187,78,2.045,80,2.969,81,3.2,134,1.694,158,2.744,160,2.744,162,3.001,163,2.744,164,2.187,340,4.163,362,3.886,363,3.753,375,3.753,376,3.753,377,4.406,378,4.406,379,4.406]],["title/injectables/CategoryService.html",[91,1.021,362,2.045]],["body/injectables/CategoryService.html",[3,0.201,4,0.162,5,0.143,7,0.359,8,1.272,13,0.023,19,0.973,29,1.317,32,1.815,33,1.526,34,0.877,35,1.358,39,1.815,40,0.452,41,0.528,48,0.201,49,0.06,50,1.01,51,1.01,55,2.481,59,1.924,61,0.012,62,0.012,91,1.069,92,1.147,95,1.301,115,2.538,117,1.575,139,1.147,172,3.549,173,1.419,174,1.419,175,1.921,178,2.391,182,1.317,187,3.003,189,2.141,190,1.523,198,1.433,206,2.127,220,1.272,221,2.481,222,1.85,223,2.321,230,2.141,251,1.227,254,1.227,255,1.317,281,3.112,284,1.986,286,1.683,287,1.419,288,1.683,289,1.227,290,1.419,291,1.863,295,3.839,301,1.683,302,2.321,303,1.986,306,2.538,314,1.683,315,1.863,316,1.863,324,1.683,325,1.539,326,1.683,330,2.105,331,2.105,332,1.986,342,2.228,343,3.36,354,2.105,357,2.538,358,3.751,362,2.141,364,2.81,365,2.105,380,2.105,381,3.727,382,2.471,383,2.471,384,3.727,385,2.471,386,2.471,387,2.471,388,2.471,389,2.471,390,3.822,391,2.471,392,2.471,393,3.727,394,3.727,395,2.471,396,3.727,397,2.471,398,2.471,399,2.471,400,3.383,401,2.471,402,3.174,403,2.105,404,2.471,405,2.471,406,2.471,407,2.471,408,2.471,409,2.471,410,2.471]],["title/classes/CreateBagDto.html",[49,0.087,224,2.045]],["body/classes/CreateBagDto.html",[3,0.342,4,0.275,5,0.243,7,0.609,12,2.076,13,0.022,19,0.898,34,0.84,36,2.207,40,0.396,44,1.203,48,0.342,49,0.131,61,0.017,62,0.017,95,1.269,120,2.681,202,1.351,204,1.843,206,2.031,224,3.101,227,3.678,411,5.086,412,3.162,413,5.972,414,5.086,415,5.4,416,3.622,417,6.306,418,6.306,419,6.306,420,6.306,421,6.306,422,4.194,423,4.194,424,3.43,425,3.572,426,5.972,427,2.409]],["title/classes/CreateCategoryDto.html",[49,0.087,343,2.045]],["body/classes/CreateCategoryDto.html",[3,0.385,4,0.31,5,0.274,7,0.687,12,1.819,13,0.022,19,0.787,34,0.736,36,1.933,40,0.428,44,1.357,48,0.385,49,0.142,61,0.018,62,0.018,95,1.172,202,1.523,204,1.989,303,3.363,343,3.345,345,4.961,346,4.961,416,3.345,424,3.345,427,2.717,428,4.961,429,3.567,430,4.73,431,5.825,432,5.825,433,4.73,434,3.967]],["title/classes/CreateProductDto.html",[49,0.087,435,2.045]],["body/classes/CreateProductDto.html",[3,0.288,4,0.232,5,0.205,7,0.513,12,2.504,13,0.023,19,1.083,30,2.664,34,1.013,35,1.161,36,1.97,40,0.354,44,1.013,48,0.288,49,0.117,61,0.015,62,0.015,95,1.241,190,1.97,202,1.138,204,1.645,227,4.013,302,2.201,303,2.568,304,3.282,305,3.282,414,4.105,424,3.807,425,4.105,427,2.029,434,4.334,435,2.768,436,5.646,437,2.664,438,4.819,439,6.166,440,4.819,441,3.533,442,3.533,443,4.105,444,3.533,445,4.819,446,4.819,447,3.533,448,2.406,449,3.533,450,3.282,451,3.533,452,2.664,453,3.533,454,3.533,455,3.533,456,3.533,457,3.533,458,3.533,459,4.105,460,3.533,461,3.009,462,3.533,463,3.009,464,3.533,465,3.009,466,3.533,467,3.009,468,3.533,469,3.009,470,4.819,471,3.533,472,3.533]],["title/classes/CreateUserDto.html",[49,0.087,473,2.045]],["body/classes/CreateUserDto.html",[3,0.225,4,0.181,5,0.16,7,0.4,12,2.256,13,0.022,17,3.048,19,0.976,24,3.976,28,2.886,29,2.154,33,1.296,34,0.913,36,2.398,40,0.297,44,0.791,48,0.225,49,0.098,61,0.013,62,0.013,95,1.298,120,3.087,124,4.491,184,2.749,185,2.982,193,4.424,202,0.888,204,1.38,289,2.377,347,3.443,416,3.799,424,3.482,427,1.583,434,3.26,448,2.753,450,2.753,459,2.348,473,2.322,474,5.164,475,2.079,476,4.787,477,4.572,478,3.443,479,4.043,480,5.273,481,2.757,482,4.043,483,2.757,484,4.043,485,2.757,486,5.273,487,4.043,488,2.757,489,2.757,490,4.043,491,4.043,492,2.757,493,3.048,494,4.043,495,3.048,496,4.043,497,3.048,498,4.043,499,3.443,500,3.443,501,4.043,502,2.757,503,4.043,504,2.757,505,4.043,506,4.043,507,4.043,508,4.043,509,4.787,510,5.273,511,3.443,512,3.443,513,3.443,514,3.443,515,2.757,516,2.757,517,4.043,518,4.043,519,4.043,520,2.757,521,4.043,522,4.043,523,4.043,524,3.443,525,4.043,526,4.043,527,2.757,528,4.043,529,2.757,530,2.757,531,2.757,532,2.757,533,2.757,534,2.757,535,2.757,536,2.757,537,2.757]],["title/injectables/JwtStrategy.html",[91,1.021,154,2.218]],["body/injectables/JwtStrategy.html",[3,0.316,4,0.254,5,0.224,7,0.563,8,1.751,13,0.023,19,0.853,32,1.652,33,1.388,34,0.952,35,1.235,39,1.248,40,0.449,41,0.829,48,0.316,49,0.094,50,1.584,51,1.584,55,1.924,59,1.323,61,0.016,62,0.016,91,1.471,92,1.799,95,0.78,117,1.384,120,1.924,121,2.922,134,1.49,154,3.194,164,1.924,167,3.301,172,3.062,173,2.226,174,2.226,175,2.352,178,2.732,180,4.368,182,2.065,184,2.945,187,2.065,188,2.922,189,2.226,190,1.584,197,2.922,198,1.49,281,2.414,325,3.194,450,2.639,524,3.301,538,3.301,539,5.128,540,3.876,541,5.128,542,5.128,543,3.876,544,3.876,545,3.876,546,3.876,547,3.876,548,3.301,549,2.226,550,3.876,551,3.876,552,3.876,553,3.876,554,3.876,555,3.876,556,3.876,557,3.876,558,3.301]],["title/classes/LoginDto.html",[49,0.087,108,2.218]],["body/classes/LoginDto.html",[3,0.361,4,0.291,5,0.257,7,0.644,12,2.151,13,0.022,19,0.93,34,0.87,36,2.286,40,0.411,44,1.271,48,0.361,49,0.136,61,0.017,62,0.017,95,1.126,108,3.484,120,3.195,184,3.697,185,3.484,193,4.218,202,1.427,204,1.91,416,3.697,424,3.52,427,2.546,434,4.174,559,3.775,560,5.594,561,5.594,562,4.433,563,5.594,564,4.433,565,6.129,566,4.433,567,4.433]],["title/classes/LoginResponseDto.html",[49,0.087,129,2.218]],["body/classes/LoginResponseDto.html",[3,0.36,4,0.29,5,0.256,7,0.642,12,2.147,13,0.022,19,0.929,34,0.869,36,2.282,40,0.41,44,1.268,48,0.36,49,0.107,61,0.017,62,0.017,95,1.123,105,4.21,112,4.615,117,1.631,120,2.772,121,4.21,129,3.477,139,2.051,164,2.772,202,1.423,204,1.906,351,4.21,416,3.206,424,3.515,478,4.755,568,5.213,569,3.764,570,5.583,571,5.583,572,4.419,573,3.477,574,4.419]],["title/modules/PrismaModule.html",[63,1.216,73,1.549]],["body/modules/PrismaModule.html",[3,0.385,4,0.31,5,0.274,13,0.022,40,0.428,41,1.012,48,0.385,49,0.115,61,0.018,62,0.018,63,1.989,65,2.058,66,2.534,73,3.036,76,2.892,77,2.348,78,2.196,80,3.103,175,2.775,575,4.029,576,4.029,577,4.029,578,4.73,579,5.825,580,4.73]],["title/injectables/PrismaService.html",[91,1.021,175,1.369]],["body/injectables/PrismaService.html",[3,0.357,4,0.287,5,0.254,7,0.636,8,1.895,13,0.023,19,0.923,32,1.411,33,1.186,34,0.682,35,1.055,39,1.788,40,0.407,41,0.937,48,0.357,49,0.107,61,0.017,62,0.017,91,1.592,92,2.033,172,3.656,175,2.134,187,2.958,255,2.334,549,3.188,581,3.731,582,6.095,583,5.552,584,6.756,585,5.552,586,6.409,587,4.38,588,3.731,589,4.38,590,4.38,591,4.38,592,4.38,593,4.38]],["title/classes/Product.html",[49,0.087,207,1.549]],["body/classes/Product.html",[3,0.312,4,0.251,5,0.222,7,0.556,13,0.022,19,1.157,34,1.083,35,1.687,36,2.078,40,0.373,48,0.312,49,0.093,61,0.016,62,0.016,95,1.275,117,1.466,139,1.776,190,2.078,201,2.825,202,1.232,204,1.736,205,3.557,206,1.839,207,2.212,208,3.557,209,3.495,216,3.258,303,2.709,304,3.463,305,3.463,332,3.043,448,2.605,452,2.884,461,3.258,463,3.258,465,3.258,467,3.258,469,3.258,594,3.258,595,3.825,596,3.825,597,3.825,598,3.825,599,3.825,600,3.825,601,3.825,602,3.825,603,3.825,604,3.825,605,3.825,606,3.825,607,3.825,608,2.884,609,3.825,610,3.258]],["title/controllers/ProductController.html",[0,1.455,611,2.425]],["body/controllers/ProductController.html",[2,0.987,3,0.222,4,0.179,5,0.158,7,0.396,8,1.369,12,2.149,13,0.023,14,1.857,19,0.93,26,3.861,28,1.861,32,1.689,33,1.42,34,0.816,35,1.263,39,1.8,40,0.484,41,0.583,42,3.21,44,0.782,48,0.222,49,0.066,50,1.114,53,3.21,59,1.79,61,0.012,62,0.012,95,1.247,103,1.698,117,1.632,133,1.698,134,1.048,135,1.698,136,1.353,138,1.698,139,1.265,142,1.698,146,1.698,148,2.497,175,1.048,182,1.452,198,1.542,206,1.882,207,1.745,220,1.369,221,2.604,222,1.991,223,1.698,225,2.056,227,4.115,232,3.024,242,2.056,244,1.857,248,1.566,251,1.353,254,1.353,258,2.322,261,2.322,263,1.857,267,1.857,268,1.857,284,1.452,342,1.991,353,3.024,359,2.322,370,2.056,372,2.056,435,3.47,499,3.415,573,2.497,611,2.731,612,2.322,613,4.01,614,2.726,615,2.322,616,2.726,617,2.726,618,2.726,619,2.726,620,3.415,621,3.586,622,3.415,623,3.415,624,2.726,625,4.01,626,2.726,627,2.322,628,3.586,629,2.962,630,2.726,631,2.726,632,2.726,633,2.726,634,2.726,635,2.726,636,2.322,637,2.732,638,2.726,639,3.024,640,2.322,641,2.726,642,2.726,643,2.726,644,2.726,645,2.726,646,2.726,647,2.726,648,2.726,649,2.726,650,2.726,651,2.726,652,2.726]],["title/modules/ProductModule.html",[63,1.216,74,2.218]],["body/modules/ProductModule.html",[2,2.022,3,0.36,4,0.29,5,0.256,13,0.023,40,0.487,41,0.945,48,0.36,49,0.107,61,0.017,62,0.017,63,1.906,65,1.923,66,2.429,73,2.885,74,4.333,76,2.772,77,2.194,78,2.051,80,2.974,81,3.206,134,1.699,158,2.752,160,2.752,163,2.752,164,2.194,611,4.168,637,3.889,653,3.764,654,3.764,655,4.419,656,4.419,657,4.419,658,4.419,659,4.419]],["title/injectables/ProductService.html",[91,1.021,637,2.045]],["body/injectables/ProductService.html",[3,0.196,4,0.158,5,0.139,7,0.349,8,1.246,13,0.023,19,0.928,29,1.28,32,1.706,33,1.434,34,0.824,35,1.276,36,1.491,39,1.706,40,0.472,41,0.514,48,0.196,49,0.058,50,0.982,51,0.982,55,2.63,59,1.808,61,0.011,62,0.011,91,1.047,92,1.115,95,1.166,117,1.502,172,3.258,173,1.38,174,1.38,175,1.894,178,2.35,182,1.28,187,2.624,189,1.38,190,1.803,198,1.403,201,1.115,206,1.923,207,1.046,220,1.506,221,2.445,222,1.812,251,1.193,254,1.193,255,1.28,281,2.747,284,1.944,286,1.637,287,1.38,288,1.637,290,1.38,292,1.497,293,2.047,295,3.355,297,4.196,301,3.947,302,2.273,303,2.35,304,2.485,305,2.485,306,3.004,310,3.108,318,2.047,320,2.047,324,1.637,325,1.497,326,1.637,332,2.624,342,2.19,400,3.326,402,2.047,435,2.534,608,1.812,615,3.108,627,3.108,628,3.326,629,2.747,637,2.096,639,2.751,640,2.047,660,2.047,661,2.403,662,3.108,663,2.403,664,2.403,665,2.403,666,2.403,667,2.403,668,2.047,669,2.403,670,2.047,671,2.403,672,2.047,673,2.047,674,2.047,675,2.403,676,2.403,677,2.403,678,4.411,679,2.403,680,2.403,681,3.649,682,3.649,683,3.649,684,3.649,685,3.649,686,3.649,687,3.649,688,3.649,689,4.926,690,3.649,691,3.649,692,3.649,693,3.649,694,2.403,695,3.649,696,3.649,697,3.649,698,2.403,699,2.403]],["title/classes/UpdateBagDto.html",[49,0.087,253,2.218]],["body/classes/UpdateBagDto.html",[3,0.425,4,0.342,5,0.302,13,0.022,40,0.453,44,1.495,48,0.425,49,0.127,61,0.019,62,0.019,202,1.679,220,1.78,224,2.994,252,3.931,253,3.847,412,3.931,549,2.994,700,4.44,701,3.551,702,5.213]],["title/classes/UpdateCategoryDto.html",[49,0.087,358,2.218]],["body/classes/UpdateCategoryDto.html",[3,0.425,4,0.342,5,0.302,13,0.022,40,0.453,44,1.495,48,0.425,49,0.127,61,0.019,62,0.019,202,1.679,220,1.78,343,2.994,358,3.847,364,3.931,429,3.931,549,2.994,701,3.551,703,4.44,704,5.213]],["title/classes/UpdateProductDto.html",[49,0.087,629,2.218]],["body/classes/UpdateProductDto.html",[3,0.425,4,0.342,5,0.302,13,0.022,40,0.453,44,1.495,48,0.425,49,0.127,61,0.019,62,0.019,202,1.679,220,1.78,435,2.994,437,3.931,549,2.994,629,3.847,639,3.931,701,3.551,705,4.44,706,5.213]],["title/classes/UpdateUserDto.html",[49,0.087,707,2.218]],["body/classes/UpdateUserDto.html",[3,0.406,4,0.327,5,0.289,7,0.724,13,0.022,19,0.829,34,0.776,40,0.441,44,1.43,48,0.406,49,0.121,61,0.019,62,0.019,95,1.003,202,1.605,204,2.053,206,1.937,220,1.702,271,4.246,473,2.863,475,3.759,549,2.863,701,3.395,707,3.746,708,5.122,709,4.985,710,3.759,711,4.985]],["title/classes/User.html",[49,0.087,117,0.858]],["body/classes/User.html",[3,0.316,4,0.254,5,0.224,7,0.563,13,0.022,19,1.151,33,1.556,34,1.076,35,1.691,40,0.376,48,0.316,49,0.094,61,0.016,62,0.016,95,1.392,117,1.235,184,3.301,185,3.58,201,2.839,202,1.248,204,1.751,205,3.58,206,1.851,207,2.662,208,3.58,209,3.513,217,3.301,289,2.853,448,3.493,477,4.334,608,2.922,610,3.301,712,3.301,713,3.876,714,3.876,715,3.876,716,3.876,717,3.876,718,3.876,719,3.876,720,3.876,721,3.876,722,3.876,723,3.876]],["title/controllers/UserController.html",[0,1.455,724,2.425]],["body/controllers/UserController.html",[0,1.031,2,0.913,3,0.205,4,0.165,5,0.146,7,0.366,8,1.292,12,2.184,13,0.023,15,2.577,19,0.945,26,3.538,28,1.756,32,1.742,33,1.464,34,0.842,35,1.303,39,1.829,40,0.445,41,0.539,42,3.383,43,1.717,44,0.723,48,0.205,49,0.061,50,1.031,51,1.031,52,1.717,53,3.262,59,1.939,61,0.012,62,0.012,95,0.914,103,1.571,117,1.581,120,3.134,133,1.571,134,0.97,135,1.571,136,1.252,138,1.571,142,1.571,146,3.144,148,3.369,198,1.746,206,1.626,220,1.292,221,2.506,222,1.879,230,1.448,244,2.577,245,1.901,246,1.901,247,1.901,248,1.448,251,1.252,254,1.252,263,1.717,267,1.717,268,1.717,269,1.901,284,1.344,342,1.879,344,3.806,348,2.853,351,2.853,353,2.853,357,1.717,360,3.223,370,1.901,372,1.901,473,3.681,493,2.853,495,2.853,497,4.079,573,2.357,620,3.223,621,2.853,707,3.774,710,2.853,724,2.577,725,2.148,726,3.223,727,2.522,728,3.784,729,2.522,730,3.784,731,2.522,732,2.522,733,2.522,734,2.522,735,2.522,736,2.522,737,2.853,738,5.048,739,3.223,740,2.522,741,2.522,742,2.522,743,2.522,744,2.522,745,2.522,746,2.522,747,2.609,748,2.148,749,2.148,750,2.522,751,2.522,752,3.784,753,2.522,754,2.522,755,2.522,756,2.522,757,5.048,758,2.522,759,2.522,760,2.522,761,2.522,762,2.522,763,2.148,764,2.522,765,2.522]],["title/modules/UserModule.html",[63,1.216,75,2.218]],["body/modules/UserModule.html",[2,2.018,3,0.359,4,0.289,5,0.255,13,0.023,40,0.486,41,0.942,48,0.359,49,0.107,61,0.017,62,0.017,63,1.902,65,1.917,66,2.425,73,2.944,75,4.33,76,2.766,77,2.187,78,2.045,80,2.969,81,3.2,134,1.694,158,2.744,160,2.744,162,3.001,163,2.744,164,2.187,724,4.163,747,3.886,748,3.753,766,3.753,767,4.406,768,3.753,769,4.406,770,4.406]],["title/injectables/UserService.html",[91,1.021,747,2.045]],["body/injectables/UserService.html",[3,0.158,4,0.128,5,0.113,7,0.282,8,1.057,13,0.023,19,0.926,29,1.036,32,1.646,33,1.7,34,0.834,35,1.231,39,1.646,40,0.421,41,0.416,48,0.158,49,0.047,50,0.795,51,0.795,55,2.661,59,1.745,61,0.01,62,0.01,91,0.888,92,0.903,95,0.776,117,1.381,172,3.478,173,1.117,174,1.117,175,1.69,178,2.054,181,2.334,182,1.036,183,3.284,184,2.935,185,3.465,187,2.723,188,1.467,189,2.756,190,1.961,198,1.845,204,1.057,205,2.738,206,2.022,208,2.738,220,1.501,221,2.182,222,1.537,230,1.778,251,0.966,254,0.966,255,1.036,281,3.183,284,1.649,286,1.325,287,1.117,288,1.325,289,2.382,290,1.117,291,1.467,295,3.481,301,3.268,302,4.328,306,2.626,314,1.325,315,1.467,316,1.467,324,1.325,325,2.738,326,1.325,342,1.914,357,2.108,400,2.907,403,1.657,450,3.481,473,3.079,477,3.854,495,1.467,628,2.334,662,2.637,668,1.657,707,3.465,710,2.334,726,2.637,747,1.778,749,1.657,763,2.637,771,1.657,772,3.856,773,1.945,774,1.945,775,3.096,776,1.945,777,1.945,778,1.945,779,1.945,780,1.945,781,1.945,782,1.657,783,1.657,784,1.945,785,3.096,786,4.396,787,3.856,788,3.856,789,3.856,790,3.856,791,3.856,792,3.096,793,3.096,794,3.096,795,3.096,796,3.096,797,3.284,798,1.945,799,3.856,800,1.945,801,3.096,802,1.945,803,1.945,804,1.945,805,3.096,806,3.096,807,3.096,808,1.945,809,1.945,810,1.945]],["title/changelog.html",[811,2.03,812,2.03,813,2.539]],["body/changelog.html",[4,0.262,5,0.317,13,0.015,30,1.552,61,0.01,62,0.01,78,0.956,190,1.323,209,2.298,220,0.703,342,1.607,416,1.86,672,1.753,674,1.753,737,2.441,797,3.408,813,5.476,814,3.238,815,4.933,816,4.537,817,2.059,818,4.002,819,3.238,820,4.002,821,2.059,822,2.059,823,3.238,824,4.537,825,1.753,826,2.059,827,4.002,828,2.059,829,5.976,830,2.059,831,2.059,832,3.09,833,2.059,834,4.537,835,2.059,836,2.059,837,2.059,838,1.753,839,5.351,840,2.059,841,3.408,842,2.059,843,2.059,844,3.238,845,2.059,846,2.059,847,4.002,848,3.238,849,3.238,850,4.002,851,3.238,852,2.059,853,3.238,854,6.817,855,2.059,856,2.059,857,2.059,858,2.059,859,3.238,860,2.059,861,3.238,862,2.059,863,3.238,864,2.059,865,3.238,866,2.059,867,2.059,868,2.059,869,2.059,870,2.059,871,2.059,872,2.059,873,3.238,874,3.238,875,2.059,876,2.059,877,2.059,878,2.059,879,2.059,880,2.059,881,2.059,882,2.059,883,2.059,884,2.059,885,2.059,886,2.059,887,5.238,888,3.408,889,1.753,890,2.059,891,4.933,892,5.676,893,2.059,894,2.758,895,2.059,896,2.059,897,2.059,898,3.238,899,2.059,900,2.059,901,2.059,902,2.059,903,4.002,904,2.758,905,3.238,906,3.238,907,2.059,908,2.059,909,2.059,910,2.059,911,2.059,912,4.002,913,4.002,914,3.238,915,1.753,916,3.238,917,2.758,918,2.059,919,2.059,920,3.238,921,1.753,922,2.059,923,3.238,924,5.676,925,5.238,926,2.059,927,3.238,928,2.059,929,2.758,930,2.059,931,4.933,932,4.002,933,2.059,934,2.059,935,2.059,936,2.059,937,2.059,938,3.238,939,2.059,940,2.059,941,2.059,942,2.059,943,4.002,944,2.059,945,2.059,946,2.059,947,2.059,948,2.059,949,2.059,950,2.059,951,2.059,952,1.753,953,2.059,954,2.059,955,2.059,956,3.238,957,2.059,958,2.059,959,2.059,960,3.864,961,2.059,962,2.059,963,1.753,964,2.059,965,2.059,966,1.753,967,2.059,968,2.059,969,2.059,970,2.059,971,3.238,972,2.059,973,2.059,974,3.238,975,2.059,976,2.059,977,2.059,978,2.059,979,2.059,980,2.059,981,2.059,982,3.238,983,2.059,984,2.059,985,2.059,986,2.059,987,2.059,988,5.238,989,2.059,990,3.238,991,2.059,992,4.002,993,4.002,994,2.059,995,3.238,996,2.059,997,2.059,998,2.059,999,1.753,1000,2.059,1001,1.753,1002,2.059,1003,2.059,1004,3.238,1005,2.059,1006,3.238,1007,1.753,1008,2.059,1009,2.059,1010,2.059,1011,2.059,1012,2.059,1013,1.753,1014,2.059,1015,2.758,1016,2.059,1017,3.238,1018,2.059,1019,2.059,1020,1.753,1021,2.059,1022,2.059,1023,2.059,1024,1.753,1025,2.059,1026,2.059,1027,2.059,1028,2.059,1029,2.059,1030,2.059,1031,2.059,1032,2.059,1033,2.059,1034,2.059,1035,1.753,1036,2.059,1037,2.059,1038,2.059,1039,2.059,1040,2.059,1041,2.059,1042,2.059,1043,2.059,1044,1.753,1045,2.059,1046,2.059,1047,2.059,1048,2.059,1049,1.753,1050,2.059,1051,2.059,1052,2.059,1053,3.238,1054,2.059,1055,2.059,1056,1.753,1057,2.059,1058,2.059,1059,1.753]],["title/coverage.html",[1060,4.127]],["body/coverage.html",[0,2.494,1,2.105,5,0.179,6,2.632,13,0.023,34,0.481,45,1.775,49,0.167,61,0.014,62,0.014,91,1.84,93,2.632,101,2.105,102,2.632,108,1.925,117,0.744,127,1.775,129,1.925,136,1.534,154,1.925,171,2.632,175,1.188,190,1.263,201,1.434,203,2.632,207,1.345,218,2.105,219,2.632,224,1.775,248,1.775,249,1.775,253,1.925,278,2.632,287,1.775,289,1.534,290,2.522,292,1.925,314,4.937,332,1.647,333,2.632,340,2.105,341,2.632,343,1.775,358,1.925,362,1.775,380,2.632,411,2.632,412,3.311,428,2.632,429,3.311,435,1.775,436,2.632,437,3.311,473,1.775,474,2.632,475,3.311,538,2.632,559,2.632,568,2.632,569,2.632,581,2.632,594,2.632,611,2.105,612,2.632,629,1.925,637,1.775,660,2.632,700,2.632,703,2.632,705,2.632,707,1.925,708,2.632,712,2.632,724,2.105,725,2.632,747,1.775,771,2.632,1007,4.735,1060,2.632,1061,3.09,1062,3.09,1063,3.09,1064,6.276,1065,2.632,1066,3.09,1067,6.414,1068,3.09,1069,5.873,1070,4.391,1071,5.107,1072,3.09,1073,5.107,1074,3.09,1075,3.09,1076,2.632,1077,3.09,1078,2.632,1079,2.632,1080,2.632,1081,2.632,1082,2.632,1083,3.09,1084,3.09]],["title/dependencies.html",[66,1.862,1085,2.539]],["body/dependencies.html",[13,0.023,38,4.894,41,0.989,44,1.327,49,0.14,61,0.018,62,0.018,66,2.013,134,1.779,157,3.489,164,2.297,181,3.489,255,2.465,427,2.657,548,5.323,673,3.941,825,3.941,1086,6.249,1087,4.627,1088,4.627,1089,4.627,1090,4.627,1091,4.627,1092,4.627,1093,4.627,1094,4.627,1095,4.627,1096,4.627,1097,4.627,1098,4.627,1099,3.941,1100,4.627,1101,4.627,1102,4.627,1103,4.627,1104,4.627,1105,4.627,1106,3.489,1107,4.627,1108,4.627]],["title/miscellaneous/functions.html",[1109,1.857,1110,3.645]],["body/miscellaneous/functions.html",[7,0.676,13,0.021,32,2.018,33,1.696,34,0.975,35,1.51,39,1.499,61,0.018,62,0.018,95,1.161,117,1.653,200,3.965,206,1.857,287,3.313,289,2.863,290,3.313,292,3.592,390,3.965,670,5.338,1078,3.965,1079,5.338,1080,3.965,1081,4.913,1082,4.913,1109,2.9,1110,3.965,1111,4.656,1112,4.656,1113,5.768,1114,4.656,1115,4.656]],["title/index.html",[7,0.433,811,2.03,812,2.03]],["body/index.html",[13,0.021,17,3.136,18,3.542,28,1.93,61,0.017,62,0.017,100,3.136,119,5.066,178,2.216,348,3.136,443,4.574,500,3.542,511,3.542,512,3.542,513,3.542,514,3.542,558,3.542,573,2.59,588,3.542,832,2.832,888,3.542,1044,5.066,1099,3.542,1106,3.136,1116,5.948,1117,5.948,1118,3.542,1119,5.37,1120,5.37,1121,5.37,1122,4.159,1123,4.159,1124,4.159,1125,4.159,1126,4.159,1127,6.286,1128,4.159,1129,4.159,1130,3.542,1131,4.159,1132,4.159,1133,4.159,1134,4.159,1135,5.948,1136,4.159,1137,5.37,1138,4.159,1139,4.159,1140,4.159,1141,4.159,1142,4.159,1143,4.159,1144,4.159,1145,4.159,1146,4.159,1147,4.159,1148,4.159,1149,4.159,1150,5.948,1151,4.159,1152,4.159,1153,4.159,1154,5.37,1155,4.159,1156,3.542,1157,3.542,1158,2.832,1159,3.542,1160,4.159,1161,4.159,1162,4.159,1163,4.159]],["title/license.html",[811,2.03,812,2.03,1158,2.03]],["body/license.html",[4,0.364,5,0.215,13,0.02,19,0.152,33,0.247,36,0.665,40,0.119,61,0.007,62,0.005,117,0.219,190,1.257,209,0.934,220,1.05,452,0.687,636,0.776,737,1.226,832,3.608,838,2.907,839,3.875,841,2.281,889,0.776,894,0.776,904,0.776,915,0.776,917,1.876,921,2.907,929,0.776,952,0.776,963,1.385,966,0.776,999,0.776,1001,1.876,1013,0.776,1015,1.385,1020,0.776,1024,0.776,1049,0.776,1056,3.155,1059,1.385,1076,0.776,1109,0.567,1156,2.281,1157,2.907,1158,4.646,1159,2.281,1164,0.911,1165,1.626,1166,6.236,1167,5.387,1168,3.414,1169,1.626,1170,2.678,1171,3.414,1172,0.911,1173,0.911,1174,0.911,1175,0.911,1176,6.298,1177,6.354,1178,0.911,1179,2.203,1180,3.957,1181,0.911,1182,1.626,1183,3.414,1184,0.911,1185,3.076,1186,0.911,1187,0.911,1188,5.619,1189,6.051,1190,2.203,1191,2.203,1192,4.55,1193,3.076,1194,3.704,1195,6.167,1196,3.414,1197,0.911,1198,0.911,1199,0.911,1200,0.911,1201,3.414,1202,4.707,1203,4.848,1204,2.203,1205,4.55,1206,2.678,1207,2.203,1208,6.267,1209,5.548,1210,0.911,1211,0.911,1212,4.55,1213,0.911,1214,3.414,1215,0.911,1216,0.911,1217,0.911,1218,0.911,1219,0.911,1220,0.911,1221,0.911,1222,2.203,1223,1.626,1224,1.626,1225,3.414,1226,1.626,1227,3.414,1228,2.203,1229,2.203,1230,1.626,1231,0.911,1232,4.976,1233,1.626,1234,0.911,1235,0.911,1236,0.911,1237,0.911,1238,0.911,1239,0.911,1240,4.375,1241,3.957,1242,0.911,1243,3.076,1244,3.957,1245,0.911,1246,0.911,1247,1.626,1248,0.911,1249,0.911,1250,1.626,1251,1.626,1252,0.911,1253,2.203,1254,2.203,1255,0.911,1256,3.076,1257,0.911,1258,0.911,1259,0.911,1260,0.911,1261,0.911,1262,0.911,1263,0.911,1264,0.911,1265,0.911,1266,0.911,1267,0.911,1268,0.911,1269,1.626,1270,0.911,1271,0.911,1272,0.911,1273,1.626,1274,1.626,1275,0.911,1276,0.911,1277,0.911,1278,2.203,1279,2.678,1280,2.203,1281,2.678,1282,0.911,1283,0.911,1284,0.911,1285,0.911,1286,0.911,1287,3.414,1288,2.203,1289,1.626,1290,0.911,1291,0.911,1292,1.626,1293,3.076,1294,0.911,1295,0.911,1296,0.911,1297,0.911,1298,0.911,1299,1.626,1300,0.911,1301,0.911,1302,4.179,1303,0.911,1304,0.911,1305,2.678,1306,2.203,1307,0.911,1308,2.203,1309,0.911,1310,1.626,1311,4.179,1312,2.203,1313,2.203,1314,1.626,1315,1.626,1316,0.911,1317,2.678,1318,0.911,1319,0.911,1320,3.076,1321,1.626,1322,3.414,1323,0.911,1324,0.911,1325,0.911,1326,2.203,1327,0.911,1328,0.911,1329,0.911,1330,2.203,1331,0.911,1332,3.704,1333,0.911,1334,0.911,1335,0.911,1336,0.911,1337,0.911,1338,0.911,1339,2.203,1340,3.414,1341,1.626,1342,2.203,1343,0.911,1344,2.203,1345,1.626,1346,1.626,1347,0.911,1348,1.626,1349,1.626,1350,2.203,1351,0.911,1352,0.911,1353,1.626,1354,0.911,1355,0.911,1356,0.911,1357,0.911,1358,0.911,1359,2.203,1360,0.911,1361,1.626,1362,1.626,1363,2.203,1364,0.911,1365,0.911,1366,0.911,1367,0.911,1368,2.203,1369,1.626,1370,0.911,1371,0.911,1372,1.626,1373,3.076,1374,2.678,1375,2.203,1376,2.203,1377,1.626,1378,2.678,1379,0.911,1380,2.203,1381,0.911,1382,0.911,1383,1.626,1384,1.626,1385,2.678,1386,0.911,1387,0.911,1388,2.678,1389,2.678,1390,0.911,1391,0.911,1392,1.626,1393,0.911,1394,3.414,1395,0.911,1396,1.626,1397,3.957,1398,4.179,1399,0.911,1400,0.911,1401,0.911,1402,0.911,1403,0.911,1404,0.911,1405,0.911,1406,0.911,1407,1.626,1408,0.911,1409,1.876,1410,2.203,1411,0.911,1412,1.626,1413,0.911,1414,0.911,1415,0.911,1416,0.911,1417,0.911,1418,0.911,1419,0.911,1420,0.911,1421,1.626,1422,0.911,1423,2.203,1424,0.911,1425,1.626,1426,2.203,1427,2.678,1428,0.911,1429,0.911,1430,0.911,1431,0.911,1432,0.911,1433,0.911,1434,0.911,1435,0.911,1436,0.911,1437,0.911,1438,0.911,1439,0.911,1440,0.911,1441,0.911,1442,0.911,1443,2.678,1444,1.626,1445,1.626,1446,0.911,1447,0.911,1448,1.626,1449,1.626,1450,0.911,1451,0.911,1452,0.911,1453,0.911,1454,0.911,1455,0.911,1456,1.626,1457,0.911,1458,0.911,1459,2.678,1460,0.911,1461,1.626,1462,0.911,1463,0.911,1464,0.911,1465,0.911,1466,1.626,1467,0.911,1468,0.911,1469,1.626,1470,0.911,1471,2.678,1472,0.911,1473,0.911,1474,0.911,1475,1.626,1476,0.911,1477,0.911,1478,0.911,1479,1.626,1480,0.911,1481,0.911,1482,0.911,1483,0.911,1484,0.911,1485,4.375,1486,0.911,1487,0.911,1488,0.911,1489,0.911,1490,1.626,1491,0.911,1492,0.911,1493,0.911,1494,2.203,1495,0.911,1496,0.911,1497,0.911,1498,0.911,1499,0.911,1500,0.911,1501,0.911,1502,0.911,1503,0.911,1504,0.911,1505,0.911,1506,0.911,1507,0.911,1508,0.911,1509,0.911,1510,0.911,1511,0.911,1512,0.911,1513,0.911,1514,0.911,1515,0.911,1516,0.911,1517,0.911,1518,1.626,1519,0.911,1520,0.911,1521,0.911,1522,1.626,1523,1.626,1524,3.076,1525,0.911,1526,0.911,1527,0.911,1528,0.911,1529,0.911,1530,0.911,1531,0.911,1532,0.911,1533,0.911,1534,0.911,1535,0.911,1536,0.911,1537,0.911,1538,0.911,1539,0.911,1540,1.626,1541,0.911,1542,0.911,1543,0.911,1544,0.911,1545,2.203,1546,0.911,1547,0.911,1548,0.911,1549,1.626,1550,0.911,1551,0.911,1552,0.911,1553,0.911,1554,0.911,1555,0.911,1556,0.911,1557,0.911,1558,0.911,1559,0.911,1560,0.911,1561,0.911,1562,0.911,1563,0.911,1564,0.911,1565,0.911,1566,0.911,1567,0.911,1568,0.911,1569,1.626,1570,0.911,1571,0.911,1572,1.626,1573,0.911,1574,0.911,1575,0.911,1576,0.911,1577,0.911,1578,0.911,1579,0.911,1580,0.911,1581,0.911,1582,0.911,1583,0.911,1584,2.678,1585,1.626,1586,0.911,1587,0.911,1588,0.911,1589,0.911,1590,0.911,1591,0.911,1592,2.203,1593,0.911,1594,0.911,1595,0.911,1596,0.911,1597,0.911,1598,0.911,1599,1.626,1600,0.911,1601,0.911,1602,0.911,1603,0.911,1604,0.911,1605,0.911,1606,0.911,1607,0.911,1608,0.911,1609,0.911,1610,0.911]],["title/modules.html",[65,2.108]],["body/modules.html",[13,0.019,61,0.019,62,0.019,64,3.407,65,2.176,70,3.115,71,3.115,72,3.115,73,2.176,74,3.115,75,3.115,1409,6.012,1611,7.059,1612,7.059,1613,7.059]],["title/overview.html",[1614,4.127]],["body/overview.html",[2,1.33,13,0.022,45,3.214,61,0.015,62,0.015,64,4.84,65,1.598,66,2.153,67,3.129,68,3.129,69,3.129,70,4.221,71,4.098,72,4.098,73,3.007,74,4.098,75,4.098,76,2.457,77,1.824,78,1.705,92,1.705,127,3.214,151,3.129,153,3.129,154,3.485,175,2.53,202,1.183,249,3.214,273,3.129,274,3.129,362,3.214,375,3.129,376,3.129,575,3.129,576,3.129,577,3.129,637,3.214,653,3.129,654,3.129,747,3.214,766,3.129,768,3.129,1614,3.129,1615,3.673,1616,3.673,1617,3.673,1618,3.673]],["title/properties.html",[204,1.461,1085,2.539]],["body/properties.html",[13,0.022,36,2.233,61,0.02,62,0.02,204,1.865,832,3.721,1035,4.653,1158,3.721,1619,5.464,1620,5.464]],["title/todo.html",[811,2.03,812,2.03,1621,2.539]],["body/todo.html",[13,0.019,24,3.313,28,3.072,61,0.017,62,0.017,100,3.313,120,3.03,136,2.181,198,1.689,201,2.039,226,5.464,237,4.194,289,2.181,292,3.464,334,3.742,342,2.181,344,4.602,493,3.313,497,3.313,573,2.736,621,3.313,622,3.742,623,3.742,739,3.742,960,3.742,1106,3.313,1118,3.742,1130,3.742,1621,3.742,1622,4.393,1623,4.393,1624,4.393,1625,4.393,1626,4.393,1627,5.562,1628,6.415,1629,4.393,1630,4.393,1631,4.393,1632,5.562,1633,5.562,1634,5.562,1635,6.103,1636,6.103,1637,4.393,1638,4.393,1639,5.562,1640,5.562,1641,4.393,1642,4.393,1643,4.393,1644,4.393,1645,4.393]],["title/miscellaneous/variables.html",[1109,1.857,1646,3.645]],["body/miscellaneous/variables.html",[7,0.741,11,4.348,13,0.022,55,3.029,59,1.743,61,0.019,62,0.019,117,1.47,136,3.029,197,3.85,198,1.963,248,2.932,782,4.348,783,4.348,1065,5.196,1109,3.18,1646,4.348,1647,5.105,1648,5.105,1649,5.105,1650,5.105,1651,5.105,1652,5.105]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":314,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":1035,"title":{},"body":{"changelog.html":{},"properties.html":{}}}],["0.0.2",{"_index":1029,"title":{},"body":{"changelog.html":{}}}],["0.0.3",{"_index":1025,"title":{},"body":{"changelog.html":{}}}],["0.0.4",{"_index":1002,"title":{},"body":{"changelog.html":{}}}],["0.0.5",{"_index":991,"title":{},"body":{"changelog.html":{}}}],["0.0.6",{"_index":987,"title":{},"body":{"changelog.html":{}}}],["0.0.7",{"_index":975,"title":{},"body":{"changelog.html":{}}}],["0.0.8",{"_index":955,"title":{},"body":{"changelog.html":{}}}],["0.1.0",{"_index":949,"title":{},"body":{"changelog.html":{}}}],["0.1.13",{"_index":1102,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":1096,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":940,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":898,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":1097,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":1095,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":1067,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":1074,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":1072,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":1071,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1064,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":1068,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1069,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1073,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":1070,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":1075,"title":{},"body":{"coverage.html":{}}}],["02",{"_index":956,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":933,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":1036,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":827,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":1030,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":992,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":993,"title":{},"body":{"changelog.html":{}}}],["0c4b59bb",{"_index":417,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["1.0.0",{"_index":825,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["1.1",{"_index":1165,"title":{},"body":{"license.html":{}}}],["1.10",{"_index":1234,"title":{},"body":{"license.html":{}}}],["1.12",{"_index":1252,"title":{},"body":{"license.html":{}}}],["1.13",{"_index":1261,"title":{},"body":{"license.html":{}}}],["1.14",{"_index":1263,"title":{},"body":{"license.html":{}}}],["1.2",{"_index":1178,"title":{},"body":{"license.html":{}}}],["1.3",{"_index":1186,"title":{},"body":{"license.html":{}}}],["1.4",{"_index":1187,"title":{},"body":{"license.html":{}}}],["1.5",{"_index":1200,"title":{},"body":{"license.html":{}}}],["1.7",{"_index":1213,"title":{},"body":{"license.html":{}}}],["1.8",{"_index":1219,"title":{},"body":{"license.html":{}}}],["1.9",{"_index":1221,"title":{},"body":{"license.html":{}}}],["1/2",{"_index":1077,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":797,"title":{},"body":{"injectables/UserService.html":{},"changelog.html":{}}}],["10.1",{"_index":1582,"title":{},"body":{"license.html":{}}}],["10.2",{"_index":1348,"title":{},"body":{"license.html":{}}}],["10.3",{"_index":1585,"title":{},"body":{"license.html":{}}}],["10.4",{"_index":1597,"title":{},"body":{"license.html":{}}}],["11",{"_index":532,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["11)@matches(/^[0",{"_index":483,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["12",{"_index":932,"title":{},"body":{"changelog.html":{}}}],["12345678910",{"_index":487,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["14",{"_index":1618,"title":{},"body":{"overview.html":{}}}],["16",{"_index":976,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":957,"title":{},"body":{"changelog.html":{}}}],["2",{"_index":1319,"title":{},"body":{"license.html":{}}}],["2.0",{"_index":1159,"title":{},"body":{"index.html":{},"license.html":{}}}],["2.1",{"_index":1256,"title":{},"body":{"license.html":{}}}],["2.1(b",{"_index":1325,"title":{},"body":{"license.html":{}}}],["2.2",{"_index":1309,"title":{},"body":{"license.html":{}}}],["2.3",{"_index":1316,"title":{},"body":{"license.html":{}}}],["2.4",{"_index":1343,"title":{},"body":{"license.html":{}}}],["2.5",{"_index":1351,"title":{},"body":{"license.html":{}}}],["2.6",{"_index":1358,"title":{},"body":{"license.html":{}}}],["2.7",{"_index":1367,"title":{},"body":{"license.html":{}}}],["20",{"_index":828,"title":{},"body":{"changelog.html":{}}}],["20.30",{"_index":454,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["2014",{"_index":988,"title":{},"body":{"changelog.html":{}}}],["2015",{"_index":931,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":826,"title":{},"body":{"changelog.html":{}}}],["24h",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{}}}],["3",{"_index":508,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["3.0",{"_index":1258,"title":{},"body":{"license.html":{}}}],["3.0.2",{"_index":1104,"title":{},"body":{"dependencies.html":{}}}],["3.1",{"_index":1368,"title":{},"body":{"license.html":{}}}],["3.15.2",{"_index":1092,"title":{},"body":{"dependencies.html":{}}}],["3.2",{"_index":1369,"title":{},"body":{"license.html":{}}}],["3.3",{"_index":1350,"title":{},"body":{"license.html":{}}}],["3.4",{"_index":1342,"title":{},"body":{"license.html":{}}}],["3.5",{"_index":1405,"title":{},"body":{"license.html":{}}}],["30",{"_index":1467,"title":{},"body":{"license.html":{}}}],["31",{"_index":1037,"title":{},"body":{"changelog.html":{}}}],["4.0.0",{"_index":1098,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":1108,"title":{},"body":{"dependencies.html":{}}}],["40",{"_index":509,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["40)@isstring()@apiproperty({description",{"_index":504,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["40a4",{"_index":419,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["4c34d2c2ca4b",{"_index":421,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["5.0.1",{"_index":1093,"title":{},"body":{"dependencies.html":{}}}],["5.1",{"_index":1444,"title":{},"body":{"license.html":{}}}],["5.2",{"_index":1469,"title":{},"body":{"license.html":{}}}],["5.2.1",{"_index":1091,"title":{},"body":{"dependencies.html":{}}}],["5.3",{"_index":1486,"title":{},"body":{"license.html":{}}}],["50",{"_index":1076,"title":{},"body":{"coverage.html":{},"license.html":{}}}],["6",{"_index":1616,"title":{},"body":{"overview.html":{}}}],["60",{"_index":1460,"title":{},"body":{"license.html":{}}}],["7",{"_index":1615,"title":{},"body":{"overview.html":{}}}],["7.2.0",{"_index":1105,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":1617,"title":{},"body":{"overview.html":{}}}],["8.0.0",{"_index":1086,"title":{},"body":{"dependencies.html":{}}}],["8.0.1",{"_index":1088,"title":{},"body":{"dependencies.html":{}}}],["8.2.2",{"_index":1089,"title":{},"body":{"dependencies.html":{}}}],["81f5",{"_index":420,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["8601",{"_index":979,"title":{},"body":{"changelog.html":{}}}],["9",{"_index":484,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ability",{"_index":1564,"title":{},"body":{"license.html":{}}}],["above",{"_index":1326,"title":{},"body":{"license.html":{}}}],["absence",{"_index":1334,"title":{},"body":{"license.html":{}}}],["absolutely",{"_index":1413,"title":{},"body":{"license.html":{}}}],["accurate",{"_index":1610,"title":{},"body":{"license.html":{}}}],["aciek",{"_index":871,"title":{},"body":{"changelog.html":{}}}],["action",{"_index":330,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{}}}],["actions",{"_index":1478,"title":{},"body":{"license.html":{}}}],["add",{"_index":1609,"title":{},"body":{"license.html":{}}}],["added",{"_index":829,"title":{},"body":{"changelog.html":{}}}],["addition",{"_index":1235,"title":{},"body":{"license.html":{}}}],["additional",{"_index":1320,"title":{},"body":{"license.html":{}}}],["additionally",{"_index":1391,"title":{},"body":{"license.html":{}}}],["adheres",{"_index":821,"title":{},"body":{"changelog.html":{}}}],["adicionar",{"_index":613,"title":{},"body":{"controllers/ProductController.html":{}}}],["adm",{"_index":497,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"todo.html":{}}}],["adm')@apioperation({summary",{"_index":734,"title":{},"body":{"controllers/UserController.html":{}}}],["admin",{"_index":349,"title":{},"body":{"controllers/CategoryController.html":{}}}],["admin.utils",{"_index":291,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["admin.utils.ts",{"_index":1081,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["affect",{"_index":1432,"title":{},"body":{"license.html":{}}}],["affero",{"_index":1257,"title":{},"body":{"license.html":{}}}],["against",{"_index":917,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["agree",{"_index":1418,"title":{},"body":{"license.html":{}}}],["agreement",{"_index":1567,"title":{},"body":{"license.html":{}}}],["agreements",{"_index":1489,"title":{},"body":{"license.html":{}}}],["aishek",{"_index":873,"title":{},"body":{"changelog.html":{}}}],["alexandre",{"_index":1152,"title":{},"body":{"index.html":{}}}],["allbags",{"_index":307,"title":{},"body":{"injectables/BagService.html":{}}}],["allbags.length",{"_index":313,"title":{},"body":{"injectables/BagService.html":{}}}],["allcategory",{"_index":396,"title":{},"body":{"injectables/CategoryService.html":{}}}],["allcategory.length",{"_index":398,"title":{},"body":{"injectables/CategoryService.html":{}}}],["alleging",{"_index":1480,"title":{},"body":{"license.html":{}}}],["allow",{"_index":1548,"title":{},"body":{"license.html":{}}}],["allusers",{"_index":801,"title":{},"body":{"injectables/UserService.html":{}}}],["allusers.length",{"_index":803,"title":{},"body":{"injectables/UserService.html":{}}}],["alone",{"_index":1417,"title":{},"body":{"license.html":{}}}],["alter",{"_index":1378,"title":{},"body":{"license.html":{}}}],["alterar",{"_index":499,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/ProductController.html":{}}}],["amielucha",{"_index":869,"title":{},"body":{"changelog.html":{}}}],["answer",{"_index":950,"title":{},"body":{"changelog.html":{}}}],["answers",{"_index":1050,"title":{},"body":{"changelog.html":{}}}],["anyone",{"_index":1519,"title":{},"body":{"license.html":{}}}],["ao",{"_index":1634,"title":{},"body":{"todo.html":{}}}],["apenas",{"_index":739,"title":{},"body":{"controllers/UserController.html":{},"todo.html":{}}}],["api",{"_index":100,"title":{},"body":{"injectables/AppService.html":{},"index.html":{},"todo.html":{}}}],["apibearerauth",{"_index":148,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation",{"_index":42,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["apioperation,apitags,apibearerauth",{"_index":126,"title":{},"body":{"controllers/AuthController.html":{}}}],["apiproperty",{"_index":424,"title":{},"body":{"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{}}}],["apiproperty({description",{"_index":478,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginResponseDto.html":{}}}],["apitags",{"_index":43,"title":{},"body":{"controllers/AppController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["apitags('adm",{"_index":751,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('adm')@post('create",{"_index":733,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('auth",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('bag",{"_index":256,"title":{},"body":{"controllers/BagController.html":{}}}],["apitags('category",{"_index":366,"title":{},"body":{"controllers/CategoryController.html":{}}}],["apitags('create",{"_index":728,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('product",{"_index":641,"title":{},"body":{"controllers/ProductController.html":{}}}],["apitags('status",{"_index":47,"title":{},"body":{"controllers/AppController.html":{}}}],["apitags('user",{"_index":757,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('user')@useguards(undefined)@apibearerauth()@get(':id')@apioperation({summary",{"_index":743,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('user')@useguards(undefined)@apibearerauth()@get('find')@apioperation({summary",{"_index":741,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('user')@useguards(undefined)@apibearerauth()@httpcode(httpstatus.no_content)@delete(':id')@apioperation({summary",{"_index":736,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags('user')@useguards(undefined)@apibearerauth()@patch(':id')@apioperation({summary",{"_index":745,"title":{},"body":{"controllers/UserController.html":{}}}],["apitags,apioperation",{"_index":633,"title":{},"body":{"controllers/ProductController.html":{}}}],["aplicação",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"index.html":{}}}],["app",{"_index":588,"title":{},"body":{"injectables/PrismaService.html":{},"index.html":{}}}],["app.close",{"_index":593,"title":{},"body":{"injectables/PrismaService.html":{}}}],["app.controller",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":46,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["apparatus",{"_index":1246,"title":{},"body":{"license.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applicable",{"_index":1362,"title":{},"body":{"license.html":{}}}],["application",{"_index":1406,"title":{},"body":{"license.html":{}}}],["apply",{"_index":1540,"title":{},"body":{"license.html":{}}}],["appmodule",{"_index":64,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":45,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["aqui",{"_index":1120,"title":{},"body":{"index.html":{}}}],["argument",{"_index":916,"title":{},"body":{"changelog.html":{}}}],["arquivo",{"_index":1161,"title":{},"body":{"index.html":{}}}],["art4",{"_index":856,"title":{},"body":{"changelog.html":{}}}],["asked",{"_index":843,"title":{},"body":{"changelog.html":{}}}],["asserting",{"_index":1472,"title":{},"body":{"license.html":{}}}],["assume",{"_index":1020,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["async",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["attached",{"_index":1191,"title":{},"body":{"license.html":{}}}],["attempt",{"_index":1377,"title":{},"body":{"license.html":{}}}],["autenticado",{"_index":121,"title":{},"body":{"controllers/AuthController.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{}}}],["autenticação",{"_index":113,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth",{"_index":104,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":159,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.service",{"_index":128,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":101,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":133,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["authmodule",{"_index":70,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":1620,"title":{},"body":{"properties.html":{}}}],["authorized",{"_index":1514,"title":{},"body":{"license.html":{}}}],["authors",{"_index":900,"title":{},"body":{"changelog.html":{}}}],["authservice",{"_index":127,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"coverage.html":{},"overview.html":{}}}],["automatically",{"_index":1446,"title":{},"body":{"license.html":{}}}],["autores",{"_index":1149,"title":{},"body":{"index.html":{}}}],["autorização!(apenas",{"_index":494,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["available",{"_index":1207,"title":{},"body":{"license.html":{}}}],["await",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["azkidenz",{"_index":858,"title":{},"body":{"changelog.html":{}}}],["b",{"_index":1205,"title":{},"body":{"license.html":{}}}],["back",{"_index":1463,"title":{},"body":{"license.html":{}}}],["badrequestexception",{"_index":668,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["badrequestexception('as",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["bag",{"_index":201,"title":{"classes/Bag.html":{}},"body":{"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"coverage.html":{},"todo.html":{}}}],["bag.controller",{"_index":277,"title":{},"body":{"modules/BagModule.html":{}}}],["bag.dto",{"_index":252,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/UpdateBagDto.html":{}}}],["bag.dto.ts",{"_index":412,"title":{},"body":{"classes/CreateBagDto.html":{},"classes/UpdateBagDto.html":{},"coverage.html":{}}}],["bag.dto.ts:11",{"_index":423,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["bag.dto.ts:18",{"_index":422,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["bag.service",{"_index":250,"title":{},"body":{"controllers/BagController.html":{},"modules/BagModule.html":{}}}],["bag/bag.module",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["bag?:bag",{"_index":610,"title":{},"body":{"classes/Product.html":{},"classes/User.html":{}}}],["bagcontroller",{"_index":218,"title":{"controllers/BagController.html":{}},"body":{"controllers/BagController.html":{},"modules/BagModule.html":{},"coverage.html":{}}}],["bagmodule",{"_index":71,"title":{"modules/BagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/BagModule.html":{},"modules.html":{},"overview.html":{}}}],["bagservice",{"_index":249,"title":{"injectables/BagService.html":{}},"body":{"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"coverage.html":{},"overview.html":{}}}],["banco",{"_index":1130,"title":{},"body":{"index.html":{},"todo.html":{}}}],["based",{"_index":819,"title":{},"body":{"changelog.html":{}}}],["baseurl",{"_index":56,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["basic",{"_index":1054,"title":{},"body":{"changelog.html":{}}}],["basis",{"_index":1305,"title":{},"body":{"license.html":{}}}],["bcrypt",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(password",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(data.password",{"_index":808,"title":{},"body":{"injectables/UserService.html":{}}}],["bcrypt.hash(dto.password",{"_index":796,"title":{},"body":{"injectables/UserService.html":{}}}],["become",{"_index":1313,"title":{},"body":{"license.html":{}}}],["behalf",{"_index":1412,"title":{},"body":{"license.html":{}}}],["believes",{"_index":1354,"title":{},"body":{"license.html":{}}}],["beneficial",{"_index":1286,"title":{},"body":{"license.html":{}}}],["benefit",{"_index":944,"title":{},"body":{"changelog.html":{}}}],["better",{"_index":1003,"title":{},"body":{"changelog.html":{}}}],["between",{"_index":1006,"title":{},"body":{"changelog.html":{}}}],["body",{"_index":244,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["body,controller",{"_index":631,"title":{},"body":{"controllers/ProductController.html":{}}}],["boolean",{"_index":448,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/Product.html":{},"classes/User.html":{}}}],["bootstrap",{"_index":1079,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["both",{"_index":945,"title":{},"body":{"changelog.html":{}}}],["br",{"_index":936,"title":{},"body":{"changelog.html":{}}}],["brazilian",{"_index":865,"title":{},"body":{"changelog.html":{}}}],["bring",{"_index":1565,"title":{},"body":{"license.html":{}}}],["brits",{"_index":965,"title":{},"body":{"changelog.html":{}}}],["brought",{"_index":1551,"title":{},"body":{"license.html":{}}}],["browse",{"_index":1613,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":1611,"title":{},"body":{"modules.html":{}}}],["busca",{"_index":1644,"title":{},"body":{"todo.html":{}}}],["business",{"_index":1557,"title":{},"body":{"license.html":{}}}],["c",{"_index":1333,"title":{},"body":{"license.html":{}}}],["cadastradas",{"_index":399,"title":{},"body":{"injectables/CategoryService.html":{}}}],["cadastrados",{"_index":804,"title":{},"body":{"injectables/UserService.html":{}}}],["campo",{"_index":501,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["campos",{"_index":1636,"title":{},"body":{"todo.html":{}}}],["can’t",{"_index":919,"title":{},"body":{"changelog.html":{}}}],["caracters",{"_index":525,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["care",{"_index":1026,"title":{},"body":{"changelog.html":{}}}],["case",{"_index":1197,"title":{},"body":{"license.html":{}}}],["catch(handleerror",{"_index":306,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["categoria",{"_index":346,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDto.html":{}}}],["categorias",{"_index":354,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":332,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"coverage.html":{}}}],["category.controller",{"_index":379,"title":{},"body":{"modules/CategoryModule.html":{}}}],["category.dto",{"_index":364,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{}}}],["category.dto.ts",{"_index":429,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["category.dto.ts:11",{"_index":433,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["category.service",{"_index":363,"title":{},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{}}}],["category/category.module",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["category?:category",{"_index":609,"title":{},"body":{"classes/Product.html":{}}}],["categorycontroller",{"_index":340,"title":{"controllers/CategoryController.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"coverage.html":{}}}],["categoryid",{"_index":438,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["categoryid?:string",{"_index":472,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["categorymodule",{"_index":72,"title":{"modules/CategoryModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CategoryModule.html":{},"modules.html":{},"overview.html":{}}}],["categoryservice",{"_index":362,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"coverage.html":{},"overview.html":{}}}],["cause",{"_index":1275,"title":{},"body":{"license.html":{}}}],["caused",{"_index":1328,"title":{},"body":{"license.html":{}}}],["change",{"_index":891,"title":{},"body":{"changelog.html":{}}}],["changed",{"_index":887,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":813,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changelogs",{"_index":1051,"title":{},"body":{"changelog.html":{}}}],["changes",{"_index":815,"title":{},"body":{"changelog.html":{}}}],["character",{"_index":1525,"title":{},"body":{"license.html":{}}}],["charge",{"_index":1383,"title":{},"body":{"license.html":{}}}],["chinese",{"_index":850,"title":{},"body":{"changelog.html":{}}}],["choice",{"_index":1346,"title":{},"body":{"license.html":{}}}],["choose",{"_index":1407,"title":{},"body":{"license.html":{}}}],["chronological",{"_index":1033,"title":{},"body":{"changelog.html":{}}}],["circumstances",{"_index":1515,"title":{},"body":{"license.html":{}}}],["claim",{"_index":1474,"title":{},"body":{"license.html":{}}}],["claim(s",{"_index":1242,"title":{},"body":{"license.html":{}}}],["claims",{"_index":1241,"title":{},"body":{"license.html":{}}}],["clarified",{"_index":980,"title":{},"body":{"changelog.html":{}}}],["clarify",{"_index":909,"title":{},"body":{"changelog.html":{}}}],["class",{"_index":49,"title":{"classes/Bag.html":{},"classes/Category.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":202,"title":{},"body":{"classes/Bag.html":{},"classes/Category.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"overview.html":{}}}],["clear",{"_index":1414,"title":{},"body":{"license.html":{}}}],["clicando",{"_index":1119,"title":{},"body":{"index.html":{}}}],["clonar",{"_index":1124,"title":{},"body":{"index.html":{}}}],["closed",{"_index":946,"title":{},"body":{"changelog.html":{}}}],["cluster_appmodule",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_bagmodule",{"_index":273,"title":{},"body":{"modules/BagModule.html":{},"overview.html":{}}}],["cluster_bagmodule_imports",{"_index":275,"title":{},"body":{"modules/BagModule.html":{}}}],["cluster_bagmodule_providers",{"_index":274,"title":{},"body":{"modules/BagModule.html":{},"overview.html":{}}}],["cluster_categorymodule",{"_index":375,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_categorymodule_imports",{"_index":377,"title":{},"body":{"modules/CategoryModule.html":{}}}],["cluster_categorymodule_providers",{"_index":376,"title":{},"body":{"modules/CategoryModule.html":{},"overview.html":{}}}],["cluster_prismamodule",{"_index":575,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_exports",{"_index":577,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_prismamodule_providers",{"_index":576,"title":{},"body":{"modules/PrismaModule.html":{},"overview.html":{}}}],["cluster_productmodule",{"_index":653,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_productmodule_imports",{"_index":655,"title":{},"body":{"modules/ProductModule.html":{}}}],["cluster_productmodule_providers",{"_index":654,"title":{},"body":{"modules/ProductModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":766,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":767,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":768,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cname",{"_index":1042,"title":{},"body":{"changelog.html":{}}}],["code",{"_index":1188,"title":{},"body":{"license.html":{}}}],["com",{"_index":29,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"classes/CreateUserDto.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["combination",{"_index":1179,"title":{},"body":{"license.html":{}}}],["combines",{"_index":1215,"title":{},"body":{"license.html":{}}}],["come",{"_index":1462,"title":{},"body":{"license.html":{}}}],["commercial",{"_index":1534,"title":{},"body":{"license.html":{}}}],["commit",{"_index":913,"title":{},"body":{"changelog.html":{}}}],["common",{"_index":894,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["comparison",{"_index":984,"title":{},"body":{"changelog.html":{}}}],["complete",{"_index":1566,"title":{},"body":{"license.html":{}}}],["completo",{"_index":1638,"title":{},"body":{"todo.html":{}}}],["compliance",{"_index":1459,"title":{},"body":{"license.html":{}}}],["compliant",{"_index":1448,"title":{},"body":{"license.html":{}}}],["comply",{"_index":1340,"title":{},"body":{"license.html":{}}}],["compodoc",{"_index":1148,"title":{},"body":{"index.html":{}}}],["computer",{"_index":1531,"title":{},"body":{"license.html":{}}}],["comum",{"_index":730,"title":{},"body":{"controllers/UserController.html":{}}}],["concerning",{"_index":1568,"title":{},"body":{"license.html":{}}}],["conditions",{"_index":1288,"title":{},"body":{"license.html":{}}}],["confirmação",{"_index":479,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["confirmpassword",{"_index":476,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["conflict",{"_index":1560,"title":{},"body":{"license.html":{}}}],["connect",{"_index":297,"title":{},"body":{"injectables/BagService.html":{},"injectables/ProductService.html":{}}}],["connect:{id:user.id",{"_index":299,"title":{},"body":{"injectables/BagService.html":{}}}],["consequential",{"_index":1523,"title":{},"body":{"license.html":{}}}],["console",{"_index":671,"title":{},"body":{"injectables/ProductService.html":{}}}],["console.log(`dto",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["constitutes",{"_index":1512,"title":{},"body":{"license.html":{}}}],["constructor",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(prisma",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["constructor(private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["construe",{"_index":1581,"title":{},"body":{"license.html":{}}}],["construed",{"_index":1579,"title":{},"body":{"license.html":{}}}],["contained",{"_index":1024,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contains",{"_index":1049,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["contents",{"_index":1238,"title":{},"body":{"license.html":{}}}],["conter",{"_index":507,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["contract",{"_index":1278,"title":{},"body":{"license.html":{}}}],["contribute",{"_index":1371,"title":{},"body":{"license.html":{}}}],["contributes",{"_index":1173,"title":{},"body":{"license.html":{}}}],["contribution",{"_index":1185,"title":{},"body":{"license.html":{}}}],["contributions",{"_index":1180,"title":{},"body":{"license.html":{}}}],["contributor",{"_index":1166,"title":{},"body":{"license.html":{}}}],["contributor's",{"_index":1184,"title":{},"body":{"license.html":{}}}],["contributors",{"_index":1484,"title":{},"body":{"license.html":{}}}],["control",{"_index":1269,"title":{},"body":{"license.html":{}}}],["controlled",{"_index":1268,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('bag",{"_index":257,"title":{},"body":{"controllers/BagController.html":{}}}],["controller('category",{"_index":367,"title":{},"body":{"controllers/CategoryController.html":{}}}],["controller('product",{"_index":642,"title":{},"body":{"controllers/ProductController.html":{}}}],["controller('user",{"_index":750,"title":{},"body":{"controllers/UserController.html":{}}}],["controller,body,post,httpcode,httpstatus,get",{"_index":125,"title":{},"body":{"controllers/AuthController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["controls",{"_index":1267,"title":{},"body":{"license.html":{}}}],["conveyed",{"_index":1233,"title":{},"body":{"license.html":{}}}],["copy",{"_index":1376,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":1363,"title":{},"body":{"license.html":{}}}],["correction",{"_index":1511,"title":{},"body":{"license.html":{}}}],["cost",{"_index":1384,"title":{},"body":{"license.html":{}}}],["counter",{"_index":1059,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["courts",{"_index":1552,"title":{},"body":{"license.html":{}}}],["coverage",{"_index":1060,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["covered",{"_index":1176,"title":{},"body":{"license.html":{}}}],["cpf",{"_index":477,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["create",{"_index":220,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"license.html":{}}}],["create(@body",{"_index":755,"title":{},"body":{"controllers/UserController.html":{}}}],["create(@loggeduser",{"_index":258,"title":{},"body":{"controllers/BagController.html":{},"controllers/ProductController.html":{}}}],["create(createuserdto",{"_index":727,"title":{},"body":{"controllers/UserController.html":{}}}],["create(dto",{"_index":662,"title":{},"body":{"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["create(user",{"_index":223,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{}}}],["createadm",{"_index":726,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["createadm(@body",{"_index":753,"title":{},"body":{"controllers/UserController.html":{}}}],["createadm(createuserdto",{"_index":732,"title":{},"body":{"controllers/UserController.html":{}}}],["createadm(dto",{"_index":775,"title":{},"body":{"injectables/UserService.html":{}}}],["createbagdto",{"_index":224,"title":{"classes/CreateBagDto.html":{}},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/CreateBagDto.html":{},"classes/UpdateBagDto.html":{},"coverage.html":{}}}],["createbagdto.productid",{"_index":298,"title":{},"body":{"injectables/BagService.html":{}}}],["createcategorydto",{"_index":343,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["createcategorydto.title",{"_index":392,"title":{},"body":{"injectables/CategoryService.html":{}}}],["createdat",{"_index":205,"title":{},"body":{"classes/Bag.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["createparamdecorator((_",{"_index":1648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createproductdto",{"_index":435,"title":{"classes/CreateProductDto.html":{}},"body":{"classes/CreateProductDto.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["createproductdto,user",{"_index":679,"title":{},"body":{"injectables/ProductService.html":{}}}],["creates",{"_index":1172,"title":{},"body":{"license.html":{}}}],["createuserdto",{"_index":473,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["creation",{"_index":1174,"title":{},"body":{"license.html":{}}}],["creation(s",{"_index":1356,"title":{},"body":{"license.html":{}}}],["criar",{"_index":344,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{},"todo.html":{}}}],["criação",{"_index":1641,"title":{},"body":{"todo.html":{}}}],["croatian",{"_index":880,"title":{},"body":{"changelog.html":{}}}],["cross",{"_index":1479,"title":{},"body":{"license.html":{}}}],["crud",{"_index":1637,"title":{},"body":{"todo.html":{}}}],["cry",{"_index":906,"title":{},"body":{"changelog.html":{}}}],["ctx",{"_index":1649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ctx.switchtohttp().getrequest",{"_index":1651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["current",{"_index":896,"title":{},"body":{"changelog.html":{}}}],["custom",{"_index":1046,"title":{},"body":{"changelog.html":{}}}],["czech",{"_index":874,"title":{},"body":{"changelog.html":{}}}],["da",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"index.html":{}}}],["dados",{"_index":573,"title":{},"body":{"classes/LoginResponseDto.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"index.html":{},"todo.html":{}}}],["damages",{"_index":1524,"title":{},"body":{"license.html":{}}}],["data",{"_index":295,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["data.password",{"_index":807,"title":{},"body":{"injectables/UserService.html":{}}}],["data.title",{"_index":393,"title":{},"body":{"injectables/CategoryService.html":{}}}],["data.user.id",{"_index":322,"title":{},"body":{"injectables/BagService.html":{}}}],["datatreatment",{"_index":381,"title":{},"body":{"injectables/CategoryService.html":{}}}],["datatreatment(data",{"_index":384,"title":{},"body":{"injectables/CategoryService.html":{}}}],["date",{"_index":209,"title":{},"body":{"classes/Bag.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/User.html":{},"changelog.html":{},"license.html":{}}}],["dates",{"_index":968,"title":{},"body":{"changelog.html":{}}}],["days",{"_index":1461,"title":{},"body":{"license.html":{}}}],["db",{"_index":1132,"title":{},"body":{"index.html":{}}}],["de",{"_index":28,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/CreateUserDto.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"index.html":{},"todo.html":{}}}],["dealing",{"_index":1365,"title":{},"body":{"license.html":{}}}],["death",{"_index":1541,"title":{},"body":{"license.html":{}}}],["declaratory",{"_index":1476,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["default",{"_index":782,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["defective",{"_index":1508,"title":{},"body":{"license.html":{}}}],["defects",{"_index":1499,"title":{},"body":{"license.html":{}}}],["defendant",{"_index":1553,"title":{},"body":{"license.html":{}}}],["defined",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"license.html":{}}}],["definition",{"_index":1271,"title":{},"body":{"license.html":{}}}],["definitions",{"_index":1164,"title":{},"body":{"license.html":{}}}],["deletar",{"_index":232,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["delete",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["delete(':id",{"_index":268,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["delete(':id')@apioperation({summary",{"_index":616,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete(@loggeduser",{"_index":269,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["delete(@param('id",{"_index":650,"title":{},"body":{"controllers/ProductController.html":{}}}],["delete(id",{"_index":615,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["delete(user",{"_index":230,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["deletion",{"_index":1236,"title":{},"body":{"license.html":{}}}],["dependencies",{"_index":66,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":1118,"title":{},"body":{"index.html":{},"todo.html":{}}}],["deprecations",{"_index":908,"title":{},"body":{"changelog.html":{}}}],["describe",{"_index":1431,"title":{},"body":{"license.html":{}}}],["described",{"_index":1204,"title":{},"body":{"license.html":{}}}],["description",{"_index":36,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"license.html":{},"properties.html":{}}}],["description:string",{"_index":463,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["description:true",{"_index":690,"title":{},"body":{"injectables/ProductService.html":{}}}],["descrição",{"_index":443,"title":{},"body":{"classes/CreateProductDto.html":{},"index.html":{}}}],["desirable",{"_index":1603,"title":{},"body":{"license.html":{}}}],["detailed",{"_index":1439,"title":{},"body":{"license.html":{}}}],["detalhes",{"_index":1163,"title":{},"body":{"index.html":{}}}],["deve",{"_index":506,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["development",{"_index":1134,"title":{},"body":{"index.html":{}}}],["devidos",{"_index":1639,"title":{},"body":{"todo.html":{}}}],["diego",{"_index":511,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["diegofreitas50@hotmail.com",{"_index":491,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["diff",{"_index":923,"title":{},"body":{"changelog.html":{}}}],["difference",{"_index":1005,"title":{},"body":{"changelog.html":{}}}],["different",{"_index":1387,"title":{},"body":{"license.html":{}}}],["differentiate",{"_index":1012,"title":{},"body":{"changelog.html":{}}}],["differs",{"_index":1596,"title":{},"body":{"license.html":{}}}],["diffs",{"_index":914,"title":{},"body":{"changelog.html":{}}}],["direct",{"_index":1273,"title":{},"body":{"license.html":{}}}],["direction",{"_index":1276,"title":{},"body":{"license.html":{}}}],["directly",{"_index":1481,"title":{},"body":{"license.html":{}}}],["directory",{"_index":1607,"title":{},"body":{"license.html":{}}}],["disclaimer",{"_index":1494,"title":{},"body":{"license.html":{}}}],["disclaimers",{"_index":1396,"title":{},"body":{"license.html":{}}}],["display",{"_index":1300,"title":{},"body":{"license.html":{}}}],["disponíveis",{"_index":623,"title":{},"body":{"controllers/ProductController.html":{},"todo.html":{}}}],["distinguishing",{"_index":1588,"title":{},"body":{"license.html":{}}}],["distribute",{"_index":1302,"title":{},"body":{"license.html":{}}}],["distributed",{"_index":1601,"title":{},"body":{"license.html":{}}}],["distributes",{"_index":1315,"title":{},"body":{"license.html":{}}}],["distributing",{"_index":1598,"title":{},"body":{"license.html":{}}}],["distribution",{"_index":1322,"title":{},"body":{"license.html":{}}}],["distributions",{"_index":1436,"title":{},"body":{"license.html":{}}}],["distributors",{"_index":1490,"title":{},"body":{"license.html":{}}}],["docs",{"_index":97,"title":{},"body":{"injectables/AppService.html":{}}}],["doctrines",{"_index":1364,"title":{},"body":{"license.html":{}}}],["document",{"_index":1220,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":1061,"title":{},"body":{"coverage.html":{}}}],["documentação",{"_index":31,"title":{},"body":{"controllers/AppController.html":{}}}],["documented",{"_index":817,"title":{},"body":{"changelog.html":{}}}],["domain",{"_index":1047,"title":{},"body":{"changelog.html":{}}}],["done",{"_index":1623,"title":{},"body":{"todo.html":{}}}],["dos",{"_index":513,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["drafter",{"_index":1580,"title":{},"body":{"license.html":{}}}],["dslakdjskaldsaldsaklasdaldda",{"_index":440,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["dto",{"_index":628,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["dto.confirmpassword",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.cpf",{"_index":794,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.description",{"_index":682,"title":{},"body":{"injectables/ProductService.html":{}}}],["dto.email",{"_index":795,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.imgurl",{"_index":683,"title":{},"body":{"injectables/ProductService.html":{}}}],["dto.name",{"_index":793,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.new",{"_index":684,"title":{},"body":{"injectables/ProductService.html":{}}}],["dto.password",{"_index":785,"title":{},"body":{"injectables/UserService.html":{}}}],["dto.price",{"_index":685,"title":{},"body":{"injectables/ProductService.html":{}}}],["dto.title",{"_index":681,"title":{},"body":{"injectables/ProductService.html":{}}}],["dto/create",{"_index":251,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":130,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/login.dto",{"_index":132,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["dto/update",{"_index":254,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["due",{"_index":1425,"title":{},"body":{"license.html":{}}}],["e",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateUserDto.html":{},"todo.html":{}}}],["e/ou",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["e169",{"_index":418,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["each",{"_index":1168,"title":{},"body":{"license.html":{}}}],["earlier",{"_index":1210,"title":{},"body":{"license.html":{}}}],["editar",{"_index":360,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["effect",{"_index":1589,"title":{},"body":{"license.html":{}}}],["effective",{"_index":1310,"title":{},"body":{"license.html":{}}}],["eletrônicos",{"_index":432,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["em",{"_index":1629,"title":{},"body":{"todo.html":{}}}],["email",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["email:string",{"_index":566,"title":{},"body":{"classes/LoginDto.html":{}}}],["empty",{"_index":674,"title":{},"body":{"injectables/ProductService.html":{},"changelog.html":{}}}],["enable",{"_index":1043,"title":{},"body":{"changelog.html":{}}}],["enableshutdownhooks",{"_index":583,"title":{},"body":{"injectables/PrismaService.html":{}}}],["enableshutdownhooks(app",{"_index":585,"title":{},"body":{"injectables/PrismaService.html":{}}}],["encontrado",{"_index":326,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["encourage",{"_index":998,"title":{},"body":{"changelog.html":{}}}],["end",{"_index":1488,"title":{},"body":{"license.html":{}}}],["enforceable",{"_index":1576,"title":{},"body":{"license.html":{}}}],["english",{"_index":897,"title":{},"body":{"changelog.html":{}}}],["entidades",{"_index":1627,"title":{},"body":{"todo.html":{}}}],["entire",{"_index":1503,"title":{},"body":{"license.html":{}}}],["entities",{"_index":1265,"title":{},"body":{"license.html":{}}}],["entities/bag.entity",{"_index":294,"title":{},"body":{"injectables/BagService.html":{}}}],["entities/category.entity",{"_index":365,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["entities/product.entity",{"_index":640,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["entities/user.entity",{"_index":749,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["entity",{"_index":1171,"title":{},"body":{"license.html":{}}}],["entre",{"_index":1626,"title":{},"body":{"todo.html":{}}}],["equally",{"_index":948,"title":{},"body":{"changelog.html":{}}}],["equivalents",{"_index":1366,"title":{},"body":{"license.html":{}}}],["error",{"_index":670,"title":{},"body":{"injectables/ProductService.html":{},"miscellaneous/functions.html":{}}}],["es",{"_index":938,"title":{},"body":{"changelog.html":{}}}],["escreva",{"_index":442,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["especial",{"_index":526,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["essential",{"_index":1513,"title":{},"body":{"license.html":{}}}],["est",{"_index":558,"title":{},"body":{"injectables/JwtStrategy.html":{},"index.html":{}}}],["este",{"_index":500,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["estrutura",{"_index":1624,"title":{},"body":{"todo.html":{}}}],["even",{"_index":1536,"title":{},"body":{"license.html":{}}}],["event",{"_index":1487,"title":{},"body":{"license.html":{}}}],["evolving",{"_index":1040,"title":{},"body":{"changelog.html":{}}}],["example",{"_index":416,"title":{},"body":{"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"changelog.html":{}}}],["example:'20.30",{"_index":468,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["example:'dslakdjskaldsaldsaklasdaldda",{"_index":470,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["example:'escreva",{"_index":462,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["example:'livro",{"_index":460,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["example:'true",{"_index":466,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["example:'url",{"_index":464,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["examples",{"_index":1053,"title":{},"body":{"changelog.html":{}}}],["except",{"_index":1332,"title":{},"body":{"license.html":{}}}],["excluding",{"_index":1475,"title":{},"body":{"license.html":{}}}],["exclusion",{"_index":1549,"title":{},"body":{"license.html":{}}}],["exclusionary",{"_index":941,"title":{},"body":{"changelog.html":{}}}],["exclusive",{"_index":1294,"title":{},"body":{"license.html":{}}}],["executable",{"_index":1194,"title":{},"body":{"license.html":{}}}],["executioncontext",{"_index":1650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exercising",{"_index":1264,"title":{},"body":{"license.html":{}}}],["exhibit",{"_index":1193,"title":{},"body":{"license.html":{}}}],["existe",{"_index":557,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["exit",{"_index":635,"title":{},"body":{"controllers/ProductController.html":{}}}],["expiresin",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["explanation",{"_index":1004,"title":{},"body":{"changelog.html":{}}}],["explicitly",{"_index":1453,"title":{},"body":{"license.html":{}}}],["exploit",{"_index":1303,"title":{},"body":{"license.html":{}}}],["export",{"_index":48,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["exports",{"_index":579,"title":{},"body":{"modules/PrismaModule.html":{}}}],["express",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"dependencies.html":{}}}],["expressed",{"_index":1496,"title":{},"body":{"license.html":{}}}],["extends",{"_index":549,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["extent",{"_index":1227,"title":{},"body":{"license.html":{}}}],["extractjwt",{"_index":546,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":553,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["factual",{"_index":1403,"title":{},"body":{"license.html":{}}}],["fail",{"_index":1447,"title":{},"body":{"license.html":{}}}],["fails",{"_index":1457,"title":{},"body":{"license.html":{}}}],["failure",{"_index":1532,"title":{},"body":{"license.html":{}}}],["fair",{"_index":1359,"title":{},"body":{"license.html":{}}}],["false",{"_index":450,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["faz",{"_index":1643,"title":{},"body":{"todo.html":{}}}],["fee",{"_index":1408,"title":{},"body":{"license.html":{}}}],["felip.migthur@gmail.com",{"_index":561,"title":{},"body":{"classes/LoginDto.html":{}}}],["felipe",{"_index":1151,"title":{},"body":{"index.html":{}}}],["ferramentas",{"_index":1141,"title":{},"body":{"index.html":{}}}],["fifty",{"_index":1282,"title":{},"body":{"license.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["files",{"_index":1218,"title":{},"body":{"license.html":{}}}],["finally",{"_index":1454,"title":{},"body":{"license.html":{}}}],["findall",{"_index":221,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findall(@loggeduser",{"_index":260,"title":{},"body":{"controllers/BagController.html":{}}}],["findall(user",{"_index":236,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{}}}],["findone",{"_index":222,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(@loggeduser",{"_index":264,"title":{},"body":{"controllers/BagController.html":{}}}],["findone(@param('id",{"_index":370,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["findone(id",{"_index":284,"title":{},"body":{"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["findone(user",{"_index":241,"title":{},"body":{"controllers/BagController.html":{}}}],["first",{"_index":1314,"title":{},"body":{"license.html":{}}}],["fit",{"_index":1501,"title":{},"body":{"license.html":{}}}],["fix",{"_index":924,"title":{},"body":{"changelog.html":{}}}],["fixed",{"_index":971,"title":{},"body":{"changelog.html":{}}}],["flip@1234",{"_index":563,"title":{},"body":{"classes/LoginDto.html":{}}}],["following",{"_index":952,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["footnote",{"_index":985,"title":{},"body":{"changelog.html":{}}}],["form",{"_index":1189,"title":{},"body":{"license.html":{}}}],["format",{"_index":818,"title":{},"body":{"changelog.html":{}}}],["formatting",{"_index":1058,"title":{},"body":{"changelog.html":{}}}],["foto",{"_index":446,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["foundation",{"_index":1583,"title":{},"body":{"license.html":{}}}],["fraca",{"_index":537,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["fraca'})@apiproperty({description",{"_index":520,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["free",{"_index":1292,"title":{},"body":{"license.html":{}}}],["freitas",{"_index":512,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["french",{"_index":863,"title":{},"body":{"changelog.html":{}}}],["frequently",{"_index":842,"title":{},"body":{"changelog.html":{}}}],["from\"src/category/entities/category.entity",{"_index":607,"title":{},"body":{"classes/Product.html":{}}}],["from\"src/product/entities/product.entity",{"_index":723,"title":{},"body":{"classes/User.html":{}}}],["fun",{"_index":964,"title":{},"body":{"changelog.html":{}}}],["function",{"_index":1007,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["functions",{"_index":1110,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["função",{"_index":1628,"title":{},"body":{"todo.html":{}}}],["further",{"_index":915,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["gather",{"_index":997,"title":{},"body":{"changelog.html":{}}}],["general",{"_index":1254,"title":{},"body":{"license.html":{}}}],["gerado",{"_index":570,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["german",{"_index":853,"title":{},"body":{"changelog.html":{}}}],["get(':id",{"_index":263,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["get(':id')@apioperation({summary",{"_index":242,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["get('find",{"_index":758,"title":{},"body":{"controllers/UserController.html":{}}}],["get()@apioperation({summary",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["get()@useguards(undefined)@apioperation({summary",{"_index":118,"title":{},"body":{"controllers/AuthController.html":{}}}],["get,post,res,param,patch,delete,httpcode,httpstatus",{"_index":632,"title":{},"body":{"controllers/ProductController.html":{}}}],["getappstatus",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getappstatus(@req",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getappstatus(baseurl",{"_index":94,"title":{},"body":{"injectables/AppService.html":{}}}],["getappstatus(req",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getting",{"_index":811,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["git",{"_index":922,"title":{},"body":{"changelog.html":{}}}],["github",{"_index":1044,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["given",{"_index":1587,"title":{},"body":{"license.html":{}}}],["gnu",{"_index":1253,"title":{},"body":{"license.html":{}}}],["good",{"_index":1052,"title":{},"body":{"changelog.html":{}}}],["goodwill",{"_index":1529,"title":{},"body":{"license.html":{}}}],["governed",{"_index":1374,"title":{},"body":{"license.html":{}}}],["grant",{"_index":1225,"title":{},"body":{"license.html":{}}}],["granted",{"_index":1311,"title":{},"body":{"license.html":{}}}],["grants",{"_index":1287,"title":{},"body":{"license.html":{}}}],["guidelines",{"_index":1055,"title":{},"body":{"changelog.html":{}}}],["guiding",{"_index":845,"title":{},"body":{"changelog.html":{}}}],["h",{"_index":316,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["h4vry",{"_index":875,"title":{},"body":{"changelog.html":{}}}],["hameds",{"_index":883,"title":{},"body":{"changelog.html":{}}}],["handleerror",{"_index":287,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["handleerror(error",{"_index":1114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["having",{"_index":1223,"title":{},"body":{"license.html":{}}}],["headings",{"_index":996,"title":{},"body":{"changelog.html":{}}}],["held",{"_index":1573,"title":{},"body":{"license.html":{}}}],["help",{"_index":899,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":1289,"title":{},"body":{"license.html":{}}}],["hereof",{"_index":1571,"title":{},"body":{"license.html":{}}}],["hopefully",{"_index":1038,"title":{},"body":{"changelog.html":{}}}],["http://mozilla.org/mpl/2.0",{"_index":1602,"title":{},"body":{"license.html":{}}}],["httpcode",{"_index":246,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content",{"_index":267,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["httpcode(httpstatus.no_content)@delete(':id')@apioperation({summary",{"_index":231,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{}}}],["httpcode(httpstatus.ok",{"_index":143,"title":{},"body":{"controllers/AuthController.html":{}}}],["https://api",{"_index":1121,"title":{},"body":{"index.html":{}}}],["https://github.com/diegofreitas50/api",{"_index":1125,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":247,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["id",{"_index":206,"title":{},"body":{"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["id:dto.categoryid",{"_index":687,"title":{},"body":{"injectables/ProductService.html":{}}}],["id:string",{"_index":271,"title":{},"body":{"controllers/BagController.html":{},"classes/UpdateUserDto.html":{}}}],["id:true",{"_index":310,"title":{},"body":{"injectables/BagService.html":{},"injectables/ProductService.html":{}}}],["id:user.id",{"_index":686,"title":{},"body":{"injectables/ProductService.html":{}}}],["ideal",{"_index":910,"title":{},"body":{"changelog.html":{}}}],["identifier",{"_index":1062,"title":{},"body":{"coverage.html":{}}}],["identity",{"_index":672,"title":{},"body":{"injectables/ProductService.html":{},"changelog.html":{}}}],["ignoreexpiration",{"_index":554,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["ignoring",{"_index":907,"title":{},"body":{"changelog.html":{}}}],["iguais",{"_index":791,"title":{},"body":{"injectables/UserService.html":{}}}],["ii",{"_index":1331,"title":{},"body":{"license.html":{}}}],["imgurl",{"_index":304,"title":{},"body":{"injectables/BagService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{}}}],["imgurl:string",{"_index":465,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["imgurl:true",{"_index":678,"title":{},"body":{"injectables/ProductService.html":{}}}],["implements",{"_index":590,"title":{},"body":{"injectables/PrismaService.html":{}}}],["implied",{"_index":1321,"title":{},"body":{"license.html":{}}}],["import",{"_index":40,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"license.html":{}}}],["imports",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["import{category",{"_index":606,"title":{},"body":{"classes/Product.html":{}}}],["impossible",{"_index":1428,"title":{},"body":{"license.html":{}}}],["improve",{"_index":912,"title":{},"body":{"changelog.html":{}}}],["inability",{"_index":1424,"title":{},"body":{"license.html":{}}}],["inaccuracies",{"_index":1404,"title":{},"body":{"license.html":{}}}],["incidental",{"_index":1522,"title":{},"body":{"license.html":{}}}],["include",{"_index":1421,"title":{},"body":{"license.html":{}}}],["included",{"_index":1435,"title":{},"body":{"license.html":{}}}],["includes",{"_index":1266,"title":{},"body":{"license.html":{}}}],["including",{"_index":1056,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["incluir",{"_index":226,"title":{},"body":{"controllers/BagController.html":{},"todo.html":{}}}],["incompatible",{"_index":1201,"title":{},"body":{"license.html":{}}}],["incurred",{"_index":1420,"title":{},"body":{"license.html":{}}}],["indemnify",{"_index":1419,"title":{},"body":{"license.html":{}}}],["indemnity",{"_index":1410,"title":{},"body":{"license.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indirect",{"_index":1274,"title":{},"body":{"license.html":{}}}],["indirectly",{"_index":1482,"title":{},"body":{"license.html":{}}}],["individual",{"_index":1169,"title":{},"body":{"license.html":{}}}],["inestapplication",{"_index":586,"title":{},"body":{"injectables/PrismaService.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["inform",{"_index":1372,"title":{},"body":{"license.html":{}}}],["informadas",{"_index":789,"title":{},"body":{"injectables/UserService.html":{}}}],["informed",{"_index":1538,"title":{},"body":{"license.html":{}}}],["infringed",{"_index":1247,"title":{},"body":{"license.html":{}}}],["infringement",{"_index":1473,"title":{},"body":{"license.html":{}}}],["infringements",{"_index":1327,"title":{},"body":{"license.html":{}}}],["infringes",{"_index":1483,"title":{},"body":{"license.html":{}}}],["infringing",{"_index":1502,"title":{},"body":{"license.html":{}}}],["initial",{"_index":1190,"title":{},"body":{"license.html":{}}}],["initiate",{"_index":1470,"title":{},"body":{"license.html":{}}}],["injectable",{"_index":91,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":92,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injury",{"_index":1543,"title":{},"body":{"license.html":{}}}],["inserir",{"_index":431,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["installcriando",{"_index":1128,"title":{},"body":{"index.html":{}}}],["instead",{"_index":1009,"title":{},"body":{"changelog.html":{}}}],["intellectual",{"_index":1295,"title":{},"body":{"license.html":{}}}],["intended",{"_index":1360,"title":{},"body":{"license.html":{}}}],["intentionally",{"_index":1022,"title":{},"body":{"changelog.html":{}}}],["inválido",{"_index":534,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inválido.'})@apiproperty({description",{"_index":485,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["inválidos",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["isadmin",{"_index":289,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"classes/CreateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["isadmin(user",{"_index":390,"title":{},"body":{"injectables/CategoryService.html":{},"miscellaneous/functions.html":{}}}],["isadmin:false",{"_index":800,"title":{},"body":{"injectables/UserService.html":{}}}],["isadmin:true",{"_index":798,"title":{},"body":{"injectables/UserService.html":{}}}],["isboolean",{"_index":425,"title":{},"body":{"classes/CreateBagDto.html":{},"classes/CreateProductDto.html":{}}}],["isboolean()@apiproperty({example",{"_index":449,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isemail",{"_index":528,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isemail()@apiproperty({description",{"_index":489,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["ishashvalid",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["isnotempty",{"_index":565,"title":{},"body":{"classes/LoginDto.html":{}}}],["isnumber",{"_index":459,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{}}}],["isnumber()@apiproperty({example",{"_index":453,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["iso",{"_index":978,"title":{},"body":{"changelog.html":{}}}],["isowner",{"_index":292,"title":{},"body":{"injectables/BagService.html":{},"injectables/ProductService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"todo.html":{}}}],["isowner(user",{"_index":1115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["isowner(user,selectproduct.userid",{"_index":697,"title":{},"body":{"injectables/ProductService.html":{}}}],["isowner(user,useridfrombag",{"_index":323,"title":{},"body":{"injectables/BagService.html":{}}}],["isowner(user,useridfrombag.userid",{"_index":328,"title":{},"body":{"injectables/BagService.html":{}}}],["isstring",{"_index":434,"title":{},"body":{"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["isstring()@apiproperty({description",{"_index":430,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["isstring()@apiproperty({example",{"_index":439,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["isstring()@isnotempty()@apiproperty({description",{"_index":560,"title":{},"body":{"classes/LoginDto.html":{}}}],["isuuid",{"_index":426,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["isuuid()@apiproperty({description",{"_index":415,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["it's",{"_index":893,"title":{},"body":{"changelog.html":{}}}],["italian",{"_index":857,"title":{},"body":{"changelog.html":{}}}],["jkostolansky",{"_index":877,"title":{},"body":{"changelog.html":{}}}],["judgment",{"_index":1477,"title":{},"body":{"license.html":{}}}],["judicial",{"_index":1429,"title":{},"body":{"license.html":{}}}],["jurisdiction",{"_index":1423,"title":{},"body":{"license.html":{}}}],["jurisdictions",{"_index":1547,"title":{},"body":{"license.html":{}}}],["jwt",{"_index":164,"title":{},"body":{"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtfromrequest",{"_index":552,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":156,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":154,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["karalamalar",{"_index":862,"title":{},"body":{"changelog.html":{}}}],["keep",{"_index":820,"title":{},"body":{"changelog.html":{}}}],["keeping",{"_index":1000,"title":{},"body":{"changelog.html":{}}}],["kind",{"_index":1495,"title":{},"body":{"license.html":{}}}],["known",{"_index":1402,"title":{},"body":{"license.html":{}}}],["korean",{"_index":878,"title":{},"body":{"changelog.html":{}}}],["language",{"_index":1578,"title":{},"body":{"license.html":{}}}],["larger",{"_index":1214,"title":{},"body":{"license.html":{}}}],["later",{"_index":1259,"title":{},"body":{"license.html":{}}}],["latest",{"_index":835,"title":{},"body":{"changelog.html":{}}}],["law",{"_index":1545,"title":{},"body":{"license.html":{}}}],["laws",{"_index":1558,"title":{},"body":{"license.html":{}}}],["left",{"_index":1023,"title":{},"body":{"changelog.html":{}}}],["legal",{"_index":1170,"title":{},"body":{"license.html":{}}}],["length",{"_index":529,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(11",{"_index":482,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["length(3",{"_index":503,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["lesser",{"_index":1255,"title":{},"body":{"license.html":{}}}],["letras",{"_index":510,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["liability",{"_index":1398,"title":{},"body":{"license.html":{}}}],["liable",{"_index":1520,"title":{},"body":{"license.html":{}}}],["licensable",{"_index":1222,"title":{},"body":{"license.html":{}}}],["license",{"_index":1158,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["license(s",{"_index":1392,"title":{},"body":{"license.html":{}}}],["license.1.6",{"_index":1211,"title":{},"body":{"license.html":{}}}],["license.md",{"_index":1162,"title":{},"body":{"index.html":{}}}],["licenses",{"_index":1203,"title":{},"body":{"license.html":{}}}],["licensing",{"_index":1323,"title":{},"body":{"license.html":{}}}],["licença",{"_index":1154,"title":{},"body":{"index.html":{}}}],["ligadas",{"_index":1631,"title":{},"body":{"todo.html":{}}}],["limit",{"_index":1361,"title":{},"body":{"license.html":{}}}],["limitation",{"_index":1244,"title":{},"body":{"license.html":{}}}],["limitations",{"_index":1317,"title":{},"body":{"license.html":{}}}],["link",{"_index":974,"title":{},"body":{"changelog.html":{}}}],["linkedin",{"_index":1150,"title":{},"body":{"index.html":{}}}],["links",{"_index":834,"title":{},"body":{"changelog.html":{}}}],["listar",{"_index":353,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["literal",{"_index":542,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["litigation",{"_index":1471,"title":{},"body":{"license.html":{}}}],["livro",{"_index":456,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["local",{"_index":1099,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["localizar",{"_index":625,"title":{},"body":{"controllers/ProductController.html":{}}}],["location",{"_index":1605,"title":{},"body":{"license.html":{}}}],["log",{"_index":892,"title":{},"body":{"changelog.html":{}}}],["logado",{"_index":738,"title":{},"body":{"controllers/UserController.html":{}}}],["loggeduser",{"_index":136,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["loggerd",{"_index":137,"title":{},"body":{"controllers/AuthController.html":{}}}],["logging",{"_index":1014,"title":{},"body":{"changelog.html":{}}}],["login",{"_index":105,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["login(@body",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(logindto",{"_index":107,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["logindto",{"_index":108,"title":{"classes/LoginDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginDto.html":{},"coverage.html":{}}}],["loginresponsedto",{"_index":129,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["logos",{"_index":1338,"title":{},"body":{"license.html":{}}}],["logs",{"_index":951,"title":{},"body":{"changelog.html":{}}}],["look",{"_index":1608,"title":{},"body":{"license.html":{}}}],["loss",{"_index":1528,"title":{},"body":{"license.html":{}}}],["losses",{"_index":1535,"title":{},"body":{"license.html":{}}}],["lost",{"_index":1526,"title":{},"body":{"license.html":{}}}],["m",{"_index":870,"title":{},"body":{"changelog.html":{}}}],["made",{"_index":1206,"title":{},"body":{"license.html":{}}}],["magol",{"_index":860,"title":{},"body":{"changelog.html":{}}}],["mail",{"_index":490,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maintains",{"_index":1554,"title":{},"body":{"license.html":{}}}],["maiúsculas",{"_index":522,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["make",{"_index":841,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["makes",{"_index":904,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["making",{"_index":963,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["malfunction",{"_index":1533,"title":{},"body":{"license.html":{}}}],["management",{"_index":1277,"title":{},"body":{"license.html":{}}}],["manner",{"_index":1382,"title":{},"body":{"license.html":{}}}],["markdown",{"_index":982,"title":{},"body":{"changelog.html":{}}}],["marketplace",{"_index":1117,"title":{},"body":{"index.html":{}}}],["marketplace.gitinstalação",{"_index":1126,"title":{},"body":{"index.html":{}}}],["marks",{"_index":1337,"title":{},"body":{"license.html":{}}}],["match",{"_index":959,"title":{},"body":{"changelog.html":{}}}],["matches",{"_index":530,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":536,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[0",{"_index":533,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matching",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["material",{"_index":1216,"title":{},"body":{"license.html":{}}}],["matter",{"_index":1570,"title":{},"body":{"license.html":{}}}],["maximum",{"_index":1226,"title":{},"body":{"license.html":{}}}],["means",{"_index":1167,"title":{},"body":{"license.html":{}}}],["mentioning",{"_index":1027,"title":{},"body":{"changelog.html":{}}}],["mentions",{"_index":942,"title":{},"body":{"changelog.html":{}}}],["merchantable",{"_index":1500,"title":{},"body":{"license.html":{}}}],["merge",{"_index":918,"title":{},"body":{"changelog.html":{}}}],["message",{"_index":124,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateUserDto.html":{}}}],["metadata",{"_index":1101,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":1245,"title":{},"body":{"license.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["minlength",{"_index":531,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6",{"_index":535,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minlength(6)@isstring()@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":516,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["minúsculas",{"_index":523,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":1109,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["missing",{"_index":1021,"title":{},"body":{"changelog.html":{}}}],["mode",{"_index":1137,"title":{},"body":{"index.html":{}}}],["modification",{"_index":1237,"title":{},"body":{"license.html":{}}}],["modifications",{"_index":1196,"title":{},"body":{"license.html":{}}}],["modified",{"_index":1592,"title":{},"body":{"license.html":{}}}],["modify",{"_index":1299,"title":{},"body":{"license.html":{}}}],["module",{"_index":63,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":65,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["momento",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{}}}],["momento'})@apibearerauth",{"_index":122,"title":{},"body":{"controllers/AuthController.html":{}}}],["more",{"_index":1281,"title":{},"body":{"license.html":{}}}],["moreover",{"_index":1464,"title":{},"body":{"license.html":{}}}],["mozilla",{"_index":1156,"title":{},"body":{"index.html":{},"license.html":{}}}],["mpbzh",{"_index":855,"title":{},"body":{"changelog.html":{}}}],["mpl",{"_index":1600,"title":{},"body":{"license.html":{}}}],["much",{"_index":1017,"title":{},"body":{"changelog.html":{}}}],["muito",{"_index":519,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["name",{"_index":33,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{},"license.html":{}}}],["name:true",{"_index":693,"title":{},"body":{"injectables/ProductService.html":{}}}],["navigation",{"_index":833,"title":{},"body":{"changelog.html":{}}}],["necessary",{"_index":1339,"title":{},"body":{"license.html":{}}}],["needs",{"_index":840,"title":{},"body":{"changelog.html":{}}}],["negligence",{"_index":1518,"title":{},"body":{"license.html":{}}}],["nestjs",{"_index":1145,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":41,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":1087,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":157,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":134,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":1090,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":44,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/ProductController.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["new",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"classes/Product.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"license.html":{}}}],["new:boolean",{"_index":467,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["new:true",{"_index":691,"title":{},"body":{"injectables/ProductService.html":{}}}],["nodejs",{"_index":1143,"title":{},"body":{"index.html":{}}}],["noise",{"_index":1019,"title":{},"body":{"changelog.html":{}}}],["nome",{"_index":505,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["non",{"_index":1293,"title":{},"body":{"license.html":{}}}],["normalize('nfd",{"_index":406,"title":{},"body":{"injectables/CategoryService.html":{}}}],["nos",{"_index":1635,"title":{},"body":{"todo.html":{}}}],["notable",{"_index":814,"title":{},"body":{"changelog.html":{}}}],["note",{"_index":999,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["notfoundexception",{"_index":286,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["notfoundexception('não",{"_index":315,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["notfoundexception(`registro",{"_index":324,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["nothing",{"_index":1562,"title":{},"body":{"license.html":{}}}],["notice",{"_index":1192,"title":{},"body":{"license.html":{}}}],["notices",{"_index":1394,"title":{},"body":{"license.html":{}}}],["notifies",{"_index":1465,"title":{},"body":{"license.html":{}}}],["notify",{"_index":1458,"title":{},"body":{"license.html":{}}}],["notwithstanding",{"_index":1324,"title":{},"body":{"license.html":{}}}],["nova",{"_index":345,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateCategoryDto.html":{}}}],["now",{"_index":1048,"title":{},"body":{"changelog.html":{}}}],["npm",{"_index":1127,"title":{},"body":{"index.html":{}}}],["npx",{"_index":1131,"title":{},"body":{"index.html":{}}}],["number",{"_index":452,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{},"license.html":{}}}],["não",{"_index":325,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["nível",{"_index":493,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"todo.html":{}}}],["números",{"_index":486,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["o",{"_index":119,"title":{},"body":{"controllers/AuthController.html":{},"index.html":{}}}],["object",{"_index":781,"title":{},"body":{"injectables/UserService.html":{}}}],["objeto",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["obligation",{"_index":1415,"title":{},"body":{"license.html":{}}}],["obligations",{"_index":1411,"title":{},"body":{"license.html":{}}}],["obtain",{"_index":1375,"title":{},"body":{"license.html":{}}}],["obvious",{"_index":977,"title":{},"body":{"changelog.html":{}}}],["occupy",{"_index":1016,"title":{},"body":{"changelog.html":{}}}],["offer",{"_index":1308,"title":{},"body":{"license.html":{}}}],["offered",{"_index":1416,"title":{},"body":{"license.html":{}}}],["offering",{"_index":1249,"title":{},"body":{"license.html":{}}}],["one",{"_index":1389,"title":{},"body":{"license.html":{}}}],["ongoing",{"_index":1456,"title":{},"body":{"license.html":{}}}],["onmoduleinit",{"_index":584,"title":{},"body":{"injectables/PrismaService.html":{}}}],["open",{"_index":943,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":1393,"title":{},"body":{"license.html":{}}}],["optional",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateProductDto.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["order",{"_index":1430,"title":{},"body":{"license.html":{}}}],["ordering",{"_index":1034,"title":{},"body":{"changelog.html":{}}}],["ordinary",{"_index":1440,"title":{},"body":{"license.html":{}}}],["original",{"_index":1355,"title":{},"body":{"license.html":{}}}],["originally",{"_index":1590,"title":{},"body":{"license.html":{}}}],["os",{"_index":621,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{},"todo.html":{}}}],["osadchyi",{"_index":885,"title":{},"body":{"changelog.html":{}}}],["others",{"_index":1181,"title":{},"body":{"license.html":{}}}],["otherwise",{"_index":1279,"title":{},"body":{"license.html":{}}}],["ou",{"_index":524,"title":{},"body":{"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{}}}],["out",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"changelog.html":{},"overview.html":{}}}],["outdated",{"_index":973,"title":{},"body":{"changelog.html":{}}}],["outstanding",{"_index":1284,"title":{},"body":{"license.html":{}}}],["over",{"_index":890,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":1614,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner.utils",{"_index":293,"title":{},"body":{"injectables/BagService.html":{},"injectables/ProductService.html":{}}}],["owner.utils.ts",{"_index":1082,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["ownership",{"_index":1280,"title":{},"body":{"license.html":{}}}],["owns",{"_index":1175,"title":{},"body":{"license.html":{}}}],["p@$sw0rd",{"_index":480,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["package",{"_index":1085,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["pages",{"_index":1045,"title":{},"body":{"changelog.html":{}}}],["para",{"_index":348,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["param",{"_index":52,"title":{},"body":{"controllers/AppController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["param('id",{"_index":270,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{}}}],["parameters",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":1306,"title":{},"body":{"license.html":{}}}],["partial",{"_index":403,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/UserService.html":{}}}],["partialtype",{"_index":701,"title":{},"body":{"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{}}}],["partialtype(createbagdto",{"_index":702,"title":{},"body":{"classes/UpdateBagDto.html":{}}}],["partialtype(createcategorydto",{"_index":704,"title":{},"body":{"classes/UpdateCategoryDto.html":{}}}],["partialtype(createproductdto",{"_index":706,"title":{},"body":{"classes/UpdateProductDto.html":{}}}],["partialtype(createuserdto",{"_index":711,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["particular",{"_index":1183,"title":{},"body":{"license.html":{}}}],["party",{"_index":1537,"title":{},"body":{"license.html":{}}}],["party's",{"_index":1330,"title":{},"body":{"license.html":{}}}],["passport",{"_index":548,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":158,"title":{},"body":{"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["passportmodule.register",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/UserModule.html":{}}}],["passportstrategy",{"_index":545,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":550,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["password:string",{"_index":567,"title":{},"body":{"classes/LoginDto.html":{}}}],["patch",{"_index":245,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["patch(':id",{"_index":372,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["patch(':id')@apioperation({summary",{"_index":359,"title":{},"body":{"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["patent",{"_index":1240,"title":{},"body":{"license.html":{}}}],["payload",{"_index":544,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.email",{"_index":556,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["pelo",{"_index":351,"title":{},"body":{"controllers/CategoryController.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{}}}],["people",{"_index":920,"title":{},"body":{"changelog.html":{}}}],["percent",{"_index":1283,"title":{},"body":{"license.html":{}}}],["perfil",{"_index":496,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["perform",{"_index":1301,"title":{},"body":{"license.html":{}}}],["performance",{"_index":1506,"title":{},"body":{"license.html":{}}}],["permits",{"_index":1390,"title":{},"body":{"license.html":{}}}],["permitted",{"_index":1349,"title":{},"body":{"license.html":{}}}],["persian",{"_index":882,"title":{},"body":{"changelog.html":{}}}],["personal",{"_index":1542,"title":{},"body":{"license.html":{}}}],["phrasing",{"_index":927,"title":{},"body":{"changelog.html":{}}}],["pierceh89",{"_index":879,"title":{},"body":{"changelog.html":{}}}],["place",{"_index":1556,"title":{},"body":{"license.html":{}}}],["placed",{"_index":1433,"title":{},"body":{"license.html":{}}}],["podcast",{"_index":1028,"title":{},"body":{"changelog.html":{}}}],["poderão",{"_index":498,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["polish",{"_index":868,"title":{},"body":{"changelog.html":{}}}],["portions",{"_index":1198,"title":{},"body":{"license.html":{}}}],["portugese",{"_index":866,"title":{},"body":{"changelog.html":{}}}],["portuguese",{"_index":926,"title":{},"body":{"changelog.html":{}}}],["porx",{"_index":881,"title":{},"body":{"changelog.html":{}}}],["possibility",{"_index":1539,"title":{},"body":{"license.html":{}}}],["possible",{"_index":1228,"title":{},"body":{"license.html":{}}}],["post",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["post('create",{"_index":752,"title":{},"body":{"controllers/UserController.html":{}}}],["post()@apioperation({summary",{"_index":225,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":109,"title":{},"body":{"controllers/AuthController.html":{}}}],["postgresql",{"_index":1146,"title":{},"body":{"index.html":{}}}],["power",{"_index":1272,"title":{},"body":{"license.html":{}}}],["preferred",{"_index":1262,"title":{},"body":{"license.html":{}}}],["prefix",{"_index":103,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["prevent",{"_index":1563,"title":{},"body":{"license.html":{}}}],["previous",{"_index":837,"title":{},"body":{"changelog.html":{}}}],["price",{"_index":305,"title":{},"body":{"injectables/BagService.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{}}}],["price:number",{"_index":469,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["price:true",{"_index":692,"title":{},"body":{"injectables/ProductService.html":{}}}],["principal",{"_index":1555,"title":{},"body":{"license.html":{}}}],["principles",{"_index":846,"title":{},"body":{"changelog.html":{}}}],["prior",{"_index":1001,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["prisma",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"index.html":{}}}],["prisma.bagcreateinput",{"_index":296,"title":{},"body":{"injectables/BagService.html":{}}}],["prisma.categorycreateinput",{"_index":391,"title":{},"body":{"injectables/CategoryService.html":{}}}],["prisma.productcreateinput",{"_index":680,"title":{},"body":{"injectables/ProductService.html":{}}}],["prisma.productupdateinput",{"_index":698,"title":{},"body":{"injectables/ProductService.html":{}}}],["prisma.service",{"_index":580,"title":{},"body":{"modules/PrismaModule.html":{}}}],["prisma.usercreateinput",{"_index":792,"title":{},"body":{"injectables/UserService.html":{}}}],["prisma/client",{"_index":255,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/PrismaService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["prisma/client/runtime",{"_index":675,"title":{},"body":{"injectables/ProductService.html":{}}}],["prisma/prisma.module",{"_index":84,"title":{},"body":{"modules/AppModule.html":{}}}],["prismaclient",{"_index":582,"title":{},"body":{"injectables/PrismaService.html":{}}}],["prismamodule",{"_index":73,"title":{"modules/PrismaModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["prismamodule,authmodule",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["prismamodule,passportmodule.register",{"_index":659,"title":{},"body":{"modules/ProductModule.html":{}}}],["prismaservice",{"_index":175,"title":{"injectables/PrismaService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["private",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["process",{"_index":636,"title":{},"body":{"controllers/ProductController.html":{},"license.html":{}}}],["process.env.jwt_secret",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["product",{"_index":207,"title":{"classes/Product.html":{}},"body":{"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"coverage.html":{}}}],["product.controller",{"_index":657,"title":{},"body":{"modules/ProductModule.html":{}}}],["product.dto",{"_index":639,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{}}}],["product.dto.ts",{"_index":437,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["product.dto.ts:15",{"_index":444,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:21",{"_index":447,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:27",{"_index":451,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:33",{"_index":455,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:39",{"_index":458,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:45",{"_index":441,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.dto.ts:9",{"_index":457,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["product.service",{"_index":658,"title":{},"body":{"modules/ProductModule.html":{}}}],["product/product.module",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["product:{select:{id:true,title:true,new:true,price:true",{"_index":312,"title":{},"body":{"injectables/BagService.html":{}}}],["product?:product",{"_index":217,"title":{},"body":{"classes/Bag.html":{},"classes/User.html":{}}}],["productcontroller",{"_index":611,"title":{"controllers/ProductController.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"coverage.html":{}}}],["productid",{"_index":413,"title":{},"body":{"classes/CreateBagDto.html":{}}}],["production",{"_index":1139,"title":{},"body":{"index.html":{}}}],["production.up.railway.app/apipara",{"_index":1123,"title":{},"body":{"index.html":{}}}],["production.up.railway.appswagger",{"_index":1122,"title":{},"body":{"index.html":{}}}],["productmodule",{"_index":74,"title":{"modules/ProductModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProductModule.html":{},"modules.html":{},"overview.html":{}}}],["products",{"_index":334,"title":{},"body":{"classes/Category.html":{},"todo.html":{}}}],["productservice",{"_index":637,"title":{"injectables/ProductService.html":{}},"body":{"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"coverage.html":{},"overview.html":{}}}],["produto",{"_index":227,"title":{},"body":{"controllers/BagController.html":{},"classes/CreateBagDto.html":{},"classes/CreateProductDto.html":{},"controllers/ProductController.html":{}}}],["produto'})@httpcode(httpstatus.no_content",{"_index":617,"title":{},"body":{"controllers/ProductController.html":{}}}],["produtos",{"_index":622,"title":{},"body":{"controllers/ProductController.html":{},"todo.html":{}}}],["profile",{"_index":106,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(@loggeduser",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{}}}],["profile(user",{"_index":116,"title":{},"body":{"controllers/AuthController.html":{}}}],["profits",{"_index":1527,"title":{},"body":{"license.html":{}}}],["progress",{"_index":1622,"title":{},"body":{"todo.html":{}}}],["prohibited",{"_index":1437,"title":{},"body":{"license.html":{}}}],["prohibits",{"_index":1546,"title":{},"body":{"license.html":{}}}],["project",{"_index":816,"title":{},"body":{"changelog.html":{}}}],["projects",{"_index":947,"title":{},"body":{"changelog.html":{}}}],["projeto",{"_index":1116,"title":{},"body":{"index.html":{}}}],["promise",{"_index":115,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{}}}],["proper",{"_index":1057,"title":{},"body":{"changelog.html":{}}}],["properly",{"_index":954,"title":{},"body":{"changelog.html":{}}}],["properties",{"_index":204,"title":{"properties.html":{}},"body":{"classes/Bag.html":{},"classes/Category.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"injectables/UserService.html":{},"properties.html":{}}}],["property",{"_index":1296,"title":{},"body":{"license.html":{}}}],["prove",{"_index":1507,"title":{},"body":{"license.html":{}}}],["provided",{"_index":1388,"title":{},"body":{"license.html":{}}}],["providers",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["provides",{"_index":1577,"title":{},"body":{"license.html":{}}}],["provision",{"_index":1572,"title":{},"body":{"license.html":{}}}],["provisionally",{"_index":1450,"title":{},"body":{"license.html":{}}}],["provisions",{"_index":1561,"title":{},"body":{"license.html":{}}}],["pt",{"_index":935,"title":{},"body":{"changelog.html":{}}}],["public",{"_index":1157,"title":{},"body":{"index.html":{},"license.html":{}}}],["publish",{"_index":1586,"title":{},"body":{"license.html":{}}}],["published",{"_index":1591,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":1013,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["purposes",{"_index":1270,"title":{},"body":{"license.html":{}}}],["pushrodando",{"_index":1133,"title":{},"body":{"index.html":{}}}],["put",{"_index":1604,"title":{},"body":{"license.html":{}}}],["quality",{"_index":1505,"title":{},"body":{"license.html":{}}}],["que",{"_index":1642,"title":{},"body":{"todo.html":{}}}],["questions",{"_index":844,"title":{},"body":{"changelog.html":{}}}],["railway",{"_index":1147,"title":{},"body":{"index.html":{}}}],["rea",{"_index":1632,"title":{},"body":{"todo.html":{}}}],["readme",{"_index":960,"title":{},"body":{"changelog.html":{},"todo.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["realizar",{"_index":110,"title":{},"body":{"controllers/AuthController.html":{}}}],["reasonable",{"_index":1380,"title":{},"body":{"license.html":{}}}],["recebe",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["recebendo",{"_index":111,"title":{},"body":{"controllers/AuthController.html":{}}}],["receipt",{"_index":1468,"title":{},"body":{"license.html":{}}}],["received",{"_index":1466,"title":{},"body":{"license.html":{}}}],["recent",{"_index":972,"title":{},"body":{"changelog.html":{}}}],["recipient",{"_index":1385,"title":{},"body":{"license.html":{}}}],["recipients",{"_index":1373,"title":{},"body":{"license.html":{}}}],["recommended",{"_index":1031,"title":{},"body":{"changelog.html":{}}}],["record",{"_index":400,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["refer",{"_index":1008,"title":{},"body":{"changelog.html":{}}}],["reference",{"_index":1559,"title":{},"body":{"license.html":{}}}],["references",{"_index":1595,"title":{},"body":{"license.html":{}}}],["reflect",{"_index":1100,"title":{},"body":{"dependencies.html":{}}}],["reformed",{"_index":1575,"title":{},"body":{"license.html":{}}}],["registro",{"_index":233,"title":{},"body":{"controllers/BagController.html":{}}}],["registros",{"_index":317,"title":{},"body":{"injectables/BagService.html":{}}}],["regulation",{"_index":1427,"title":{},"body":{"license.html":{}}}],["reinstated",{"_index":1449,"title":{},"body":{"license.html":{}}}],["relacionada",{"_index":445,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["relacionamentos",{"_index":1625,"title":{},"body":{"todo.html":{}}}],["relating",{"_index":1550,"title":{},"body":{"license.html":{}}}],["release",{"_index":995,"title":{},"body":{"changelog.html":{}}}],["released",{"_index":836,"title":{},"body":{"changelog.html":{}}}],["releases",{"_index":990,"title":{},"body":{"changelog.html":{}}}],["relevant",{"_index":1606,"title":{},"body":{"license.html":{}}}],["reluctantly",{"_index":961,"title":{},"body":{"changelog.html":{}}}],["remedy",{"_index":1401,"title":{},"body":{"license.html":{}}}],["remove",{"_index":737,"title":{},"body":{"controllers/UserController.html":{},"changelog.html":{},"license.html":{}}}],["removed",{"_index":929,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["removes",{"_index":331,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{}}}],["rename",{"_index":1594,"title":{},"body":{"license.html":{}}}],["repair",{"_index":1510,"title":{},"body":{"license.html":{}}}],["replace(/[^a",{"_index":407,"title":{},"body":{"injectables/CategoryService.html":{}}}],["representation",{"_index":1352,"title":{},"body":{"license.html":{}}}],["represents",{"_index":1353,"title":{},"body":{"license.html":{}}}],["reproduce",{"_index":1298,"title":{},"body":{"license.html":{}}}],["req",{"_index":37,"title":{},"body":{"controllers/AppController.html":{}}}],["req.get('host",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["req.protocol",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["requer",{"_index":521,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["request",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"miscellaneous/variables.html":{}}}],["request.user",{"_index":1652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["required",{"_index":1400,"title":{},"body":{"license.html":{}}}],["requirements",{"_index":1341,"title":{},"body":{"license.html":{}}}],["requisição",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["resellers",{"_index":1491,"title":{},"body":{"license.html":{}}}],["reset",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["respect",{"_index":1312,"title":{},"body":{"license.html":{}}}],["response.dto",{"_index":131,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["response.dto.ts",{"_index":569,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:14",{"_index":574,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:9",{"_index":572,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["responsibilities",{"_index":1370,"title":{},"body":{"license.html":{}}}],["restrict",{"_index":1379,"title":{},"body":{"license.html":{}}}],["restrita",{"_index":1633,"title":{},"body":{"todo.html":{}}}],["result",{"_index":1345,"title":{},"body":{"license.html":{}}}],["resulting",{"_index":1544,"title":{},"body":{"license.html":{}}}],["results",{"_index":61,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"todo.html":{},"miscellaneous/variables.html":{}}}],["retorna",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{}}}],["return",{"_index":59,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/PrismaService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":1032,"title":{},"body":{"changelog.html":{}}}],["rewrite",{"_index":903,"title":{},"body":{"changelog.html":{}}}],["right",{"_index":1224,"title":{},"body":{"license.html":{}}}],["rights",{"_index":1232,"title":{},"body":{"license.html":{}}}],["rimraf",{"_index":1103,"title":{},"body":{"dependencies.html":{}}}],["risk",{"_index":1504,"title":{},"body":{"license.html":{}}}],["rota",{"_index":1640,"title":{},"body":{"todo.html":{}}}],["rotas",{"_index":1630,"title":{},"body":{"todo.html":{}}}],["royalty",{"_index":1291,"title":{},"body":{"license.html":{}}}],["ru",{"_index":934,"title":{},"body":{"changelog.html":{}}}],["run",{"_index":1135,"title":{},"body":{"index.html":{}}}],["running",{"_index":99,"title":{},"body":{"injectables/AppService.html":{}}}],["russian",{"_index":872,"title":{},"body":{"changelog.html":{}}}],["rxjs",{"_index":673,"title":{},"body":{"injectables/ProductService.html":{},"dependencies.html":{}}}],["s",{"_index":886,"title":{},"body":{"changelog.html":{}}}],["sale",{"_index":1250,"title":{},"body":{"license.html":{}}}],["santos",{"_index":514,"title":{},"body":{"classes/CreateUserDto.html":{},"index.html":{}}}],["scenario",{"_index":911,"title":{},"body":{"changelog.html":{}}}],["scope",{"_index":1318,"title":{},"body":{"license.html":{}}}],["secondary",{"_index":1202,"title":{},"body":{"license.html":{}}}],["secret",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":555,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["section",{"_index":839,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["sections",{"_index":1015,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["see",{"_index":1347,"title":{},"body":{"license.html":{}}}],["select",{"_index":301,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["selectproduct",{"_index":695,"title":{},"body":{"injectables/ProductService.html":{}}}],["sell",{"_index":1307,"title":{},"body":{"license.html":{}}}],["selling",{"_index":1248,"title":{},"body":{"license.html":{}}}],["semantic",{"_index":822,"title":{},"body":{"changelog.html":{}}}],["semver",{"_index":953,"title":{},"body":{"changelog.html":{}}}],["senha",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{}}}],["senhas",{"_index":788,"title":{},"body":{"injectables/UserService.html":{}}}],["separate",{"_index":1217,"title":{},"body":{"license.html":{}}}],["serve",{"_index":1039,"title":{},"body":{"changelog.html":{}}}],["server",{"_index":98,"title":{},"body":{"injectables/AppService.html":{}}}],["service",{"_index":1336,"title":{},"body":{"license.html":{}}}],["servicing",{"_index":1509,"title":{},"body":{"license.html":{}}}],["shall",{"_index":1485,"title":{},"body":{"license.html":{}}}],["shares",{"_index":1285,"title":{},"body":{"license.html":{}}}],["signoptions",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{}}}],["silvestre",{"_index":1153,"title":{},"body":{"index.html":{}}}],["simplified",{"_index":848,"title":{},"body":{"changelog.html":{}}}],["site",{"_index":1011,"title":{},"body":{"changelog.html":{}}}],["skill",{"_index":1441,"title":{},"body":{"license.html":{}}}],["slovak",{"_index":876,"title":{},"body":{"changelog.html":{}}}],["sob",{"_index":1155,"title":{},"body":{"index.html":{}}}],["software",{"_index":1177,"title":{},"body":{"license.html":{}}}],["software.1.11",{"_index":1239,"title":{},"body":{"license.html":{}}}],["somente",{"_index":347,"title":{},"body":{"controllers/CategoryController.html":{},"classes/CreateUserDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"modules/BagModule.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"modules/CategoryModule.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"modules/PrismaModule.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"modules/ProductModule.html":{},"injectables/ProductService.html":{},"classes/UpdateBagDto.html":{},"classes/UpdateCategoryDto.html":{},"classes/UpdateProductDto.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"changelog.html":{},"license.html":{}}}],["space",{"_index":1018,"title":{},"body":{"changelog.html":{}}}],["special",{"_index":1521,"title":{},"body":{"license.html":{}}}],["specific",{"_index":1422,"title":{},"body":{"license.html":{}}}],["spelling",{"_index":928,"title":{},"body":{"changelog.html":{}}}],["src/.../handleerror.utils.ts",{"_index":1112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../is",{"_index":1113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../loggerd",{"_index":1647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":1111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:19",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":93,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":96,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":102,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts:22",{"_index":114,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.controller.ts:32",{"_index":123,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/auth/auth.module.ts",{"_index":155,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:15",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:9",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/dto/login",{"_index":568,"title":{},"body":{"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts",{"_index":559,"title":{},"body":{"classes/LoginDto.html":{},"coverage.html":{}}}],["src/auth/dto/login.dto.ts:11",{"_index":562,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/dto/login.dto.ts:19",{"_index":564,"title":{},"body":{"classes/LoginDto.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":538,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":543,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":540,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/loggerd",{"_index":248,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/bag/bag.controller.ts",{"_index":219,"title":{},"body":{"controllers/BagController.html":{},"coverage.html":{}}}],["src/bag/bag.controller.ts:22",{"_index":229,"title":{},"body":{"controllers/BagController.html":{}}}],["src/bag/bag.controller.ts:30",{"_index":240,"title":{},"body":{"controllers/BagController.html":{}}}],["src/bag/bag.controller.ts:38",{"_index":243,"title":{},"body":{"controllers/BagController.html":{}}}],["src/bag/bag.controller.ts:47",{"_index":235,"title":{},"body":{"controllers/BagController.html":{}}}],["src/bag/bag.module.ts",{"_index":276,"title":{},"body":{"modules/BagModule.html":{}}}],["src/bag/bag.service.ts",{"_index":278,"title":{},"body":{"injectables/BagService.html":{},"coverage.html":{}}}],["src/bag/bag.service.ts:14",{"_index":279,"title":{},"body":{"injectables/BagService.html":{}}}],["src/bag/bag.service.ts:17",{"_index":280,"title":{},"body":{"injectables/BagService.html":{}}}],["src/bag/bag.service.ts:35",{"_index":283,"title":{},"body":{"injectables/BagService.html":{}}}],["src/bag/bag.service.ts:52",{"_index":285,"title":{},"body":{"injectables/BagService.html":{}}}],["src/bag/bag.service.ts:73",{"_index":282,"title":{},"body":{"injectables/BagService.html":{}}}],["src/bag/dto/create",{"_index":411,"title":{},"body":{"classes/CreateBagDto.html":{},"coverage.html":{}}}],["src/bag/dto/update",{"_index":700,"title":{},"body":{"classes/UpdateBagDto.html":{},"coverage.html":{}}}],["src/bag/entities/bag.entity",{"_index":608,"title":{},"body":{"classes/Product.html":{},"injectables/ProductService.html":{},"classes/User.html":{}}}],["src/bag/entities/bag.entity.ts",{"_index":203,"title":{},"body":{"classes/Bag.html":{},"coverage.html":{}}}],["src/bag/entities/bag.entity.ts:5",{"_index":211,"title":{},"body":{"classes/Bag.html":{}}}],["src/bag/entities/bag.entity.ts:6",{"_index":214,"title":{},"body":{"classes/Bag.html":{}}}],["src/bag/entities/bag.entity.ts:7",{"_index":212,"title":{},"body":{"classes/Bag.html":{}}}],["src/bag/entities/bag.entity.ts:8",{"_index":210,"title":{},"body":{"classes/Bag.html":{}}}],["src/bag/entities/bag.entity.ts:9",{"_index":213,"title":{},"body":{"classes/Bag.html":{}}}],["src/category/category.controller.ts",{"_index":341,"title":{},"body":{"controllers/CategoryController.html":{},"coverage.html":{}}}],["src/category/category.controller.ts:33",{"_index":350,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:44",{"_index":355,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:52",{"_index":356,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:60",{"_index":361,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.controller.ts:73",{"_index":352,"title":{},"body":{"controllers/CategoryController.html":{}}}],["src/category/category.module.ts",{"_index":378,"title":{},"body":{"modules/CategoryModule.html":{}}}],["src/category/category.service.ts",{"_index":380,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/category/category.service.ts:12",{"_index":382,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:15",{"_index":383,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:25",{"_index":387,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:35",{"_index":388,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:48",{"_index":389,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:62",{"_index":386,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/category.service.ts:72",{"_index":385,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/category/dto/create",{"_index":428,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/category/dto/update",{"_index":703,"title":{},"body":{"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["src/category/entities/category.entity.ts",{"_index":333,"title":{},"body":{"classes/Category.html":{},"coverage.html":{}}}],["src/category/entities/category.entity.ts:4",{"_index":336,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:5",{"_index":338,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:6",{"_index":337,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:7",{"_index":335,"title":{},"body":{"classes/Category.html":{}}}],["src/category/entities/category.entity.ts:8",{"_index":339,"title":{},"body":{"classes/Category.html":{}}}],["src/main.ts",{"_index":1078,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/prisma/prisma.module",{"_index":160,"title":{},"body":{"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{}}}],["src/prisma/prisma.module.ts",{"_index":578,"title":{},"body":{"modules/PrismaModule.html":{}}}],["src/prisma/prisma.service",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["src/prisma/prisma.service.ts",{"_index":581,"title":{},"body":{"injectables/PrismaService.html":{},"coverage.html":{}}}],["src/prisma/prisma.service.ts:10",{"_index":587,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/prisma/prisma.service.ts:6",{"_index":589,"title":{},"body":{"injectables/PrismaService.html":{}}}],["src/product/dto/create",{"_index":436,"title":{},"body":{"classes/CreateProductDto.html":{},"coverage.html":{}}}],["src/product/dto/update",{"_index":705,"title":{},"body":{"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["src/product/entities/product.entity",{"_index":215,"title":{},"body":{"classes/Bag.html":{},"injectables/BagService.html":{},"classes/Category.html":{}}}],["src/product/entities/product.entity.ts",{"_index":594,"title":{},"body":{"classes/Product.html":{},"coverage.html":{}}}],["src/product/entities/product.entity.ts:10",{"_index":601,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:11",{"_index":602,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:12",{"_index":605,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:13",{"_index":596,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:14",{"_index":595,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:15",{"_index":597,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:16",{"_index":604,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:6",{"_index":599,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:7",{"_index":603,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:8",{"_index":598,"title":{},"body":{"classes/Product.html":{}}}],["src/product/entities/product.entity.ts:9",{"_index":600,"title":{},"body":{"classes/Product.html":{}}}],["src/product/product.controller.ts",{"_index":612,"title":{},"body":{"controllers/ProductController.html":{},"coverage.html":{}}}],["src/product/product.controller.ts:26",{"_index":624,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:34",{"_index":626,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:42",{"_index":614,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:51",{"_index":630,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.controller.ts:62",{"_index":618,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.module.ts",{"_index":656,"title":{},"body":{"modules/ProductModule.html":{}}}],["src/product/product.service",{"_index":638,"title":{},"body":{"controllers/ProductController.html":{}}}],["src/product/product.service.ts",{"_index":660,"title":{},"body":{"injectables/ProductService.html":{},"coverage.html":{}}}],["src/product/product.service.ts:130",{"_index":664,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:15",{"_index":661,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:19",{"_index":665,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:23",{"_index":666,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:36",{"_index":663,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/product/product.service.ts:81",{"_index":667,"title":{},"body":{"injectables/ProductService.html":{}}}],["src/user/dto/create",{"_index":474,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/user/dto/update",{"_index":708,"title":{},"body":{"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["src/user/entities/user.entity",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{}}}],["src/user/entities/user.entity.ts",{"_index":712,"title":{},"body":{"classes/User.html":{},"coverage.html":{}}}],["src/user/entities/user.entity.ts:10",{"_index":718,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:11",{"_index":721,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:12",{"_index":713,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:13",{"_index":715,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:14",{"_index":722,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:5",{"_index":717,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:6",{"_index":719,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:7",{"_index":714,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:8",{"_index":716,"title":{},"body":{"classes/User.html":{}}}],["src/user/entities/user.entity.ts:9",{"_index":720,"title":{},"body":{"classes/User.html":{}}}],["src/user/user.controller.ts",{"_index":725,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/user/user.controller.ts:17",{"_index":735,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:24",{"_index":731,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:33",{"_index":742,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:42",{"_index":744,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:51",{"_index":746,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.controller.ts:64",{"_index":740,"title":{},"body":{"controllers/UserController.html":{}}}],["src/user/user.module.ts",{"_index":769,"title":{},"body":{"modules/UserModule.html":{}}}],["src/user/user.service.ts",{"_index":771,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/user/user.service.ts:111",{"_index":779,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:127",{"_index":780,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:149",{"_index":777,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:17",{"_index":784,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:26",{"_index":773,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:30",{"_index":776,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:63",{"_index":774,"title":{},"body":{"injectables/UserService.html":{}}}],["src/user/user.service.ts:95",{"_index":778,"title":{},"body":{"injectables/UserService.html":{}}}],["src/utils/handleerror.utils",{"_index":288,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["src/utils/handleerror.utils.ts",{"_index":1080,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/utils/is",{"_index":290,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["standard",{"_index":981,"title":{},"body":{"changelog.html":{}}}],["standardized",{"_index":1041,"title":{},"body":{"changelog.html":{}}}],["start",{"_index":888,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start:dev",{"_index":1138,"title":{},"body":{"index.html":{}}}],["start:prodpriscipais",{"_index":1140,"title":{},"body":{"index.html":{}}}],["started",{"_index":812,"title":{"changelog.html":{},"index.html":{},"license.html":{},"todo.html":{}},"body":{}}],["statements",{"_index":1063,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["statute",{"_index":1426,"title":{},"body":{"license.html":{}}}],["statutory",{"_index":1497,"title":{},"body":{"license.html":{}}}],["steward",{"_index":1584,"title":{},"body":{"license.html":{}}}],["stop",{"_index":962,"title":{},"body":{"changelog.html":{}}}],["stoppage",{"_index":1530,"title":{},"body":{"license.html":{}}}],["strange",{"_index":969,"title":{},"body":{"changelog.html":{}}}],["strategy",{"_index":547,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["string",{"_index":95,"title":{},"body":{"injectables/AppService.html":{},"controllers/AuthController.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"miscellaneous/functions.html":{}}}],["string,@loggeduser",{"_index":651,"title":{},"body":{"controllers/ProductController.html":{}}}],["string,dto:updateproductdto,user",{"_index":694,"title":{},"body":{"injectables/ProductService.html":{}}}],["string,user",{"_index":318,"title":{},"body":{"injectables/BagService.html":{},"injectables/ProductService.html":{}}}],["style",{"_index":986,"title":{},"body":{"changelog.html":{}}}],["sua",{"_index":228,"title":{},"body":{"controllers/BagController.html":{}}}],["suas",{"_index":238,"title":{},"body":{"controllers/BagController.html":{}}}],["sub",{"_index":847,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":1569,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":1386,"title":{},"body":{"license.html":{}}}],["subsequent",{"_index":1344,"title":{},"body":{"license.html":{}}}],["subsequently",{"_index":1231,"title":{},"body":{"license.html":{}}}],["substance",{"_index":1395,"title":{},"body":{"license.html":{}}}],["sucesso",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["such",{"_index":1195,"title":{},"body":{"license.html":{}}}],["sufficient",{"_index":1357,"title":{},"body":{"license.html":{}}}],["sufficiently",{"_index":1438,"title":{},"body":{"license.html":{}}}],["summary",{"_index":53,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["super",{"_index":551,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":1409,"title":{},"body":{"license.html":{},"modules.html":{}}}],["survive",{"_index":1493,"title":{},"body":{"license.html":{}}}],["svg",{"_index":1612,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":1106,"title":{},"body":{"dependencies.html":{},"index.html":{},"todo.html":{}}}],["swedish",{"_index":859,"title":{},"body":{"changelog.html":{}}}],["são",{"_index":790,"title":{},"body":{"injectables/UserService.html":{}}}],["tabelas",{"_index":1129,"title":{},"body":{"index.html":{}}}],["table",{"_index":1084,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1083,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":983,"title":{},"body":{"changelog.html":{}}}],["tags",{"_index":994,"title":{},"body":{"changelog.html":{}}}],["tallesl",{"_index":937,"title":{},"body":{"changelog.html":{}}}],["terminate",{"_index":1445,"title":{},"body":{"license.html":{}}}],["terminates",{"_index":1455,"title":{},"body":{"license.html":{}}}],["termination",{"_index":1443,"title":{},"body":{"license.html":{}}}],["terms",{"_index":1209,"title":{},"body":{"license.html":{}}}],["testar",{"_index":1645,"title":{},"body":{"todo.html":{}}}],["text",{"_index":1434,"title":{},"body":{"license.html":{}}}],["theory",{"_index":1516,"title":{},"body":{"license.html":{}}}],["thereof",{"_index":1199,"title":{},"body":{"license.html":{}}}],["things",{"_index":901,"title":{},"body":{"changelog.html":{}}}],["third",{"_index":1329,"title":{},"body":{"license.html":{}}}],["this.$connect",{"_index":591,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.$on('beforeexit",{"_index":592,"title":{},"body":{"injectables/PrismaService.html":{}}}],["this.appservice.getappstatus(baseurl",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(logindto",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.bagservice.create(user",{"_index":259,"title":{},"body":{"controllers/BagController.html":{}}}],["this.bagservice.delete(user",{"_index":272,"title":{},"body":{"controllers/BagController.html":{}}}],["this.bagservice.findall(user",{"_index":262,"title":{},"body":{"controllers/BagController.html":{}}}],["this.bagservice.findone(id,user",{"_index":266,"title":{},"body":{"controllers/BagController.html":{}}}],["this.categoryservice.create(user",{"_index":368,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.delete(user",{"_index":374,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findall",{"_index":369,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.findone(id",{"_index":371,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.categoryservice.update(user",{"_index":373,"title":{},"body":{"controllers/CategoryController.html":{}}}],["this.datatreatment(data.title",{"_index":394,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.findone(id",{"_index":402,"title":{},"body":{"injectables/CategoryService.html":{},"injectables/ProductService.html":{}}}],["this.jwtservice.sign",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.prisma.bag.create",{"_index":300,"title":{},"body":{"injectables/BagService.html":{}}}],["this.prisma.bag.delete",{"_index":329,"title":{},"body":{"injectables/BagService.html":{}}}],["this.prisma.bag.findmany",{"_index":308,"title":{},"body":{"injectables/BagService.html":{}}}],["this.prisma.bag.findunique",{"_index":319,"title":{},"body":{"injectables/BagService.html":{}}}],["this.prisma.bag.findunique({where:{id",{"_index":327,"title":{},"body":{"injectables/BagService.html":{}}}],["this.prisma.category",{"_index":404,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.create",{"_index":395,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.delete",{"_index":405,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.findmany",{"_index":397,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.category.findunique",{"_index":401,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.prisma.product",{"_index":688,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.delete",{"_index":699,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findmany({where:{bagid:null",{"_index":676,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique",{"_index":677,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.product.findunique({where:{id",{"_index":696,"title":{},"body":{"injectables/ProductService.html":{}}}],["this.prisma.user",{"_index":799,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.delete",{"_index":810,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findmany",{"_index":802,"title":{},"body":{"injectables/UserService.html":{}}}],["this.prisma.user.findunique",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["this.productservice.create(createproductdto,user",{"_index":646,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.delete(id,user",{"_index":652,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findall",{"_index":643,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.findone(id",{"_index":644,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.productservice.update(id,dto,user",{"_index":649,"title":{},"body":{"controllers/ProductController.html":{}}}],["this.userselect",{"_index":809,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.create(createuserdto",{"_index":756,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.createadm(createuserdto",{"_index":754,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.delete(user",{"_index":765,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findall",{"_index":759,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.findone(id",{"_index":760,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(user",{"_index":764,"title":{},"body":{"controllers/UserController.html":{}}}],["those",{"_index":1260,"title":{},"body":{"license.html":{}}}],["throughout",{"_index":1010,"title":{},"body":{"changelog.html":{}}}],["throw",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["tianshuo",{"_index":852,"title":{},"body":{"changelog.html":{}}}],["time",{"_index":1230,"title":{},"body":{"license.html":{}}}],["timely",{"_index":1381,"title":{},"body":{"license.html":{}}}],["title",{"_index":303,"title":{},"body":{"injectables/BagService.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/Product.html":{},"injectables/ProductService.html":{}}}],["title:string",{"_index":461,"title":{},"body":{"classes/CreateProductDto.html":{},"classes/Product.html":{}}}],["title:true",{"_index":689,"title":{},"body":{"injectables/ProductService.html":{}}}],["todas",{"_index":237,"title":{},"body":{"controllers/BagController.html":{},"controllers/CategoryController.html":{},"todo.html":{}}}],["todo",{"_index":1621,"title":{"todo.html":{}},"body":{"todo.html":{}}}],["todos",{"_index":620,"title":{},"body":{"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["token",{"_index":112,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginResponseDto.html":{}}}],["token_gerado_automaticamente",{"_index":571,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["tolowercase",{"_index":410,"title":{},"body":{"injectables/CategoryService.html":{}}}],["tort",{"_index":1517,"title":{},"body":{"license.html":{}}}],["trademark",{"_index":1297,"title":{},"body":{"license.html":{}}}],["trademarks",{"_index":1335,"title":{},"body":{"license.html":{}}}],["traditional",{"_index":849,"title":{},"body":{"changelog.html":{}}}],["transação",{"_index":234,"title":{},"body":{"controllers/BagController.html":{}}}],["transações",{"_index":239,"title":{},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{}}}],["transfer",{"_index":1251,"title":{},"body":{"license.html":{}}}],["transformer",{"_index":1094,"title":{},"body":{"dependencies.html":{}}}],["translation",{"_index":854,"title":{},"body":{"changelog.html":{}}}],["translations",{"_index":851,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":302,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"classes/CreateProductDto.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["turkish",{"_index":861,"title":{},"body":{"changelog.html":{}}}],["tylerfortune8",{"_index":831,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":34,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/Category.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"injectables/PrismaService.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateUserDto.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["typescript",{"_index":1144,"title":{},"body":{"index.html":{}}}],["typos",{"_index":925,"title":{},"body":{"changelog.html":{}}}],["ui",{"_index":1107,"title":{},"body":{"dependencies.html":{}}}],["ukrainian",{"_index":884,"title":{},"body":{"changelog.html":{}}}],["um",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["uma",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{}}}],["unauthorizedexception",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["unauthorizedexception('usuário",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["undefined",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/functions.html":{}}}],["under",{"_index":1208,"title":{},"body":{"license.html":{}}}],["understand",{"_index":1442,"title":{},"body":{"license.html":{}}}],["unenforceable",{"_index":1574,"title":{},"body":{"license.html":{}}}],["unicorns",{"_index":905,"title":{},"body":{"changelog.html":{}}}],["unknown",{"_index":281,"title":{},"body":{"injectables/BagService.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"injectables/ProductService.html":{},"injectables/UserService.html":{}}}],["unless",{"_index":1451,"title":{},"body":{"license.html":{}}}],["unlicensed",{"_index":1619,"title":{},"body":{"properties.html":{}}}],["unmodified",{"_index":1304,"title":{},"body":{"license.html":{}}}],["unprocessableentityexception",{"_index":669,"title":{},"body":{"injectables/ProductService.html":{}}}],["unreleased",{"_index":824,"title":{},"body":{"changelog.html":{}}}],["until",{"_index":1452,"title":{},"body":{"license.html":{}}}],["up",{"_index":902,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":342,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"changelog.html":{},"todo.html":{}}}],["update(@loggeduser",{"_index":761,"title":{},"body":{"controllers/UserController.html":{}}}],["update(@param('id",{"_index":647,"title":{},"body":{"controllers/ProductController.html":{}}}],["update(id",{"_index":627,"title":{},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{}}}],["update(user",{"_index":357,"title":{},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["updatebagdto",{"_index":253,"title":{"classes/UpdateBagDto.html":{}},"body":{"controllers/BagController.html":{},"injectables/BagService.html":{},"classes/UpdateBagDto.html":{},"coverage.html":{}}}],["updatecategorydto",{"_index":358,"title":{"classes/UpdateCategoryDto.html":{}},"body":{"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"classes/UpdateCategoryDto.html":{},"coverage.html":{}}}],["updatedat",{"_index":208,"title":{},"body":{"classes/Bag.html":{},"classes/Category.html":{},"classes/Product.html":{},"classes/User.html":{},"injectables/UserService.html":{}}}],["updateproductdto",{"_index":629,"title":{"classes/UpdateProductDto.html":{}},"body":{"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/UpdateProductDto.html":{},"coverage.html":{}}}],["updateproductdto,@loggeduser",{"_index":648,"title":{},"body":{"controllers/ProductController.html":{}}}],["updateuserdto",{"_index":707,"title":{"classes/UpdateUserDto.html":{}},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["updateuserdto.confirmpassword",{"_index":806,"title":{},"body":{"injectables/UserService.html":{}}}],["updateuserdto.id",{"_index":762,"title":{},"body":{"controllers/UserController.html":{}}}],["updateuserdto.password",{"_index":805,"title":{},"body":{"injectables/UserService.html":{}}}],["url",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateProductDto.html":{},"changelog.html":{}}}],["usage",{"_index":895,"title":{},"body":{"changelog.html":{}}}],["use",{"_index":921,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["used",{"_index":1182,"title":{},"body":{"license.html":{}}}],["useguards",{"_index":135,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["useguards(authguard",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":117,"title":{"classes/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/Bag.html":{},"controllers/BagController.html":{},"injectables/BagService.html":{},"controllers/CategoryController.html":{},"injectables/CategoryService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginResponseDto.html":{},"classes/Product.html":{},"controllers/ProductController.html":{},"injectables/ProductService.html":{},"classes/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"license.html":{},"miscellaneous/variables.html":{}}}],["user')@post('create')@apioperation({summary",{"_index":729,"title":{},"body":{"controllers/UserController.html":{}}}],["user,@body",{"_index":645,"title":{},"body":{"controllers/ProductController.html":{}}}],["user.controller",{"_index":770,"title":{},"body":{"modules/UserModule.html":{}}}],["user.decorator",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/ProductController.html":{},"controllers/UserController.html":{}}}],["user.decorator.ts",{"_index":1065,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.dto",{"_index":710,"title":{},"body":{"classes/UpdateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":475,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/UpdateUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:11",{"_index":515,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:21",{"_index":488,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:28",{"_index":492,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:40",{"_index":527,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:46",{"_index":481,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:5",{"_index":709,"title":{},"body":{"classes/UpdateUserDto.html":{}}}],["user.dto.ts:52",{"_index":502,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.id",{"_index":763,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.password",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"miscellaneous/variables.html":{}}}],["user.service",{"_index":748,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user/user.module",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["user:user",{"_index":261,"title":{},"body":{"controllers/BagController.html":{},"controllers/ProductController.html":{}}}],["user:user,@param('id",{"_index":265,"title":{},"body":{"controllers/BagController.html":{}}}],["user:{select:{id:true,name:true",{"_index":311,"title":{},"body":{"injectables/BagService.html":{}}}],["user?:user",{"_index":216,"title":{},"body":{"classes/Bag.html":{},"classes/Product.html":{}}}],["usercontroller",{"_index":724,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["userid",{"_index":414,"title":{},"body":{"classes/CreateBagDto.html":{},"classes/CreateProductDto.html":{}}}],["userid:string",{"_index":471,"title":{},"body":{"classes/CreateProductDto.html":{}}}],["useridfrombag",{"_index":321,"title":{},"body":{"injectables/BagService.html":{}}}],["userinfo",{"_index":634,"title":{},"body":{"controllers/ProductController.html":{}}}],["usermodule",{"_index":75,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["usermodule,productmodule,categorymodule",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["userselect",{"_index":772,"title":{},"body":{"injectables/UserService.html":{}}}],["userservice",{"_index":747,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["using",{"_index":889,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["usuário",{"_index":120,"title":{},"body":{"controllers/AuthController.html":{},"classes/CreateBagDto.html":{},"classes/CreateUserDto.html":{},"injectables/JwtStrategy.html":{},"classes/LoginDto.html":{},"classes/LoginResponseDto.html":{},"controllers/UserController.html":{},"todo.html":{}}}],["usuários",{"_index":495,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["utilizadas",{"_index":1142,"title":{},"body":{"index.html":{}}}],["v",{"_index":1599,"title":{},"body":{"license.html":{}}}],["validate",{"_index":539,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":541,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validator",{"_index":427,"title":{},"body":{"classes/CreateBagDto.html":{},"classes/CreateCategoryDto.html":{},"classes/CreateProductDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginDto.html":{},"dependencies.html":{}}}],["validly",{"_index":1492,"title":{},"body":{"license.html":{}}}],["value",{"_index":783,"title":{},"body":{"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":1066,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1646,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["veja",{"_index":1160,"title":{},"body":{"index.html":{}}}],["version",{"_index":832,"title":{},"body":{"changelog.html":{},"index.html":{},"license.html":{},"properties.html":{}}}],["versioning",{"_index":823,"title":{},"body":{"changelog.html":{}}}],["versions",{"_index":838,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["visual",{"_index":830,"title":{},"body":{"changelog.html":{}}}],["visualizar",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/BagController.html":{},"controllers/CategoryController.html":{},"controllers/UserController.html":{}}}],["void",{"_index":619,"title":{},"body":{"controllers/ProductController.html":{}}}],["vs",{"_index":930,"title":{},"body":{"changelog.html":{}}}],["want",{"_index":1593,"title":{},"body":{"license.html":{}}}],["warranties",{"_index":1498,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":1397,"title":{},"body":{"license.html":{}}}],["watch",{"_index":1136,"title":{},"body":{"index.html":{}}}],["way",{"_index":970,"title":{},"body":{"changelog.html":{}}}],["webysther",{"_index":867,"title":{},"body":{"changelog.html":{}}}],["where:{id",{"_index":320,"title":{},"body":{"injectables/BagService.html":{},"injectables/ProductService.html":{}}}],["where:{user:user.id",{"_index":309,"title":{},"body":{"injectables/BagService.html":{}}}],["whether",{"_index":1229,"title":{},"body":{"license.html":{}}}],["wide",{"_index":1290,"title":{},"body":{"license.html":{}}}],["within",{"_index":1399,"title":{},"body":{"license.html":{}}}],["without",{"_index":1243,"title":{},"body":{"license.html":{}}}],["work",{"_index":1212,"title":{},"body":{"license.html":{}}}],["world",{"_index":966,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["writes",{"_index":967,"title":{},"body":{"changelog.html":{}}}],["yanked",{"_index":989,"title":{},"body":{"changelog.html":{}}}],["year",{"_index":958,"title":{},"body":{"changelog.html":{}}}],["z",{"_index":518,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z])(?=.*[a",{"_index":517,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["za",{"_index":408,"title":{},"body":{"injectables/CategoryService.html":{}}}],["zapashcanon",{"_index":864,"title":{},"body":{"changelog.html":{}}}],["zeliosariex",{"_index":939,"title":{},"body":{"changelog.html":{}}}],["zoom",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/BagModule.html":{},"modules/CategoryModule.html":{},"modules/PrismaModule.html":{},"modules/ProductModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["zs]/g",{"_index":409,"title":{},"body":{"injectables/CategoryService.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(req: Request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar status da aplicação'})\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:19\n                \n            \n\n\n            \n                \n                    Recebe uma requisição GET e retorna um objeto de status\nda aplicação com a URL de documentação\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    req\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        Objeto de Request do Express\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        Objeto de status da aplicação\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req } from '@nestjs/common';\nimport { ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AppService } from './app.service';\nimport { Request } from 'express';\n\n@ApiTags('Status')\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n  /**\n\t * Recebe uma requisição GET e retorna um objeto de status\n\t * da aplicação com a URL de documentação\n\t * @param req Objeto de Request do Express\n\t * @returns Objeto de status da aplicação\n\t */\n\n  @Get()\n  @ApiOperation({ summary: 'Visualizar status da aplicação' })\n  getAppStatus(@Req() req: Request) {\n    const baseUrl = req.protocol + '://' + req.get('host');\n    return this.appService.getAppStatus(baseUrl);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBagModule\n\nBagModule\n\nAppModule -->\n\nBagModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            BagModule\n                        \n                        \n                            CategoryModule\n                        \n                        \n                            PrismaModule\n                        \n                        \n                            ProductModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { AuthModule } from './Auth/auth.module';\nimport { PrismaModule } from './prisma/prisma.module';\nimport { UserModule } from './User/user.module';\nimport { CategoryModule } from './Category/category.module';\nimport { BagModule } from './bag/bag.module';\nimport { ProductModule } from './Product/product.module';\n\n@Module({\n  imports: [PrismaModule,AuthModule, UserModule,ProductModule,CategoryModule, BagModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAppStatus\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAppStatus\n                        \n                    \n                \n            \n            \n                \ngetAppStatus(baseUrl: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    baseUrl\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { status: string; docs: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getAppStatus(baseUrl: string) {\n    return { status: 'Server is running! 🚀', docs: baseUrl + '/api' };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Auth\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin(loginDto: LoginDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Realizar login, recebendo um token de autenticação'})\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n            \n                \nprofile(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)@ApiOperation({summary: 'Retorna o usuário autenticado no momento'})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/Auth/auth.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         { message: string; user: User; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller,Body,Post,HttpCode,HttpStatus,Get } from '@nestjs/common';\nimport { ApiOperation,ApiTags,ApiBearerAuth } from '@nestjs/swagger';\nimport { AuthService } from './auth.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { UseGuards } from '@nestjs/common';\nimport { LoggedUser } from './loggerd-user.decorator';\nimport { User } from 'src/User/entities/user.entity';\n\n@ApiTags('Auth')\n@Controller('Auth')\nexport class AuthController {\n  constructor(private readonly authService: AuthService) {}\n\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Realizar login, recebendo um token de autenticação',\n  })\n\n  login(@Body() loginDto: LoginDto): Promise {\n    return this.authService.login(loginDto);\n  }\n\n  @Get()\n  @UseGuards(AuthGuard())\n  @ApiOperation({\n    summary: 'Retorna o usuário autenticado no momento',\n  })\n  @ApiBearerAuth()\n  profile(@LoggedUser() user: User) {\n    return {message: 'Autenticado com sucesso.', user};\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { PassportModule } from '@nestjs/passport';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    PrismaModule,\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.register({\n      secret: process.env.JWT_SECRET,\n      signOptions: { expiresIn: '24h' },\n    }),\n  ],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/auth.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport * as bcrypt from 'bcrypt';\nimport { JwtService } from '@nestjs/jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoginResponseDto } from './dto/login-response.dto';\nimport { LoginDto } from './dto/login.dto';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly prisma: PrismaService,\n    private readonly jwtService: JwtService,\n  ) {}\n\n  async login(loginDto: LoginDto): Promise {\n    const { email, password } = loginDto;\n    console.log(`dto.. ${email} - ${password}`);\n\n    const user = await this.prisma.user.findUnique({ where: { email } });\n\n    if (!user) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    const isHashValid = await bcrypt.compare(password, user.password);\n\n    if (!isHashValid) {\n      throw new UnauthorizedException('Usuário e/ou senha inválidos');\n    }\n\n    delete user.password;\n\n    return {\n      token: this.jwtService.sign({ email }),\n      user: undefined,\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Bag.html":{"url":"classes/Bag.html","title":"class - Bag","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Bag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Bag/entities/bag.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                product\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | string\n\n                    \n                \n                    \n                        \n                                Defined in src/Bag/entities/bag.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Bag/entities/bag.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Bag/entities/bag.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | string\n\n                    \n                \n                    \n                        \n                                Defined in src/Bag/entities/bag.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/Bag/entities/bag.entity.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from \"src/Product/entities/product.entity\";\nimport { User } from \"src/User/entities/user.entity\";\n\nexport class Bag {\n  id?: string;\n  user?:User;\n  product?:Product[];\n  createdAt?: Date | string;\n  updatedAt?: Date | string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/BagController.html":{"url":"controllers/BagController.html","title":"controller - BagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  BagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Bag/bag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Bag\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createBagDto: CreateBagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Incluir um produto a sua Bag'})\n                \n            \n\n            \n                \n                    Defined in src/Bag/bag.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createBagDto\n                                    \n                                                CreateBagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')@ApiOperation({summary: 'Deletar um registro de transação (Bag).'})\n                \n            \n\n            \n                \n                    Defined in src/Bag/bag.controller.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Visualizar todas as suas transações'})\n                \n            \n\n            \n                \n                    Defined in src/Bag/bag.controller.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma de suas transações (Bag).'})\n                \n            \n\n            \n                \n                    Defined in src/Bag/bag.controller.ts:38\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, HttpCode, HttpStatus, UseGuards } from '@nestjs/common';\nimport { LoggedUser } from 'src/Auth/loggerd-user.decorator';\nimport { User } from 'src/User/entities/user.entity';\nimport { BagService } from './bag.service';\nimport { CreateBagDto } from './dto/create-bag.dto';\nimport { UpdateBagDto } from './dto/update-bag.dto';\nimport { Bag, Product } from '@prisma/client';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Bag')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Bag')\nexport class BagController {\n  constructor(private readonly bagService: BagService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Incluir um produto a sua Bag',\n  })\n  create(@LoggedUser() user: User, @Body() createBagDto: CreateBagDto) {\n    return this.bagService.create(user, createBagDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Visualizar todas as suas transações'\n  })\n  findAll(@LoggedUser() user:User) {\n    return this.bagService.findAll(user);\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma de suas transações (Bag).'\n  })\n  findOne(@LoggedUser() user:User,@Param('id') id: string) {\n    return this.bagService.findOne(id,user);\n  }\n\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Deletar um registro de transação (Bag).',\n  })\n  delete(@LoggedUser() user: User, @Param('id') id:string) {\n    return this.bagService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/BagModule.html":{"url":"modules/BagModule.html","title":"module - BagModule","body":"\n                   \n\n\n\n\n    Modules\n    BagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_BagModule\n\n\n\ncluster_BagModule_providers\n\n\n\ncluster_BagModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nBagModule\n\nBagModule\n\nBagModule -->\n\nPrismaModule->BagModule\n\n\n\n\n\nBagService\n\nBagService\n\nBagModule -->\n\nBagService->BagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Bag/bag.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            BagService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            BagController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { BagService } from './bag.service';\nimport { BagController } from './bag.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { PrismaModule } from 'src/prisma/prisma.module';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [BagController],\n  providers: [BagService]\n})\nexport class BagModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BagService.html":{"url":"injectables/BagService.html","title":"injectable - BagService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  BagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Bag/bag.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Bag/bag.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, createBagDto: CreateBagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Bag/bag.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createBagDto\n                                    \n                                                CreateBagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Bag/bag.service.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll(user)\n                \n            \n\n\n            \n                \n                    Defined in src/Bag/bag.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string, user)\n                \n            \n\n\n            \n                \n                    Defined in src/Bag/bag.service.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { Product } from 'src/Product/entities/product.entity';\nimport { User } from 'src/User/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/is-admin.utils';\nimport { isOwner } from 'src/utils/is-owner.utils';\nimport { CreateBagDto } from './dto/create-bag.dto';\nimport { UpdateBagDto } from './dto/update-bag.dto';\nimport { Bag } from './entities/bag.entity';\n\n@Injectable()\nexport class BagService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(user: User, createBagDto: CreateBagDto) {\n    const data: Prisma.BagCreateInput = {\n      product: { connect: { id: createBagDto.productId}},\n      user: { connect:{id:user.id}},\n    };\n\n    return await this.prisma.bag.create({\n      data,\n      select: {\n        id: true,\n        user: { select: { id: true, name: true } },\n        product: {\n          select: { id: true, title: true, imgURL: true, price: true },\n        },\n      },\n    }).catch(handleError);\n  }\n\n  async findAll(user){\n    const allBags = await this.prisma.bag.findMany(\n      {\n        where:{user:user.Id},\n        select:{\n          id:true,\n          user:{select:{id:true,name:true}},\n          product:{select:{id:true,title:true,new:true,price:true}}}\n      })\n\n    if (allBags.length === 0) {\n      throw new NotFoundException('Não há registros de transações (Bag)');\n    }\n\n    return allBags\n  }\n\n  async findOne(id: string,user) {\n    const data = await this.prisma.bag.findUnique(\n      {\n        where:{id},\n        select:{\n          id:true,\n          user:{select:{id:true,name:true}},\n          product:{select:{id:true,title:true,new:true,price:true}}}\n      });\n\n    const userIdFromBag = data.user.id;\n    isOwner(user,userIdFromBag);\n\n    if (!data) {\n      throw new NotFoundException(`Registro com id '${id}' não encontrado.`);\n    }\n\n    return data;\n  }\n\n\n  async delete(user: User, id: string) {\n    const userIdFromBag  = await this.prisma.bag.findUnique({where:{id}});\n\n    isOwner(user,userIdFromBag.userId);\n\n    await this.prisma.bag.delete({ where:{ id }});\n\n    return `This action removes a bag id: #${id} `;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Category/entities/category.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                products\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Category/entities/category.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Category/entities/category.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        products\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product[]\n\n                    \n                \n                    \n                        \n                                Defined in src/Category/entities/category.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Category/entities/category.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Category/entities/category.entity.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Product } from \"src/Product/entities/product.entity\";\n\nexport class Category {\n  id?: string;\n  title: string;\n  products?: Product[];\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategoryController.html":{"url":"controllers/CategoryController.html","title":"controller - CategoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Category/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Category\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createCategoryDto: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Criar nova categoria. Somente para Admin.'})\n                \n            \n\n            \n                \n                    Defined in src/Category/category.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')@ApiOperation({summary: 'Deletar categoria pelo ID. Somente para Admin.'})\n                \n            \n\n            \n                \n                    Defined in src/Category/category.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todas as categorias.'})\n                \n            \n\n            \n                \n                    Defined in src/Category/category.controller.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Visualizar uma categoria pelo ID.'})\n                \n            \n\n            \n                \n                    Defined in src/Category/category.controller.ts:52\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Editar categoria pelo ID. Somente para Admin.'})\n                \n            \n\n            \n                \n                    Defined in src/Category/category.controller.ts:60\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Body,\n  Patch,\n  Param,\n  Delete,\n  UseGuards,\n  HttpCode,\n  HttpStatus,\n} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { LoggedUser } from 'src/Auth/loggerd-user.decorator';\nimport { User } from 'src/User/entities/user.entity';\nimport { CategoryService } from './category.service';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { Category } from './entities/category.entity';\n\n@ApiTags('Category')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Category')\nexport class CategoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @Post()\n  @ApiOperation({\n    summary: 'Criar nova categoria. Somente para Admin.',\n  })\n  create(\n    @LoggedUser() user: User,\n    @Body() createCategoryDto: CreateCategoryDto,\n  ): Promise {\n    return this.categoryService.create(user, createCategoryDto);\n  }\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todas as categorias.',\n  })\n  findAll(): Promise {\n    return this.categoryService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Visualizar uma categoria pelo ID.',\n  })\n  findOne(@Param('id') id: string): Promise {\n    return this.categoryService.findOne(id);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Editar categoria pelo ID. Somente para Admin.',\n  })\n  update(\n    @LoggedUser() user: User,\n    @Param('id') id: string,\n    @Body() updateCategoryDto: UpdateCategoryDto,\n  ): Promise {\n    return this.categoryService.update(user, id, updateCategoryDto);\n  }\n\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Deletar categoria pelo ID. Somente para Admin.',\n  })\n  delete(@LoggedUser() user: User, @Param('id') id: string) {\n    return this.categoryService.delete(user, id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CategoryModule.html":{"url":"modules/CategoryModule.html","title":"module - CategoryModule","body":"\n                   \n\n\n\n\n    Modules\n    CategoryModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_CategoryModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nCategoryModule\n\nCategoryModule\n\nCategoryModule -->\n\nPrismaModule->CategoryModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Category/category.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategoryController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CategoryService } from './category.service';\nimport { CategoryController } from './category.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [CategoryController],\n  providers: [CategoryService]\n})\nexport class CategoryModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Category/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                dataTreatment\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Category/category.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(user: User, createCategoryDto: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Category/category.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createCategoryDto\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataTreatment\n                        \n                    \n                \n            \n            \n                \ndataTreatment(data: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Category/category.service.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User, id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Category/category.service.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/Category/category.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Category/category.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, id: string, updateCategoryDto: UpdateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/Category/category.service.ts:48\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateCategoryDto\n                                    \n                                                UpdateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException } from '@nestjs/common';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { User } from 'src/User/entities/user.entity';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/is-admin.utils';\nimport { CreateCategoryDto } from './dto/create-category.dto';\nimport { UpdateCategoryDto } from './dto/update-category.dto';\nimport { Category } from './entities/category.entity';\n\n@Injectable()\nexport class CategoryService {\n  constructor(private readonly prisma: PrismaService) {}\n\n  async create(user: User, createCategoryDto: CreateCategoryDto) {\n    isAdmin(user);\n\n    const data: Prisma.CategoryCreateInput = { title: createCategoryDto.title };\n\n    data.title = this.dataTreatment(data.title);\n\n    return await this.prisma.category.create({ data }).catch(handleError);\n  }\n\n  async findAll(): Promise {\n    const allCategory = await this.prisma.category.findMany();\n\n    if (allCategory.length === 0) {\n      throw new NotFoundException('Não há categorias cadastradas.');\n    }\n\n    return allCategory;\n  }\n\n  async findOne(id: string) {\n    const record = await this.prisma.category.findUnique({\n      where: { id },\n      select: { id: true, title: true },\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com id '${id}' não encontrado.`);\n    }\n\n    return record;\n  }\n\n  async update(user: User, id: string, updateCategoryDto: UpdateCategoryDto) {\n    isAdmin(user);\n\n    await this.findOne(id);\n\n    const data: Partial = { ...updateCategoryDto };\n\n    data.title = this.dataTreatment(data.title);\n\n    return this.prisma.category\n      .update({ where: { id }, data })\n      .catch(handleError);\n  }\n\n  async delete(user: User, id: string) {\n    isAdmin(user);\n\n    await this.findOne(id);\n\n    await this.prisma.category.delete({ where: { id } });\n\n    return `This action removes a #${id} category`;\n  }\n\n  dataTreatment(data: string) {\n    return data\n      .normalize('NFD')\n      .replace(/[^a-zA-Zs]/g, '')\n      .toLowerCase();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateBagDto.html":{"url":"classes/CreateBagDto.html","title":"class - CreateBagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateBagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Bag/dto/create-bag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                productId\n                            \n                            \n                                userId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        productId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Id do produto.', example: '0c4b59bb-e169-40a4-81f5-4c34d2c2ca4b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Bag/dto/create-bag.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsUUID()@ApiProperty({description: 'Id do usuário.', example: '0c4b59bb-e169-40a4-81f5-4c34d2c2ca4b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Bag/dto/create-bag.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsBoolean, IsUUID } from \"class-validator\";\n\n\nexport class CreateBagDto {\n  @IsUUID()\n  @ApiProperty({\n    description: 'Id do usuário.',\n    example: '0c4b59bb-e169-40a4-81f5-4c34d2c2ca4b',\n  })\n  userId: string;\n\n  @IsUUID()\n  @ApiProperty({\n    description: 'Id do produto.',\n    example: '0c4b59bb-e169-40a4-81f5-4c34d2c2ca4b',\n  })\n  productId: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Category/dto/create-category.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({description: 'Inserir nova categoria', example: 'Eletrônicos'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Category/dto/create-category.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString } from \"class-validator\";\n\n\nexport class CreateCategoryDto {\n  @IsString()\n  @ApiProperty({\n    description: 'Inserir nova categoria',\n    example: 'Eletrônicos'\n  })\n  title: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateProductDto.html":{"url":"classes/CreateProductDto.html","title":"class - CreateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Product/dto/create-product.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                categoryID\n                            \n                            \n                                description\n                            \n                            \n                                imgURL\n                            \n                            \n                                new\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                userID\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        categoryID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'dslakdjskaldsaldsaklasdaldda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'Escreva a descrição do produto'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'Url relacionada a foto do produto'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsBoolean()@ApiProperty({example: 'true or false'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumber()@ApiProperty({example: '20.30'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'Livro'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userID\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@ApiProperty({example: 'dslakdjskaldsaldsaklasdaldda'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Product/dto/create-product.dto.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {IsBoolean, IsNumber, IsString} from \"class-validator\";\n\nexport class CreateProductDto {\n  @IsString()\n@ApiProperty({\n  example:'Livro',\n})\n  title:string;\n\n  @IsString()\n@ApiProperty({\n  example:'Escreva a descrição do produto',\n})\n  description:string;\n\n  @IsString()\n@ApiProperty({\n  example:'Url relacionada a foto do produto',\n})\n  imgURL:string\n\n @IsBoolean()\n@ApiProperty({\n  example:'true or false',\n})\n  new:boolean;\n\n  @IsNumber()\n@ApiProperty({\n  example:'20.30',\n})\n  price:number;\n\n  @IsString()\n@ApiProperty({\n  example:'dslakdjskaldsaldsaklasdaldda',\n})\nuserID:string;\n\n  @IsString()\n@ApiProperty({\n  example:'dslakdjskaldsaldsaklasdaldda',\n})\n  categoryID?:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/User/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmPassword\n                            \n                            \n                                cpf\n                            \n                            \n                                email\n                            \n                            \n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Confirmação da senha', example: 'P@$sw0rd'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/User/dto/create-user.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(11, 11)@Matches(/^[0-9]*$/, {message: 'CPF inválido.'})@ApiProperty({description: 'CPF do usuário. somente números', example: '12345678910'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/User/dto/create-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()@ApiProperty({description: 'E-mail de usuário', example: 'diegofreitas50@hotmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/User/dto/create-user.dto.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Nível de autorização!(Apenas usuários com perfil de \"ADM\" poderão alterar este campo!', example: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/User/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Length(3, 40)@IsString()@ApiProperty({description: 'Nome do usuário deve conter de 3 a 40 letras', example: 'Diego Freitas dos Santos'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/User/dto/create-user.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @MinLength(6)@IsString()@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'senha muito fraca'})@ApiProperty({description: 'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracters especial', example: 'P@$sw0rd'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/User/dto/create-user.dto.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsEmail, IsNumber, IsString, Length, Matches, MinLength } from \"class-validator\";\n\nexport class CreateUserDto {\n  @Length(3, 40)\n  @IsString()\n  @ApiProperty({\n    description: 'Nome do usuário deve conter de 3 a 40 letras',\n    example: 'Diego Freitas dos Santos',\n  })\n  name: string;\n\n  @Length(11, 11)\n  @Matches(/^[0-9]*$/, {\n    message: 'CPF inválido.',\n  })\n  @ApiProperty({\n    description: 'CPF do usuário. somente números',\n    example: '12345678910',\n  })\n  cpf: string;\n\n  @IsEmail()\n  @ApiProperty({\n    description: 'E-mail de usuário',\n    example: 'diegofreitas50@hotmail.com',\n  })\n  email: string;\n\n  @MinLength(6)\n  @IsString()\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'senha muito fraca',\n  })\n  @ApiProperty({\n    description:\n      'Senha do usuário. Requer letras maiúsculas e minúsculas, números ou caracters especial',\n    example: 'P@$sw0rd',\n  })\n  password: string;\n\n  @ApiProperty({\n    description: 'Confirmação da senha',\n    example: 'P@$sw0rd',\n  })\n  confirmPassword: string;\n\n  @ApiProperty({\n    description: 'Nível de autorização!(Apenas usuários com perfil de \"ADM\" poderão alterar este campo!',\n    example: false,\n  })\n  isAdmin: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Auth/jwt.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: literal type)\n                \n            \n\n\n            \n                \n                    Defined in src/Auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                            literal type\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PrismaService } from 'src/prisma/prisma.service';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(private readonly prisma: PrismaService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: process.env.JWT_SECRET,\n    });\n  }\n\n  async validate(payload: { email: string }) {\n    const user = await this.prisma.user.findUnique({\n      where: { email: payload.email },\n    });\n\n    if (!user) {\n      throw new UnauthorizedException(\n        'Usuário não existe ou não está autenticado',\n      );\n    }\n\n    delete user.password;\n\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginDto.html":{"url":"classes/LoginDto.html","title":"class - LoginDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/login.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Email do usuário', example: 'felip.migthur@gmail.com'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/login.dto.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@ApiProperty({description: 'Senha do usuário', example: 'flip@1234'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/login.dto.ts:19\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsNotEmpty, IsString } from 'class-validator';\n\nexport class LoginDto {\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Email do usuário',\n    example: 'felip.migthur@gmail.com',\n  })\n  email:string;\n\n  @IsString()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'Senha do usuário',\n    example: 'flip@1234',\n  })\n  password:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Auth/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'JWT gerado pelo login', example: 'TOKEN_GERADO_AUTOMATICAMENTE'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/login-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'Dados do usuário autenticado'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/Auth/dto/login-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { User } from 'src/User/entities/user.entity';\n\nexport class LoginResponseDto {\n  @ApiProperty({\n    description: 'JWT gerado pelo login',\n    example: 'TOKEN_GERADO_AUTOMATICAMENTE',\n  })\n  token: string;\n\n  @ApiProperty({\n    description: 'Dados do usuário autenticado',\n  })\n  user: User;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PrismaModule.html":{"url":"modules/PrismaModule.html","title":"module - PrismaModule","body":"\n                   \n\n\n\n\n    Modules\n    PrismaModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_PrismaModule_exports\n\n\n\n\nPrismaService \n\nPrismaService \n\n\n\nPrismaModule\n\nPrismaModule\n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/prisma/prisma.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            PrismaService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PrismaService } from './prisma.service';\n\n@Module({\n  providers: [PrismaService],\n  exports: [PrismaService],\n})\nexport class PrismaModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PrismaService.html":{"url":"injectables/PrismaService.html","title":"injectable - PrismaService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PrismaService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/prisma/prisma.service.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    PrismaClient\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                enableShutdownHooks\n                            \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        enableShutdownHooks\n                        \n                    \n                \n            \n            \n                \n                    \n                    enableShutdownHooks(app: INestApplication)\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/prisma/prisma.service.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { INestApplication, Injectable, OnModuleInit } from '@nestjs/common';\nimport { PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class PrismaService extends PrismaClient implements OnModuleInit {\n  async onModuleInit() {\n    await this.$connect();\n  }\n\n  async enableShutdownHooks(app: INestApplication) {\n    this.$on('beforeExit', async () => {\n      await app.close();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Product.html":{"url":"classes/Product.html","title":"class - Product","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Product\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Product/entities/product.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bag\n                            \n                            \n                                    Optional\n                                category\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                description\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                imgURL\n                            \n                            \n                                new\n                            \n                            \n                                price\n                            \n                            \n                                title\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                user\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bag\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        category\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Category\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imgURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        new\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        price\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         User\n\n                    \n                \n                    \n                        \n                                Defined in src/Product/entities/product.entity.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { User } from \"src/User/entities/user.entity\";\nimport{Category} from\"src/Category/entities/category.entity\";\nimport {Bag} from \"src/Bag/entities/bag.entity\";\n\nexport class Product {\n  id?: string;\n  title:string;\n  description:string;\n  imgURL:string\n  new:boolean;\n  price:number;\n  user?:User;\n  category?:Category;\n  bag?:Bag;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProductController.html":{"url":"controllers/ProductController.html","title":"controller - ProductController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProductController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Product/product.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                Product\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(user: User, createProductDto: CreateProductDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@ApiOperation({summary: 'Adicionar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/Product/product.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createProductDto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@ApiOperation({summary: 'Deletar um produto'})@HttpCode(HttpStatus.NO_CONTENT)\n                \n            \n\n            \n                \n                    Defined in src/Product/product.controller.ts:62\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@ApiOperation({summary: 'Listar todos os produtos disponíveis'})\n                \n            \n\n            \n                \n                    Defined in src/Product/product.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@ApiOperation({summary: 'Localizar um produto'})\n                \n            \n\n            \n                \n                    Defined in src/Product/product.controller.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, dto: UpdateProductDto, user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch(':id')@ApiOperation({summary: 'Alterar dados de um produto'})\n                \n            \n\n            \n                \n                    Defined in src/Product/product.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body,Controller, Get,Post,Res,Param,Patch,Delete,HttpCode,HttpStatus, UseGuards} from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\nimport { ApiTags,ApiOperation, ApiBearerAuth } from '@nestjs/swagger';\nimport { userInfo } from 'os';\nimport { exit } from 'process';\nimport { ProductService } from 'src/Product/product.service';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product } from './entities/product.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { LoggedUser } from 'src/Auth/loggerd-user.decorator';\nimport { User} from 'src/User/entities/user.entity';\n\n@ApiTags('Product')\n@UseGuards(AuthGuard())\n@ApiBearerAuth()\n@Controller('Product')\nexport class ProductController {\n  constructor(private productService: ProductService) {}\n\n  @Get()\n  @ApiOperation({\n    summary: 'Listar todos os produtos disponíveis',\n  })\n\n  findAll() {\n    return this.productService.findAll();\n  }\n\n  @Get(':id')\n  @ApiOperation({\n    summary: 'Localizar um produto',\n  })\n  findOne(@Param('id') id: string){\n     return this.productService.findOne(id);\n  }\n\n  @Post()\n  @ApiOperation({\n    summary: 'Adicionar um produto',\n  })\n  create(@LoggedUser() user: User,@Body() createProductDto: CreateProductDto) {\n\n    return this.productService.create(createProductDto,user);\n  }\n\n  @Patch(':id')\n  @ApiOperation({\n    summary: 'Alterar dados de um produto',\n  })\n  update(@Param('id') id: string, @Body() dto: UpdateProductDto,@LoggedUser() user: User){\n\n    return this.productService.update(id,dto,user);\n  }\n\n\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Deletar um produto',\n  })\n  @HttpCode(HttpStatus.NO_CONTENT)\n  delete(@Param('id') id: string,@LoggedUser() user:User) {\n    this.productService.delete(id,user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProductModule.html":{"url":"modules/ProductModule.html","title":"module - ProductModule","body":"\n                   \n\n\n\n\n    Modules\n    ProductModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_ProductModule_imports\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/Product/product.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProductService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProductController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProductController } from './product.controller';\nimport { ProductService } from './product.service';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule,PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [ProductController],\n  providers: [ProductService],\n})\nexport class ProductModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProductService.html":{"url":"injectables/ProductService.html","title":"injectable - ProductService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ProductService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Product/product.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/Product/product.service.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(dto: CreateProductDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/Product/product.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, user)\n                \n            \n\n\n            \n                \n                    Defined in src/Product/product.service.ts:130\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n\n            \n                \n                    Defined in src/Product/product.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/Product/product.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, dto: UpdateProductDto, user)\n                \n            \n\n\n            \n                \n                    Defined in src/Product/product.service.ts:81\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    dto\n                                    \n                                                UpdateProductDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { BadRequestException, Injectable, NotFoundException, UnprocessableEntityException } from '@nestjs/common';\nimport { CreateProductDto } from './dto/create-product.dto';\nimport { UpdateProductDto } from './dto/update-product.dto';\nimport { Product} from './entities/product.entity';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { error } from 'console';\nimport { Prisma } from '@prisma/client';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { identity } from 'rxjs';\nimport { isOwner } from 'src/utils/is-owner.utils';\nimport { Bag } from 'src/Bag/entities/bag.entity';\nimport { empty } from '@prisma/client/runtime';\n\n@Injectable()\nexport class ProductService {\n\n  constructor(private readonly prisma: PrismaService) {}\n\n    findAll() {\n      return this.prisma.product.findMany({where:{bagID:null}})\n      }\n\n    async findOne(id: string) {\n      const record = await this.prisma.product.findUnique({\n        where: { id },\n        select: { id: true, title: true, imgURL:true},\n      });\n      \n      if (!record) {\n        throw new NotFoundException(`Registro com id '${id}' não encontrado.`);\n      }\n\n      return record;\n    }\n\n  create(dto: CreateProductDto,user) {\n\n    const data: Prisma.ProductCreateInput = {\n      title: dto.title,\n      description: dto.description,\n      imgURL: dto.imgURL,\n      new: dto.new,\n      price: dto.price,\n      user:{\n        connect:{\n          id:user.id\n        }\n      },\n      category:{\n        connect:{\n          id:dto.categoryID\n        }\n      }\n    }\n\n    return this.prisma.product\n    .create({\n      data,\n      select: {\n        title:true,\n        description:true,\n        imgURL:true,\n        new:true,\n        price:true,\n        user:{\n          select:{\n            id:true,\n            name:true\n          }\n        },\n        category:{\n          select:{\n            title:true,\n          }\n        }\n      }\n    }).catch(handleError)\n  }\n\n\n   async update(id: string,dto:UpdateProductDto,user){ //\n    const selectProduct = await this.prisma.product.findUnique({where:{id}});\n    isOwner(user,selectProduct.userID);\n    this.findOne(id);\n\n    const data: Prisma.ProductUpdateInput = {\n      title: dto.title,\n      description: dto.description,\n      imgURL: dto.imgURL,\n      new: dto.new,\n      price: dto.price,\n      user:{\n        connect:{\n          id:user.id,\n        }\n      },\n      category:{\n        connect:{\n          id:dto.categoryID\n        }\n      }\n    }\n\n\n    return this.prisma.product\n      .update({\n        where:{id},\n        data,\n        select: {\n          title:true,\n          description:true,\n          imgURL:true,\n          new:true,\n          price:true,\n          user:{\n            select:{\n              id:true,\n              name:true\n            }\n          },\n          category:{\n            select:{\n              title:true,\n            }\n          }\n        }\n      }).catch(handleError);\n    }\n\n    async delete(id: string,user) {\n      const selectProduct = await this.prisma.product.findUnique({where:{id}});\n      isOwner(user,selectProduct.userID)\n\n      return await this.prisma.product.delete({ where: { id }}).catch(handleError);\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateBagDto.html":{"url":"classes/UpdateBagDto.html","title":"class - UpdateBagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateBagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Bag/dto/update-bag.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateBagDto } from './create-bag.dto';\n\nexport class UpdateBagDto extends PartialType(CreateBagDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateCategoryDto.html":{"url":"classes/UpdateCategoryDto.html","title":"class - UpdateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Category/dto/update-category.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateCategoryDto } from './create-category.dto';\n\nexport class UpdateCategoryDto extends PartialType(CreateCategoryDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateProductDto.html":{"url":"classes/UpdateProductDto.html","title":"class - UpdateProductDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateProductDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/Product/dto/update-product.dto.ts\n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateProductDto } from './create-product.dto';\n\nexport class UpdateProductDto extends PartialType(CreateProductDto) {}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateUserDto.html":{"url":"classes/UpdateUserDto.html","title":"class - UpdateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/User/dto/update-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/User/dto/update-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/swagger';\nimport { CreateUserDto } from './create-user.dto';\n\nexport class UpdateUserDto extends PartialType(CreateUserDto) {\n  id:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/User.html":{"url":"classes/User.html","title":"class - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/User/entities/user.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                bag\n                            \n                            \n                                cpf\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                email\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isAdmin\n                            \n                            \n                                name\n                            \n                            \n                                password\n                            \n                            \n                                    Optional\n                                product\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        bag\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Bag\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cpf\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        product\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Product\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/User/entities/user.entity.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Product} from\"src/Product/entities/product.entity\"\nimport { Bag } from \"src/Bag/entities/bag.entity\";\n\nexport class User {\n  id?: string;\n  name: string;\n  cpf: string;\n  email: string;\n  password: string;\n  isAdmin?: boolean;\n  product?:Product;\n  bag?:Bag;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/User/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                User\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                createADM\n                            \n                            \n                                delete\n                            \n                            \n                                findAll\n                            \n                            \n                                findOne\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('Create-user')@Post('create')@ApiOperation({summary: 'Criar um usuário comum'})\n                \n            \n\n            \n                \n                    Defined in src/User/user.controller.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createADM\n                        \n                    \n                \n            \n            \n                \ncreateADM(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('ADM')@Post('create-ADM')@ApiOperation({summary: 'Criar um usuário de nível \"ADM\"'})\n                \n            \n\n            \n                \n                    Defined in src/User/user.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(user: User)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User')@UseGuards(undefined)@ApiBearerAuth()@HttpCode(HttpStatus.NO_CONTENT)@Delete(':id')@ApiOperation({summary: 'Remove usuário logado. Apenas para ADM'})\n                \n            \n\n            \n                \n                    Defined in src/User/user.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findAll\n                        \n                    \n                \n            \n            \n                \nfindAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User')@UseGuards(undefined)@ApiBearerAuth()@Get('find')@ApiOperation({summary: 'Listar todos os usuários.'})\n                \n            \n\n            \n                \n                    Defined in src/User/user.controller.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        findOne\n                        \n                    \n                \n            \n            \n                \nfindOne(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User')@UseGuards(undefined)@ApiBearerAuth()@Get(':id')@ApiOperation({summary: 'Visualizar um usuário pelo Id.'})\n                \n            \n\n            \n                \n                    Defined in src/User/user.controller.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(user: User, updateUserDto: UpdateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiTags('User')@UseGuards(undefined)@ApiBearerAuth()@Patch(':id')@ApiOperation({summary: 'Editar dados do usuário logado'})\n                \n            \n\n            \n                \n                    Defined in src/User/user.controller.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Body, Patch, Param, Delete, UseGuards, HttpCode, HttpStatus } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { ApiBearerAuth, ApiOperation, ApiTags } from '@nestjs/swagger';\nimport { AuthGuard } from '@nestjs/passport';\nimport { User } from './entities/user.entity';\nimport { LoggedUser } from 'src/Auth/loggerd-user.decorator';\n\n@Controller('User')\nexport class UserController {\n  constructor(private readonly userService: UserService) {}\n\n  @ApiTags('ADM')\n  @Post('create-ADM')\n  @ApiOperation({ summary: 'Criar um usuário de nível \"ADM\"' })\n  createADM(@Body() createUserDto: CreateUserDto) {\n    return this.userService.createADM(createUserDto);\n  }\n\n  @ApiTags('Create-user')\n  @Post('create')\n  @ApiOperation({ summary: 'Criar um usuário comum' })\n  create(@Body() createUserDto: CreateUserDto) {\n    return this.userService.create(createUserDto);\n  }\n\n  @ApiTags('User')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get('find')\n  @ApiOperation({ summary: 'Listar todos os usuários.' })\n  findAll() {\n    return this.userService.findAll();\n  }\n\n  @ApiTags('User')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Get(':id')\n  @ApiOperation({ summary: 'Visualizar um usuário pelo Id.' })\n  findOne(@Param('id') id: string) {\n    return this.userService.findOne(id);\n  }\n\n  @ApiTags('User')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @Patch(':id')\n  @ApiOperation({ summary: 'Editar dados do usuário logado' })\n  update(@LoggedUser() user: User, @Body() updateUserDto: UpdateUserDto) {\n    updateUserDto.id = user.id;\n    return this.userService.update(user, updateUserDto);\n  }\n\n  @ApiTags('User')\n  @UseGuards(AuthGuard())\n  @ApiBearerAuth()\n  @HttpCode(HttpStatus.NO_CONTENT)\n  @Delete(':id')\n  @ApiOperation({\n    summary: 'Remove usuário logado. Apenas para ADM',\n  })\n  delete(@LoggedUser() user: User) {\n    return this.userService.delete(user);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nPrismaModule\n\nPrismaModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/User/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            PrismaModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { UserController } from './user.controller';\nimport { PrismaModule } from 'src/prisma/prisma.module';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [PrismaModule, PassportModule.register({ defaultStrategy: 'jwt' })],\n  controllers: [UserController],\n  providers: [UserService]\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/User/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                userSelect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                createADM\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(prisma: PrismaService)\n                    \n                \n                        \n                            \n                                Defined in src/User/user.service.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        prisma\n                                                  \n                                                        \n                                                                        PrismaService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/User/user.service.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createADM\n                        \n                    \n                \n            \n            \n                \n                    \n                    createADM(dto: CreateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/User/user.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    dto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/User/user.service.ts:149\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/User/user.service.ts:95\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/User/user.service.ts:111\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(user: User, updateUserDto: UpdateUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/User/user.service.ts:127\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateUserDto\n                                    \n                                                UpdateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userSelect\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    password: false,\n    id: true,\n    name: true,\n    email: true,\n    isAdmin: true,\n    cpf: true,\n    createdAt: true,\n    updatedAt: true,\n  }\n                    \n                \n                    \n                        \n                                Defined in src/User/user.service.ts:17\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {\n  BadRequestException,\n  Injectable,\n  NotFoundException,\n} from '@nestjs/common';\nimport { PrismaService } from 'src/prisma/prisma.service';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { UpdateUserDto } from './dto/update-user.dto';\nimport { User } from './entities/user.entity';\nimport * as bcrypt from 'bcrypt';\nimport { handleError } from 'src/utils/handleError.utils';\nimport { isAdmin } from 'src/utils/is-admin.utils';\nimport { Prisma } from '@prisma/client';\n\n@Injectable()\nexport class UserService {\n  private userSelect = {\n    password: false,\n    id: true,\n    name: true,\n    email: true,\n    isAdmin: true,\n    cpf: true,\n    createdAt: true,\n    updatedAt: true,\n  };\n\n  constructor(private readonly prisma: PrismaService) {}\n\n  async createADM(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      cpf: dto.cpf,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 10),\n      isAdmin:true,\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: {\n          password: false,\n          id: true,\n          name: true,\n          email: true,\n          isAdmin: true,\n          cpf: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n\n  async create(dto: CreateUserDto) {\n    if (dto.password != dto.confirmPassword) {\n      throw new BadRequestException('As senhas informadas não são iguais.');\n    }\n\n    delete dto.confirmPassword;\n\n    const data: Prisma.UserCreateInput = {\n      name: dto.name,\n      cpf: dto.cpf,\n      email: dto.email,\n      password: await bcrypt.hash(dto.password, 10),\n      isAdmin:false,\n    };\n\n    return this.prisma.user\n      .create({\n        data,\n        select: {\n          password: false,\n          id: true,\n          name: true,\n          email: true,\n          isAdmin: true,\n          cpf: true,\n          createdAt: true,\n          updatedAt: true,\n        },\n      })\n      .catch(handleError);\n  }\n\n  async findAll() {\n    const allUsers = await this.prisma.user.findMany({\n      select: {\n        id: true,\n        name: true,\n        password: false,\n      },\n    });\n\n    if (allUsers.length === 0) {\n      throw new NotFoundException('Não há usuários cadastrados.');\n    }\n\n    return allUsers;\n  }\n\n  async findOne(id: string) {\n    const record = await this.prisma.user.findUnique({\n      where: { id },\n      select: {\n        id: true,\n        name: true,\n        password: false,\n      },\n    });\n\n    if (!record) {\n      throw new NotFoundException(`Registro com id '${id}' não encontrado.`);\n    }\n    return record;\n  }\n\n  async update(user: User, updateUserDto: UpdateUserDto) {\n\n    if (updateUserDto.password) {\n      if (updateUserDto.password != updateUserDto.confirmPassword) {\n        throw new BadRequestException('As senhas informadas não são iguais.');\n      }\n    }\n\n    delete updateUserDto.confirmPassword;\n\n    const data: Partial = { ...updateUserDto };\n\n    if (data.password) {\n      data.password = await bcrypt.hash(data.password, 10);\n    }\n    const id = user.id;\n\n    return this.prisma.user\n      .update({ where: { id }, data, select: this.userSelect })\n      .catch(handleError);\n  }\n\n  async delete(user: User) {\n    const id = user.id;\n    return await this.prisma.user.delete({ where: { id } });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\nAll notable changes to this project will be documented in this file.\nThe format is based on Keep a Changelog, and this project adheres\nto Semantic Versioning.\nUnreleased\n1.0.0 - 2017-06-20\nAdded\n\nNew visual identity by @tylerfortune8.\nVersion navigation.\nLinks to latest released version in previous versions.\n\"Why keep a changelog?\" section.\n\"Who needs a changelog?\" section.\n\"How do I make a changelog?\" section.\n\"Frequently Asked Questions\" section.\nNew \"Guiding Principles\" sub-section to \"How do I make a changelog?\".\nSimplified and Traditional Chinese translations from @tianshuo.\nGerman translation from @mpbzh & @Art4.\nItalian translation from @azkidenz.\nSwedish translation from @magol.\nTurkish translation from @karalamalar.\nFrench translation from @zapashcanon.\nBrazilian Portugese translation from @Webysther.\nPolish translation from @amielucha & @m-aciek.\nRussian translation from @aishek.\nCzech translation from @h4vry.\nSlovak translation from @jkostolansky.\nKorean translation from @pierceh89.\nCroatian translation from @porx.\nPersian translation from @Hameds.\nUkrainian translation from @osadchyi-s.\n\nChanged\n\nStart using \"changelog\" over \"change log\" since it's the common usage.\nStart versioning based on the current English version at 0.3.0 to help translation authors keep things up-to-date.\nRewrite \"What makes unicorns cry?\" section.\nRewrite \"Ignoring Deprecations\" sub-section to clarify the ideal scenario.\nImprove \"Commit log diffs\" sub-section to further argument against them.\nMerge \"Why can’t people just use a git log diff?\" with \"Commit log diffs\"\nFix typos in Simplified Chinese and Traditional Chinese translations.\nFix typos in Brazilian Portuguese translation.\nFix typos in Turkish translation.\nFix typos in Czech translation.\nFix typos in Swedish translation.\nImprove phrasing in French translation.\nFix phrasing and spelling in German translation.\n\nRemoved\n\nSection about \"changelog\" vs \"CHANGELOG\".\n\n0.3.0 - 2015-12-03\nAdded\n\nRU translation from @aishek.\npt-BR translation from @tallesl.\nes-ES translation from @ZeliosAriex.\n\n0.2.0 - 2015-10-06\nChanged\n\nRemove exclusionary mentions of \"open source\" since this project can benefit both \"open\" and \"closed\" source projects\nequally.\n\n0.1.0 - 2015-10-06\nAdded\n\nAnswer \"Should you ever rewrite a change log?\".\n\nChanged\n\nImprove argument against commit logs.\nStart following SemVer properly.\n\n0.0.8 - 2015-02-17\nChanged\n\nUpdate year to match in every README example.\nReluctantly stop making fun of Brits only, since most of the world writes dates in a strange way.\n\nFixed\n\nFix typos in recent README changes.\nUpdate outdated unreleased diff link.\n\n0.0.7 - 2015-02-16\nAdded\n\nLink, and make it obvious that date format is ISO 8601.\n\nChanged\n\nClarified the section on \"Is there a standard change log format?\".\n\nFixed\n\nFix Markdown links to tag comparison URL with footnote-style links.\n\n0.0.6 - 2014-12-12\nAdded\n\nREADME section on \"yanked\" releases.\n\n0.0.5 - 2014-08-09\nAdded\n\nMarkdown links to version tags on release headings.\nUnreleased section to gather unreleased changes and encourage note keeping prior to releases.\n\n0.0.4 - 2014-08-09\nAdded\n\nBetter explanation of the difference between the file (\"CHANGELOG\")\nand its function \"the change log\".\n\nChanged\n\nRefer to a \"change log\" instead of a \"CHANGELOG\" throughout the site to differentiate between the file and the purpose\nof the file — the logging of changes.\n\nRemoved\n\nRemove empty sections from CHANGELOG, they occupy too much space and create too much noise in the file. People will\nhave to assume that the missing sections were intentionally left out because they contained no notable changes.\n\n0.0.3 - 2014-08-09\nAdded\n\n\"Why should I care?\" section mentioning The Changelog podcast.\n\n0.0.2 - 2014-07-10\nAdded\n\nExplanation of the recommended reverse chronological release ordering.\n\n0.0.1 - 2014-05-31\nAdded\n\nThis CHANGELOG file to hopefully serve as an evolving example of a standardized open source project CHANGELOG.\nCNAME file to enable GitHub Pages custom domain\nREADME now contains answers to common questions about CHANGELOGs\nGood examples and basic guidelines, including proper date formatting.\nCounter-examples: \"What makes unicorns cry?\"\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/Auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/dto/login.dto.ts\n            \n            class\n            LoginDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Auth/loggerd-user.decorator.ts\n            \n            variable\n            LoggedUser\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Bag/bag.controller.ts\n            \n            controller\n            BagController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/Bag/bag.service.ts\n            \n            injectable\n            BagService\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Bag/dto/create-bag.dto.ts\n            \n            class\n            CreateBagDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/Bag/dto/update-bag.dto.ts\n            \n            class\n            UpdateBagDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Bag/entities/bag.entity.ts\n            \n            class\n            Bag\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Category/category.controller.ts\n            \n            controller\n            CategoryController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Category/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Category/dto/create-category.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/Category/dto/update-category.dto.ts\n            \n            class\n            UpdateCategoryDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Category/entities/category.entity.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Product/dto/create-product.dto.ts\n            \n            class\n            CreateProductDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/Product/dto/update-product.dto.ts\n            \n            class\n            UpdateProductDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/Product/entities/product.entity.ts\n            \n            class\n            Product\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/Product/product.controller.ts\n            \n            controller\n            ProductController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/Product/product.service.ts\n            \n            injectable\n            ProductService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/User/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/User/dto/update-user.dto.ts\n            \n            class\n            UpdateUserDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/User/entities/user.entity.ts\n            \n            class\n            User\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/User/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/User/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/prisma/prisma.service.ts\n            \n            injectable\n            PrismaService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/utils/handleError.utils.ts\n            \n            function\n            handleError\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/is-admin.utils.ts\n            \n            function\n            isAdmin\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/is-owner.utils.ts\n            \n            function\n            isOwner\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/jwt : ^8.0.1\n        \n            @nestjs/passport : ^8.2.2\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            @prisma/client : ^3.15.2\n        \n            bcrypt : ^5.0.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            passport : ^0.5.0\n        \n            passport-jwt : ^4.0.0\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            handleError   (src/.../handleError.utils.ts)\n                        \n                        \n                            isAdmin   (src/.../is-admin.utils.ts)\n                        \n                        \n                            isOwner   (src/.../is-owner.utils.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/handleError.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        handleError\n                        \n                    \n                \n            \n            \n                \nhandleError(error: Error)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    error\n                                    \n                                            Error\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     undefined\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    src/utils/is-admin.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n            \n                \nisAdmin(user: User)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    src/utils/is-owner.utils.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        isOwner\n                        \n                    \n                \n            \n            \n                \nisOwner(user: User, id: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nProjeto API-Marketplace \nDescrição\ndescrição...\nDeploy da aplicação clicando aqui\nhttps://api-marketplace-production.up.railway.appSwagger clicando aqui\nhttps://api-marketplace-production.up.railway.app/apiPara clonar o projeto\nhttps://github.com/diegofreitas50/Api-marketplace.gitInstalação\nnpm installCriando tabelas no banco de dados local\nnpx prisma db pushRodando o app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodPriscipais ferramentas utilizadas\n\nNodeJS\nTypeScript\nNestJS\nPostgreSQL\nSwagger\nrailway\nCompodoc\n\nAutores\n\nDiego Freitas - Github, Linkedin\nFelipe dos Santos - Github, Linkedin\nAlexandre Silvestre - Github, Linkedin\n\nLicença\nEste projeto está sob a licença: Mozilla Public License Version 2.0 - veja o arquivo LICENSE.md para detalhes.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMozilla Public License Version 2.0\n\nDefinitions\n\n\n1.1. \"Contributor\"\n    means each individual or legal entity that creates, contributes to\n    the creation of, or owns Covered Software.\n1.2. \"Contributor Version\"\n    means the combination of the Contributions of others (if any) used\n    by a Contributor and that particular Contributor's Contribution.\n1.3. \"Contribution\"\n    means Covered Software of a particular Contributor.\n1.4. \"Covered Software\"\n    means Source Code Form to which the initial Contributor has attached\n    the notice in Exhibit A, the Executable Form of such Source Code\n    Form, and Modifications of such Source Code Form, in each case\n    including portions thereof.\n1.5. \"Incompatible With Secondary Licenses\"\n    means\n(a) that the initial Contributor has attached the notice described\n    in Exhibit B to the Covered Software; or\n\n(b) that the Covered Software was made available under the terms of\n    version 1.1 or earlier of the License, but not also under the\n    terms of a Secondary License.1.6. \"Executable Form\"\n    means any form of the work other than Source Code Form.\n1.7. \"Larger Work\"\n    means a work that combines Covered Software with other material, in\n    a separate file or files, that is not Covered Software.\n1.8. \"License\"\n    means this document.\n1.9. \"Licensable\"\n    means having the right to grant, to the maximum extent possible,\n    whether at the time of the initial grant or subsequently, any and\n    all of the rights conveyed by this License.\n1.10. \"Modifications\"\n    means any of the following:\n(a) any file in Source Code Form that results from an addition to,\n    deletion from, or modification of the contents of Covered\n    Software; or\n\n(b) any new file in Source Code Form that contains any Covered\n    Software.1.11. \"Patent Claims\" of a Contributor\n    means any patent claim(s), including without limitation, method,\n    process, and apparatus claims, in any patent Licensable by such\n    Contributor that would be infringed, but for the grant of the\n    License, by the making, using, selling, offering for sale, having\n    made, import, or transfer of either its Contributions or its\n    Contributor Version.\n1.12. \"Secondary License\"\n    means either the GNU General Public License, Version 2.0, the GNU\n    Lesser General Public License, Version 2.1, the GNU Affero General\n    Public License, Version 3.0, or any later versions of those\n    licenses.\n1.13. \"Source Code Form\"\n    means the form of the work preferred for making modifications.\n1.14. \"You\" (or \"Your\")\n    means an individual or a legal entity exercising rights under this\n    License. For legal entities, \"You\" includes any entity that\n    controls, is controlled by, or is under common control with You. For\n    purposes of this definition, \"control\" means (a) the power, direct\n    or indirect, to cause the direction or management of such entity,\n    whether by contract or otherwise, or (b) ownership of more than\n    fifty percent (50%) of the outstanding shares or beneficial\n    ownership of such entity.\n\nLicense Grants and Conditions\n\n\n2.1. Grants\nEach Contributor hereby grants You a world-wide, royalty-free,\nnon-exclusive license:\n(a) under intellectual property rights (other than patent or trademark)\n    Licensable by such Contributor to use, reproduce, make available,\n    modify, display, perform, distribute, and otherwise exploit its\n    Contributions, either on an unmodified basis, with Modifications, or\n    as part of a Larger Work; and\n(b) under Patent Claims of such Contributor to make, use, sell, offer\n    for sale, have made, import, and otherwise transfer either its\n    Contributions or its Contributor Version.\n2.2. Effective Date\nThe licenses granted in Section 2.1 with respect to any Contribution\nbecome effective for each Contribution on the date the Contributor first\ndistributes such Contribution.\n2.3. Limitations on Grant Scope\nThe licenses granted in this Section 2 are the only rights granted under\nthis License. No additional rights or licenses will be implied from the\ndistribution or licensing of Covered Software under this License.\nNotwithstanding Section 2.1(b) above, no patent license is granted by a\nContributor:\n(a) for any code that a Contributor has removed from Covered Software;\n    or\n(b) for infringements caused by: (i) Your and any other third party's\n    modifications of Covered Software, or (ii) the combination of its\n    Contributions with other software (except as part of its Contributor\n    Version); or\n(c) under Patent Claims infringed by Covered Software in the absence of\n    its Contributions.\nThis License does not grant any rights in the trademarks, service marks,\nor logos of any Contributor (except as may be necessary to comply with\nthe notice requirements in Section 3.4).\n2.4. Subsequent Licenses\nNo Contributor makes additional grants as a result of Your choice to\ndistribute the Covered Software under a subsequent version of this\nLicense (see Section 10.2) or under the terms of a Secondary License (if\npermitted under the terms of Section 3.3).\n2.5. Representation\nEach Contributor represents that the Contributor believes its\nContributions are its original creation(s) or it has sufficient rights\nto grant the rights to its Contributions conveyed by this License.\n2.6. Fair Use\nThis License is not intended to limit any rights You have under\napplicable copyright doctrines of fair use, fair dealing, or other\nequivalents.\n2.7. Conditions\nSections 3.1, 3.2, 3.3, and 3.4 are conditions of the licenses granted\nin Section 2.1.\n\nResponsibilities\n\n\n3.1. Distribution of Source Form\nAll distribution of Covered Software in Source Code Form, including any\nModifications that You create or to which You contribute, must be under\nthe terms of this License. You must inform recipients that the Source\nCode Form of the Covered Software is governed by the terms of this\nLicense, and how they can obtain a copy of this License. You may not\nattempt to alter or restrict the recipients' rights in the Source Code\nForm.\n3.2. Distribution of Executable Form\nIf You distribute Covered Software in Executable Form then:\n(a) such Covered Software must also be made available in Source Code\n    Form, as described in Section 3.1, and You must inform recipients of\n    the Executable Form how they can obtain a copy of such Source Code\n    Form by reasonable means in a timely manner, at a charge no more\n    than the cost of distribution to the recipient; and\n(b) You may distribute such Executable Form under the terms of this\n    License, or sublicense it under different terms, provided that the\n    license for the Executable Form does not attempt to limit or alter\n    the recipients' rights in the Source Code Form under this License.\n3.3. Distribution of a Larger Work\nYou may create and distribute a Larger Work under terms of Your choice,\nprovided that You also comply with the requirements of this License for\nthe Covered Software. If the Larger Work is a combination of Covered\nSoftware with a work governed by one or more Secondary Licenses, and the\nCovered Software is not Incompatible With Secondary Licenses, this\nLicense permits You to additionally distribute such Covered Software\nunder the terms of such Secondary License(s), so that the recipient of\nthe Larger Work may, at their option, further distribute the Covered\nSoftware under the terms of either this License or such Secondary\nLicense(s).\n3.4. Notices\nYou may not remove or alter the substance of any license notices\n(including copyright notices, patent notices, disclaimers of warranty,\nor limitations of liability) contained within the Source Code Form of\nthe Covered Software, except that You may alter any license notices to\nthe extent required to remedy known factual inaccuracies.\n3.5. Application of Additional Terms\nYou may choose to offer, and to charge a fee for, warranty, support,\nindemnity or liability obligations to one or more recipients of Covered\nSoftware. However, You may do so only on Your own behalf, and not on\nbehalf of any Contributor. You must make it absolutely clear that any\nsuch warranty, support, indemnity, or liability obligation is offered by\nYou alone, and You hereby agree to indemnify every Contributor for any\nliability incurred by such Contributor as a result of warranty, support,\nindemnity or liability terms You offer. You may include additional\ndisclaimers of warranty and limitations of liability specific to any\njurisdiction.\n\nInability to Comply Due to Statute or Regulation\n\n\nIf it is impossible for You to comply with any of the terms of this\nLicense with respect to some or all of the Covered Software due to\nstatute, judicial order, or regulation then You must: (a) comply with\nthe terms of this License to the maximum extent possible; and (b)\ndescribe the limitations and the code they affect. Such description must\nbe placed in a text file included with all distributions of the Covered\nSoftware under this License. Except to the extent prohibited by statute\nor regulation, such description must be sufficiently detailed for a\nrecipient of ordinary skill to be able to understand it.\n\nTermination\n\n\n5.1. The rights granted under this License will terminate automatically\nif You fail to comply with any of its terms. However, if You become\ncompliant, then the rights granted under this License from a particular\nContributor are reinstated (a) provisionally, unless and until such\nContributor explicitly and finally terminates Your grants, and (b) on an\nongoing basis, if such Contributor fails to notify You of the\nnon-compliance by some reasonable means prior to 60 days after You have\ncome back into compliance. Moreover, Your grants from a particular\nContributor are reinstated on an ongoing basis if such Contributor\nnotifies You of the non-compliance by some reasonable means, this is the\nfirst time You have received notice of non-compliance with this License\nfrom such Contributor, and You become compliant prior to 30 days after\nYour receipt of the notice.\n5.2. If You initiate litigation against any entity by asserting a patent\ninfringement claim (excluding declaratory judgment actions,\ncounter-claims, and cross-claims) alleging that a Contributor Version\ndirectly or indirectly infringes any patent, then the rights granted to\nYou by any and all Contributors for the Covered Software under Section\n2.1 of this License shall terminate.\n5.3. In the event of termination under Sections 5.1 or 5.2 above, all\nend user license agreements (excluding distributors and resellers) which\nhave been validly granted by You or Your distributors under this License\nprior to termination shall survive termination.\n\n\n                                                                 *\n\nDisclaimer of Warranty                                           *\n\n\n-------------------------                                           *\n                                                                 *\nCovered Software is provided under this License on an \"as is\"       *\nbasis, without warranty of any kind, either expressed, implied, or  *\nstatutory, including, without limitation, warranties that the       *\nCovered Software is free of defects, merchantable, fit for a        *\nparticular purpose or non-infringing. The entire risk as to the     *\nquality and performance of the Covered Software is with You.        *\nShould any Covered Software prove defective in any respect, You     *\n(not any Contributor) assume the cost of any necessary servicing,   *\nrepair, or correction. This disclaimer of warranty constitutes an   *\nessential part of this License. No use of any Covered Software is   *\nauthorized under this License except under this disclaimer.         *\n                                                                 *\n\n\n\n\n                                                                 *\n\nLimitation of Liability                                          *\n\n\n--------------------------                                          *\n                                                                 *\nUnder no circumstances and under no legal theory, whether tort      *\n(including negligence), contract, or otherwise, shall any           *\nContributor, or anyone who distributes Covered Software as          *\npermitted above, be liable to You for any direct, indirect,         *\nspecial, incidental, or consequential damages of any character      *\nincluding, without limitation, damages for lost profits, loss of    *\ngoodwill, work stoppage, computer failure or malfunction, or any    *\nand all other commercial damages or losses, even if such party      *\nshall have been informed of the possibility of such damages. This   *\nlimitation of liability shall not apply to liability for death or   *\npersonal injury resulting from such party's negligence to the       *\nextent applicable law prohibits such limitation. Some               *\njurisdictions do not allow the exclusion or limitation of           *\nincidental or consequential damages, so this exclusion and          *\nlimitation may not apply to You.                                    *\n                                                                 *\n\n\n\nLitigation\n\n\nAny litigation relating to this License may be brought only in the\ncourts of a jurisdiction where the defendant maintains its principal\nplace of business and such litigation shall be governed by laws of that\njurisdiction, without reference to its conflict-of-law provisions.\nNothing in this Section shall prevent a party's ability to bring\ncross-claims or counter-claims.\n\nMiscellaneous\n\n\nThis License represents the complete agreement concerning the subject\nmatter hereof. If any provision of this License is held to be\nunenforceable, such provision shall be reformed only to the extent\nnecessary to make it enforceable. Any law or regulation which provides\nthat the language of a contract shall be construed against the drafter\nshall not be used to construe this License against a Contributor.\n\nVersions of the License\n\n\n10.1. New Versions\nMozilla Foundation is the license steward. Except as provided in Section\n10.3, no one other than the license steward has the right to modify or\npublish new versions of this License. Each version will be given a\ndistinguishing version number.\n10.2. Effect of New Versions\nYou may distribute the Covered Software under the terms of the version\nof the License under which You originally received the Covered Software,\nor under the terms of any subsequent version published by the license\nsteward.\n10.3. Modified Versions\nIf you create software not governed by this License, and you want to\ncreate a new license for such software, you may create and use a\nmodified version of this License if you rename the license and remove\nany references to the name of the license steward (except to note that\nsuch modified license differs from this License).\n10.4. Distributing Source Code Form that is Incompatible With Secondary\nLicenses\nIf You choose to distribute Source Code Form that is Incompatible With\nSecondary Licenses under the terms of this version of the License, the\nnotice described in Exhibit B of this License must be attached.\nExhibit A - Source Code Form License Notice\n  This Source Code Form is subject to the terms of the Mozilla Public\n  License, v. 2.0. If a copy of the MPL was not distributed with this\n  file, You can obtain one at http://mozilla.org/MPL/2.0/.\nIf it is not possible or desirable to put the notice in a particular\nfile, then You may include the notice in a location (such as a LICENSE\nfile in a relevant directory) where a recipient would be likely to look\nfor such a notice.\nYou may add additional accurate notices of copyright ownership.\nExhibit B - \"Incompatible With Secondary Licenses\" Notice\n  This Source Code Form is \"Incompatible With Secondary Licenses\", as\n  defined by the Mozilla Public License, v. 2.0.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        BagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CategoryModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PrismaModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProductModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_BagModule\n\n\n\ncluster_BagModule_providers\n\n\n\ncluster_CategoryModule\n\n\n\ncluster_CategoryModule_providers\n\n\n\ncluster_PrismaModule\n\n\n\ncluster_PrismaModule_exports\n\n\n\ncluster_PrismaModule_providers\n\n\n\ncluster_ProductModule\n\n\n\ncluster_ProductModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nBagModule\n\nBagModule\n\nAppModule -->\n\nBagModule->AppModule\n\n\n\n\n\nCategoryModule\n\nCategoryModule\n\nAppModule -->\n\nCategoryModule->AppModule\n\n\n\n\n\nPrismaModule\n\nPrismaModule\n\nAuthModule -->\n\nPrismaModule->AuthModule\n\n\n\nBagModule -->\n\nPrismaModule->BagModule\n\n\n\nCategoryModule -->\n\nPrismaModule->CategoryModule\n\n\n\n\n\nProductModule\n\nProductModule\n\nProductModule -->\n\nPrismaModule->ProductModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nPrismaModule->UserModule\n\n\n\nAppModule -->\n\nPrismaModule->AppModule\n\n\n\n\n\nPrismaService \n\nPrismaService \n\nPrismaService  -->\n\nPrismaModule->PrismaService \n\n\n\nAppModule -->\n\nProductModule->AppModule\n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nBagService\n\nBagService\n\nBagModule -->\n\nBagService->BagModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\nCategoryModule -->\n\nCategoryService->CategoryModule\n\n\n\n\n\nPrismaService\n\nPrismaService\n\nPrismaModule -->\n\nPrismaService->PrismaModule\n\n\n\n\n\nProductService\n\nProductService\n\nProductModule -->\n\nProductService->ProductModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    6 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"todo.html":{"url":"todo.html","title":"getting-started - todo","body":"\n                   \n\nTodo\nIn Progress\nDone ✓\n\n Estrutura do banco de dados\n criar os relacionamentos entre as entidades\n swagger\n Deploy\n incluir função isOwner em todas as rotas ligadas a Bag (área restrita ao usuário)\n incluir função isOwner nos campos update e delete products  (área restrita ao usuário)\n CRUD completo de todas as entidades\n Incluir a função loggedUser nos campos devidos\n Criar a rota de criação de usuário nível \"ADM\".\n criar a rota que faz a busca apenas de produtos disponíveis.\n Incluir a função isAdmin nos campos devidos\n Readme\n Testar API\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            LoggedUser   (src/.../loggerd-user.decorator.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/Auth/loggerd-user.decorator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        LoggedUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createParamDecorator((_, ctx: ExecutionContext) => {\n  const request = ctx.switchToHttp().getRequest();\n  const user = request.user;\n\n  delete user.password;\n\n  return user;\n})\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
